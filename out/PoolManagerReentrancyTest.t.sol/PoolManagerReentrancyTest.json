{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "depth",
          "type": "uint256"
        }
      ],
      "name": "assertionChecker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PoolManager",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "contract IHooks",
          "name": "hooks",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "uint160",
          "name": "sqrtPriceX96",
          "type": "uint160"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "key",
          "type": "tuple"
        },
        {
          "internalType": "PoolId",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testParallelLocker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSimpleLinearLocker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenLocker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenRevert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "4322:1534:85:-:0;;;1572:26:2;;;1594:4;-1:-1:-1;;1572:26:2;;;;;;;;3288:44:6;;;;;;;;;;;4322:1534:85;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "4322:1534:85:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4422:109;;;:::i;:::-;;2161:134:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;2631:141::-;;;:::i;4826:375:85:-;;;:::i;2447:178:9:-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;5207:229:85:-;;;;;;:::i;:::-;;:::i;1658:242:95:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2778:146:9:-;;;:::i;5726:128:85:-;;;:::i;4537:283::-;;;:::i;1866:141:9:-;;;:::i;1819:584:2:-;;;:::i;:::-;;;5730:14:98;;5723:22;5705:41;;5693:2;5678:18;1819:584:2;5565:187:98;2013:142:9;;;:::i;5442:278:85:-;;;:::i;1572:26:2:-;;;;;;;;;4422:109:85;4456:18;:16;:18::i;:::-;4494:30;:28;:30::i;:::-;4484:7;:40;;-1:-1:-1;;4484:40:85;-1:-1:-1;;;;;4484:40:85;;;;;;;;;;4422:109::o;2161:134:9:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:9;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:9;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:9;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;4826:375:85:-;4870:18;4891:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4944:9:85;;4918:62;;-1:-1:-1;;;4918:62:85;;-1:-1:-1;;;;;5957:55:98;;;4918:62:85;;;5939:74:98;4944:9:85;6029:18:98;;;6022:34;4870:38:85;;-1:-1:-1;4944:9:85;;;4918:42;;5912:18:98;;4918:62:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5016:9:85;;4990:65;;-1:-1:-1;;;4990:65:85;;-1:-1:-1;;;;;5957:55:98;;;4990:65:85;;;5939:74:98;5016:9:85;6029:18:98;;;6022:34;5016:9:85;;;;-1:-1:-1;4990:45:85;;-1:-1:-1;5912:18:98;;4990:65:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5081:64:85;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5081:64:85;-1:-1:-1;;;5081:64:85;;;5065:81;;-1:-1:-1;;;5065:81:85;;:15;;;;:81;;5081:64;;5065:81;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5168:7:85;;5177:9;;5156:38;;-1:-1:-1;;;5156:38:85;;-1:-1:-1;;;;;5168:7:85;;;5156:38;;;6880:34:98;5177:9:85;;;6930:18:98;;;6923:43;5168:7:85;6982:18:98;;;6975:50;5156:11:85;;;;-1:-1:-1;5156:11:85;;-1:-1:-1;6792:18:98;;5156:38:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4860:341;4826:375::o;2447:178:9:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5207:229:85;5287:7;;:18;;;-1:-1:-1;;;5287:18:85;;;;5268:14;;-1:-1:-1;;;;;5287:7:85;;:16;;:18;;;;;;;;;;;:7;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5267:38:85;-1:-1:-1;5315:27:85;;;;5332:9;:5;5340:1;5332:9;:::i;:::-;5315:8;:27::i;:::-;5369:7;;:22;;-1:-1:-1;;;5369:22:85;;;;;8324:25:98;;;5352:14:85;;-1:-1:-1;;;;;5369:7:85;;:15;;8297:18:98;;5369:22:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5352:39;;5401:28;5410:6;5418:10;5401:8;:28::i;:::-;5257:179;;5207:229;:::o;1658:242:95:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:12:95;;;;;;;;;;;-1:-1:-1;;1836:57:95;;1847:7;;1856:5;;1863:3;;1868:12;;1836:10;:57::i;:::-;1824:69;;;;-1:-1:-1;1658:242:95;-1:-1:-1;;;;;1658:242:95:o;2778:146:9:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5726:128:85;5816:7;;5797:27;;5773:21;;-1:-1:-1;;;;;5816:7:85;;5797:27;;;:::i;:::-;-1:-1:-1;;;;;8946:55:98;;;8928:74;;8916:2;8901:18;5797:27:85;;;;;;;;;;;;;;;;;;;;;;;5773:51;;5834:6;-1:-1:-1;;;;;5834:11:85;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4537:283;4581:18;4602:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4655:9:85;;4629:62;;-1:-1:-1;;;4629:62:85;;-1:-1:-1;;;;;5957:55:98;;;4629:62:85;;;5939:74:98;4655:9:85;6029:18:98;;;6022:34;4581:38:85;;-1:-1:-1;4655:9:85;;;4629:42;;5912:18:98;;4629:62:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4727:9:85;;4701:65;;-1:-1:-1;;;4701:65:85;;-1:-1:-1;;;;;5957:55:98;;;4701:65:85;;;5939:74:98;4727:9:85;6029:18:98;;;6022:34;4727:9:85;;;;-1:-1:-1;4701:45:85;;-1:-1:-1;5912:18:98;;4701:65:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4788:7:85;;4797:9;;4776:37;;-1:-1:-1;;;4776:37:85;;-1:-1:-1;;;;;4788:7:85;;;4776:37;;;6880:34:98;4797:9:85;;;6930:18:98;;;6923:43;4788:7:85;6982:18:98;;;6975:50;4776:11:85;;;;;;6792:18:98;;4776:37:85;6572:459:98;1866:141:9;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:2;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:2;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;5939:74:98;;;-1:-1:-1;;;6029:18:98;;;6022:34;2196:43:2;;;;;;;;;5912:18:98;;;2196:43:2;;;-1:-1:-1;;1671:64:2;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:2;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:2:o;2013:142:9:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:9;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;5442:278:85:-;5493:25;5521:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5567:7:85;;5555:46;;-1:-1:-1;;;5555:46:85;;5493:52;;-1:-1:-1;;;;;;5555:11:85;;;;;;:46;;5567:7;;;;5579:4;;:21;;5555:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5623:7:85;;5611:46;;-1:-1:-1;;;5611:46:85;;-1:-1:-1;;;;;5611:11:85;;;;-1:-1:-1;5611:11:85;;-1:-1:-1;5611:46:85;;5623:7;;;;5635:4;;:21;;5611:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5679:7:85;;5667:46;;-1:-1:-1;;;5667:46:85;;-1:-1:-1;;;;;5667:11:85;;;;-1:-1:-1;5667:11:85;;-1:-1:-1;5667:46:85;;5679:7;;5688:1;;5691:4;;:21;;5667:46;;;:::i;327:327:97:-;374:16;421:2;393:31;;;;;:::i;:::-;12188:2:98;12170:21;;;12227:1;12207:18;;;12200:29;12266:7;12260:3;12245:19;;12238:36;12312:3;12305:4;12290:20;;12283:33;;;12353:1;12332:19;;;12325:30;-1:-1:-1;;;12386:3:98;12371:19;;12364:32;12480:4;12468:17;;;-1:-1:-1;12448:18:98;;12441:45;12428:3;12413:19;393:31:97;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;434:38:97;;-1:-1:-1;;;434:38:97;;454:4;434:38;;;5939:74:98;461:10:97;6029:18:98;;;6022:34;374:50:97;;-1:-1:-1;;;;;;434:11:97;;;;;5912:18:98;;434:38:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;482:16;529:2;501:31;;;;;:::i;:::-;13166:2:98;13148:21;;;13205:1;13185:18;;;13178:29;13244:7;13238:3;13223:19;;13216:36;13290:3;13283:4;13268:20;;13261:33;;;13331:1;13310:19;;;13303:30;-1:-1:-1;;;13364:3:98;13349:19;;13342:32;13458:4;13446:17;;;-1:-1:-1;13426:18:98;;13419:45;13406:3;13391:19;501:31:97;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;542:38:97;;-1:-1:-1;;;542:38:97;;562:4;542:38;;;5939:74:98;569:10:97;6029:18:98;;;6022:34;482:50:97;;-1:-1:-1;;;;;;542:11:97;;;;;5912:18:98;;542:38:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;616:31;632:6;640;616:15;:31::i;:::-;603:9;591:56;;-1:-1:-1;;;;;591:56:97;;;-1:-1:-1;;591:56:97;;;;;;;592:9;591:56;;;;;;;;;;;;;;-1:-1:-1;;327:327:97:o;3418:119:95:-;3466:19;3523:6;3507:23;;;;;:::i;:::-;8324:25:98;;;8312:2;8297:18;3507:23:95;;;;;;;;;;;;;;;;;;;;;;;3497:33;;3418:119;:::o;5209:262:2:-;5271:1;5266;:6;5262:203;;5293:41;;;;;13872:2:98;13854:21;;;13911:2;13891:18;;;13884:30;13950:34;13945:2;13930:18;;13923:62;-1:-1:-1;;;14016:2:98;14001:18;;13994:32;14058:3;14043:19;;13670:398;5293:41:2;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;3622:277::-;3690:1;-1:-1:-1;;;;;3685:6:2;:1;-1:-1:-1;;;;;3685:6:2;;3681:212;;3712:44;;;;;15309:2:98;15291:21;;;15348:2;15328:18;;;15321:30;15387:34;15382:2;15367:18;;15360:62;15458:7;15453:2;15438:18;;15431:35;15498:3;15483:19;;15107:401;3712:44:2;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;1906:534:95:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2124:25:95;2137:1;-1:-1:-1;;;2124:12:95;:25::i;:::-;2096:53;;2160:18;2180;2202:37;2218:6;2225:1;2218:9;;;;;;;;:::i;:::-;;;;;;;2229:6;2236:1;2229:9;;;;;;;;:::i;:::-;;;;;;;2202:15;:37::i;:::-;2159:80;;;;2255:96;;;;;;;;2263:9;-1:-1:-1;;;;;2255:96:95;;;;;2274:9;-1:-1:-1;;;;;2255:96:95;;;;;2285:3;2255:96;;;;;;2290:18;:3;:16;;193:8:44;433:23;:28;;;352:116;2290:18:95;:53;;2329:9;2335:3;2329;:9;:::i;:::-;:13;;2341:1;2329:13;:::i;:::-;2290:53;;;2317:2;2290:53;2255:96;;;;;;2345:5;-1:-1:-1;;;;;2255:96:95;;;;2249:102;;2366:10;:3;:8;:10::i;:::-;2386:47;;-1:-1:-1;;;2386:47:95;;2361:15;;-1:-1:-1;;;;;;2386:18:95;;;;;:47;;2405:3;;2410:12;;2424:8;;2386:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2086:354;;;1906:534;;;;;;;;:::o;212:436:96:-;309:19;330;395:6;-1:-1:-1;;;;;369:33:96;377:6;-1:-1:-1;;;;;369:33:96;;365:277;;;-1:-1:-1;468:6:96;;-1:-1:-1;500:6:96;365:277;;;-1:-1:-1;590:6:96;;-1:-1:-1;622:6:96;365:277;212:436;;;;;:::o;2409:432:2:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;17965:74:98;;;-1:-1:-1;;;18055:18:98;;;18048:34;;;;2712:4:2;18098:18:98;;;18091:34;2489:11:2;;1671:64;2586:43;;17938:18:98;;2652:67:2;;;-1:-1:-1;;2652:67:2;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:2;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:2;2820:7;:14;;-1:-1:-1;;2820:14:2;;;;;2409:432::o;1334:318:95:-;1408:25;1470:5;1454:22;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1454:22:95;;1445:31;;1491:7;1486:160;1508:5;1504:9;;:1;:9;;;1486:160;;;1576:2;1546:33;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1534:6;1541:1;1534:9;;;;;;;;;;:::i;:::-;;;;;;:45;-1:-1:-1;;;;;1534:45:95;;;-1:-1:-1;;;;;1534:45:95;;;;;1593:6;1600:1;1593:9;;;;;;;;;;:::i;:::-;;;;;;;;;;;:42;;-1:-1:-1;;;1593:42:95;;1616:4;1593:42;;;5939:74:98;6029:18;;;6022:34;;;-1:-1:-1;;;;;1593:14:95;;;;;;5912:18:98;;1593:42:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1515:3:95;;;;;-1:-1:-1;1486:160:95;;-1:-1:-1;1486:160:95;;;1334:318;;;;:::o;202:136:74:-;263:6;321:7;310:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;300:30;;;;;;281:50;;202:136;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:681:98:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;-1:-1:-1;;;;;526:62:98;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:98;;14:681;-1:-1:-1;;;;;;14:681:98:o;700:1590::-;902:4;931:2;971;960:9;956:18;1001:2;990:9;983:21;1024:6;1059;1053:13;1090:6;1082;1075:22;1116:2;1106:12;;1149:2;1138:9;1134:18;1127:25;;1211:2;1201:6;1198:1;1194:14;1183:9;1179:30;1175:39;1249:2;1241:6;1237:15;1270:1;1291;1301:960;1317:6;1312:3;1309:15;1301:960;;;1386:22;;;-1:-1:-1;;1382:36:98;1370:49;;1442:13;;1529:9;;-1:-1:-1;;;;;1525:58:98;1510:74;;1623:11;;1617:18;1655:15;;;1648:27;;;1736:19;;1482:15;;;1768:24;;;1858:21;;;;1903:1;;1826:2;1814:15;;;1917:236;1933:8;1928:3;1925:17;1917:236;;;2014:15;;2031:20;2010:42;1996:57;;2122:17;;;;1961:1;1952:11;;;;;2079:14;;;;1917:236;;;-1:-1:-1;2239:12:98;;;;2176:5;-1:-1:-1;;;2204:15:98;;;;1343:1;1334:11;1301:960;;;-1:-1:-1;2278:6:98;;700:1590;-1:-1:-1;;;;;;;;;700:1590:98:o;2295:250::-;2380:1;2390:113;2404:6;2401:1;2398:13;2390:113;;;2480:11;;;2474:18;2461:11;;;2454:39;2426:2;2419:10;2390:113;;;-1:-1:-1;;2537:1:98;2519:16;;2512:27;2295:250::o;2550:271::-;2592:3;2630:5;2624:12;2657:6;2652:3;2645:19;2673:76;2742:6;2735:4;2730:3;2726:14;2719:4;2712:5;2708:16;2673:76;:::i;:::-;2803:2;2782:15;-1:-1:-1;;2778:29:98;2769:39;;;;2810:4;2765:50;;2550:271;-1:-1:-1;;2550:271:98:o;2826:803::-;2988:4;3017:2;3057;3046:9;3042:18;3087:2;3076:9;3069:21;3110:6;3145;3139:13;3176:6;3168;3161:22;3214:2;3203:9;3199:18;3192:25;;3276:2;3266:6;3263:1;3259:14;3248:9;3244:30;3240:39;3226:53;;3314:2;3306:6;3302:15;3335:1;3345:255;3359:6;3356:1;3353:13;3345:255;;;3452:2;3448:7;3436:9;3428:6;3424:22;3420:36;3415:3;3408:49;3480:40;3513:6;3504;3498:13;3480:40;:::i;:::-;3470:50;-1:-1:-1;3578:12:98;;;;3543:15;;;;3381:1;3374:9;3345:255;;;-1:-1:-1;3617:6:98;;2826:803;-1:-1:-1;;;;;;;2826:803:98:o;3634:180::-;3693:6;3746:2;3734:9;3725:7;3721:23;3717:32;3714:52;;;3762:1;3759;3752:12;3714:52;-1:-1:-1;3785:23:98;;3634:180;-1:-1:-1;3634:180:98:o;3819:167::-;-1:-1:-1;;;;;3911:5:98;3907:54;3900:5;3897:65;3887:93;;3976:1;3973;3966:12;3887:93;3819:167;:::o;3991:776::-;4113:6;4121;4129;4137;4190:3;4178:9;4169:7;4165:23;4161:33;4158:53;;;4207:1;4204;4197:12;4158:53;4246:9;4233:23;4265:44;4303:5;4265:44;:::i;:::-;4328:5;-1:-1:-1;4385:2:98;4370:18;;4357:32;4398:46;4357:32;4398:46;:::i;:::-;4463:7;-1:-1:-1;4522:2:98;4507:18;;4494:32;4570:8;4557:22;;4545:35;;4535:63;;4594:1;4591;4584:12;4535:63;4617:7;-1:-1:-1;4676:2:98;4661:18;;4648:32;4689:46;4648:32;4689:46;:::i;:::-;3991:776;;;;-1:-1:-1;3991:776:98;;-1:-1:-1;;3991:776:98:o;5211:349::-;5453:3;5438:19;;5466:44;5442:9;5492:6;-1:-1:-1;;;;;4924:2:98;4916:5;4910:12;4906:21;4901:3;4894:34;4989:2;4981:4;4974:5;4970:16;4964:23;4960:32;4953:4;4948:3;4944:14;4937:56;5054:8;5046:4;5039:5;5035:16;5029:23;5025:38;5018:4;5013:3;5009:14;5002:62;5127:4;5120:5;5116:16;5110:23;5107:1;5096:38;5089:4;5084:3;5080:14;5073:62;5196:2;5188:4;5181:5;5177:16;5171:23;5167:32;5160:4;5155:3;5151:14;5144:56;;4772:434;;;5466:44;5547:6;5541:3;5530:9;5526:19;5519:35;5211:349;;;;;:::o;6067:277::-;6134:6;6187:2;6175:9;6166:7;6162:23;6158:32;6155:52;;;6203:1;6200;6193:12;6155:52;6235:9;6229:16;6288:5;6281:13;6274:21;6267:5;6264:32;6254:60;;6310:1;6307;6300:12;6254:60;6333:5;6067:277;-1:-1:-1;;;6067:277:98:o;6349:218::-;6496:2;6485:9;6478:21;6459:4;6516:45;6557:2;6546:9;6542:18;6534:6;6516:45;:::i;7036:380::-;7115:1;7111:12;;;;7158;;;7179:61;;7233:4;7225:6;7221:17;7211:27;;7179:61;7286:2;7278:6;7275:14;7255:18;7252:38;7249:161;;7332:10;7327:3;7323:20;7320:1;7313:31;7367:4;7364:1;7357:15;7395:4;7392:1;7385:15;7249:161;;7036:380;;;:::o;7421:192::-;7500:13;;7553:34;7542:46;;7532:57;;7522:85;;7603:1;7600;7593:12;7618:293;7697:6;7705;7758:2;7746:9;7737:7;7733:23;7729:32;7726:52;;;7774:1;7771;7764:12;7726:52;7797:40;7827:9;7797:40;:::i;:::-;7787:50;;7856:49;7901:2;7890:9;7886:18;7856:49;:::i;:::-;7846:59;;7618:293;;;;;:::o;7916:127::-;7977:10;7972:3;7968:20;7965:1;7958:31;8008:4;8005:1;7998:15;8032:4;8029:1;8022:15;8048:125;8113:9;;;8134:10;;;8131:36;;;8147:18;;:::i;:::-;8048:125;;;;:::o;8360:264::-;8430:6;8483:2;8471:9;8462:7;8458:23;8454:32;8451:52;;;8499:1;8496;8489:12;8451:52;8531:9;8525:16;8550:44;8588:5;8550:44;:::i;8629:127::-;8690:10;8685:3;8681:20;8678:1;8671:31;8721:4;8718:1;8711:15;8745:4;8742:1;8735:15;9315:384;9512:20;9500:33;;9488:46;;9557:13;;9470:3;;9579:74;9557:13;9642:1;9633:11;;9626:4;9614:17;;9579:74;:::i;:::-;9673:16;;;;9691:1;9669:24;;9315:384;-1:-1:-1;;;9315:384:98:o;9704:287::-;9833:3;9871:6;9865:13;9887:66;9946:6;9941:3;9934:4;9926:6;9922:17;9887:66;:::i;:::-;9969:16;;;;;9704:287;-1:-1:-1;;9704:287:98:o;10179:552::-;-1:-1:-1;;;;;10526:55:98;;10508:74;;10613:2;10598:18;;10591:34;;;10496:2;10481:18;;10634:91;10721:2;10706:18;;10698:6;10690;10126:2;10122:13;10154:10;10137:28;;;;10119:47;10115:2;10111:56;10099:69;;9996:178;10634:91;10179:552;;;;;;;:::o;14237:348::-;14467:2;14456:9;14449:21;14430:4;14487:49;14532:2;14521:9;14517:18;14150:2;14138:15;;-1:-1:-1;;;14178:4:98;14169:14;;14162:36;14223:2;14214:12;;14073:159;14487:49;14479:57;;14572:6;14567:2;14556:9;14552:18;14545:34;14237:348;;;;:::o;14754:::-;14984:2;14973:9;14966:21;14947:4;15004:49;15049:2;15038:9;15034:18;14667:2;14655:15;;-1:-1:-1;;;14695:4:98;14686:14;;14679:36;14740:2;14731:12;;14590:159;15513:397;15743:2;15732:9;15725:21;15706:4;15763:49;15808:2;15797:9;15793:18;14150:2;14138:15;;-1:-1:-1;;;14178:4:98;14169:14;;14162:36;14223:2;14214:12;;14073:159;15763:49;15755:57;;-1:-1:-1;;;;;15852:6:98;15848:55;15843:2;15832:9;15828:18;15821:83;15513:397;;;;:::o;15915:::-;16145:2;16134:9;16127:21;16108:4;16165:49;16210:2;16199:9;16195:18;14667:2;14655:15;;-1:-1:-1;;;14695:4:98;14686:14;;14679:36;14740:2;14731:12;;14590:159;16317:127;16378:10;16373:3;16369:20;16366:1;16359:31;16409:4;16406:1;16399:15;16433:4;16430:1;16423:15;16449:286;16488:1;16514:8;16549:2;16546:1;16542:10;16571:3;16561:134;;16617:10;16612:3;16608:20;16605:1;16598:31;16652:4;16649:1;16642:15;16680:4;16677:1;16670:15;16561:134;16713:10;;16709:20;;;;;16449:286;-1:-1:-1;;16449:286:98:o;16740:247::-;16811:8;16851:10;;;16863;;;16847:27;16894:20;;;;16811:8;16933:24;;;16923:58;;16961:18;;:::i;:::-;16923:58;;16740:247;;;;:::o;16992:484::-;17229:44;17263:9;17255:6;-1:-1:-1;;;;;4924:2:98;4916:5;4910:12;4906:21;4901:3;4894:34;4989:2;4981:4;4974:5;4970:16;4964:23;4960:32;4953:4;4948:3;4944:14;4937:56;5054:8;5046:4;5039:5;5035:16;5029:23;5025:38;5018:4;5013:3;5009:14;5002:62;5127:4;5120:5;5116:16;5110:23;5107:1;5096:38;5089:4;5084:3;5080:14;5073:62;5196:2;5188:4;5181:5;5177:16;5171:23;5167:32;5160:4;5155:3;5151:14;5144:56;;4772:434;;;17229:44;-1:-1:-1;;;;;17314:6:98;17310:55;17304:3;17293:9;17289:19;17282:84;17403:3;17397;17386:9;17382:19;17375:32;17210:4;17424:46;17465:3;17454:9;17450:19;17442:6;17424:46;:::i;17481:277::-;17549:6;17602:2;17590:9;17581:7;17577:23;17573:32;17570:52;;;17618:1;17615;17608:12;17570:52;17650:9;17644:16;17703:5;17700:1;17689:20;17682:5;17679:31;17669:59;;17724:1;17721;17714:12;18293:586;18631:2;18620:9;18613:21;18594:4;18657:49;18702:2;18691:9;18687:18;18213:1;18201:14;;-1:-1:-1;;;18240:4:98;18231:14;;18224:30;18279:2;18270:12;;18136:152;18657:49;18754:9;18746:6;18742:22;18737:2;18726:9;18722:18;18715:50;18782:37;18812:6;18213:1;18201:14;;-1:-1:-1;;;18240:4:98;18231:14;;18224:30;18279:2;18270:12;;18136:152;18782:37;18774:45;;;18867:4;18859:6;18855:17;18850:2;18839:9;18835:18;18828:45;18293:586;;;;:::o;19186:249::-;19372:3;19357:19;;19385:44;19361:9;19411:6;-1:-1:-1;;;;;4924:2:98;4916:5;4910:12;4906:21;4901:3;4894:34;4989:2;4981:4;4974:5;4970:16;4964:23;4960:32;4953:4;4948:3;4944:14;4937:56;5054:8;5046:4;5039:5;5035:16;5029:23;5025:38;5018:4;5013:3;5009:14;5002:62;5127:4;5120:5;5116:16;5110:23;5107:1;5096:38;5089:4;5084:3;5080:14;5073:62;5196:2;5188:4;5181:5;5177:16;5171:23;5167:32;5160:4;5155:3;5151:14;5144:56;;4772:434;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "assertionChecker(uint256)": "88428031",
    "createPool(address,address,uint24,uint160)": "8e909e51",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testParallelLocker()": "a448f8b1",
    "testSimpleLinearLocker()": "e9b3aebe",
    "testTokenLocker()": "ad4739b1",
    "testTokenRevert()": "63dbc58d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"depth\",\"type\":\"uint256\"}],\"name\":\"assertionChecker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract PoolManager\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createPool\",\"outputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testParallelLocker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSimpleLinearLocker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenLocker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/PoolManagerReentrancyTest.t.sol\":\"PoolManagerReentrancyTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/solmate/src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e\",\"dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"src/Fees.sol\":{\"keccak256\":\"0x6c998aa477d8bbcdf23dd0e2450a4d3bd02241c32d511bc1ff22f4201b7fbef1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8b73b18351d859d512876c1abbebe2f31bd033406838012c7eceec138cc52b66\",\"dweb:/ipfs/QmPCCQ1WfoWrpmfvL13XRThkb6CyGeGqZ5y3ycVbQ3vmac\"]},\"src/NoDelegateCall.sol\":{\"keccak256\":\"0xf17b8cb46d679529ffd7b8f33e35190e9df7dc6b41da11dcf7b1ba134e8d0c40\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://aba476e6983e633bfce71cf4ae56b751c07910ead14bbace00f464dd771781f7\",\"dweb:/ipfs/QmbHT8SgG6Pjyz2BoYpme9M4mS4yqv7XirHDBaXQvyvVea\"]},\"src/Owned.sol\":{\"keccak256\":\"0x0109d375f0df894818365069e711e88bb8b6b315a867cac951f22bafeedacd64\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://70a4c8c612f849c2bf337ab69887609259f500c96d791496176533f5956ecaff\",\"dweb:/ipfs/QmUe6BLMxxdbr39r7YFZAeXyiCPRNnXjntekgHCzfHnYKd\"]},\"src/PoolManager.sol\":{\"keccak256\":\"0xc27b2635e6b3d0ade0ba05cd156fff1b476b0063f7c3c6c7c8b8dddbad0015c8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4c55ffd94cb2e26b38477363d314a922f1fb386975291c2744676cb82869bd20\",\"dweb:/ipfs/QmetAWahHKwRYi86heZAv7mMVubqGGNCjTYVs2zgZEEsWR\"]},\"src/interfaces/IDynamicFeeManager.sol\":{\"keccak256\":\"0x043d635da3ce5f249f4acd74cb2badbcb5c2b2e5136e4cd8393d6aa5d59c46e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442efca7ad055d7249afab1d9e31f7e2d8b0a24b62bb0e55ab94348c152f5965\",\"dweb:/ipfs/QmaXWB7s5yWRWA8tgcrTHR96Kvmj3PfY7bUgQcqoTNoejt\"]},\"src/interfaces/IFees.sol\":{\"keccak256\":\"0x7a2d2b74602f23a8944b45c745e8a512f7d8f00f8ba22742636abaf929379697\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab38548046bb65d089fd56b335a3b98d2b4f03e9af4763c2b7da2b04322a6e73\",\"dweb:/ipfs/QmVQfsaSwqV8ynqc9KEGWjQkxnAzju7uQQaFvxqhAd32cW\"]},\"src/interfaces/IHookFeeManager.sol\":{\"keccak256\":\"0x62873d5cdfadef590908e8ba3a3e48441f0e9a6c4e15718288ff8e17da316cbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e1206bca2f5227b07a8de05bc679564ce8e7c6049f94960e91e08cece4a4360\",\"dweb:/ipfs/QmThCu96pnudtJJhRCSLKnvTZhsFCvAGPC64hvqLxm9BCX\"]},\"src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc8b2ff0889b0866f84a4a4f06702b92ac08e3a5e2a6048e09dcbba8d58297002\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4614b2c046f2521dc7f39496cd77af787184189f9e23f65086ac89515826190c\",\"dweb:/ipfs/QmdVEVCfz1wJq5zWnvRsKKCUniwYbDUdWf8NWYukCaXe54\"]},\"src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x8710691cd4d68bdee1f7053709521f3ad48cf224ada6b4848cabd05b55db9a8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6cb473e388d308f376b17ff9aa27cceea74758cec82d39da344444833d26ce9\",\"dweb:/ipfs/QmU9GJPNrVfjf7Ka1v5XvvEpXj36oXoBazhV2rctjfmiX5\"]},\"src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0xd30010960f5f0de6a81b95a9a3e733d6d8e06cf09d87bdf26129c286c2ca4ee6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9b3420f8393f20ecf3cb432d4d2f4350fee457191c35f60b75214ed38a194d5\",\"dweb:/ipfs/QmSfS2U51ttBYtPgDdmPrfPR2BXAuJ99j1uQXTjRoAALe5\"]},\"src/interfaces/callback/ILockCallback.sol\":{\"keccak256\":\"0x92e6478df92399c7c1fc6b41579e368bcd70ba9e2012f945f66da92eb0f78042\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e540fdcde3180708f0c268f6c7b893dc03644be0dc526b5c22035287a310a44\",\"dweb:/ipfs/QmQKJSTn9GvQqps5j7XRoMazRq3i93ZJFJFXAhN4exAjp4\"]},\"src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0x8dc5ee72426906aeb12f4ae6a2426df059491739bd5cbdb8ea4a3e26970436c6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f7e30dbbc972cb78d169c8845d6210d27490c8534e68a20d4f296b11ec727b92\",\"dweb:/ipfs/QmXBvaWaAnPW25YGVm2sMbf5mwrzLapUcqPnrNiiGGXxmA\"]},\"src/libraries/BitMath.sol\":{\"keccak256\":\"0x652cd36970d953b3067c766b3b0c0063d4c403eba7352df09ec10dcc868910d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e357b092171edb755c8514b4b4ae758a8b43458c7a23409ebf5afd325fefa2be\",\"dweb:/ipfs/QmWKRWT2z15cVbVVDkjqdVnpf8Ck1jytcXbA7zCUevp7b6\"]},\"src/libraries/FeeLibrary.sol\":{\"keccak256\":\"0x9fc00b77978b617d1a9b5c9d024210b43ee5455682982703d3009bfafc1c12b4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://777acadfdbd1b3c01aa780b2dff49771ae6189e421b7e23be38c2db75b9c1267\",\"dweb:/ipfs/QmUR443r39JFuYjLi6zCWnW7r15u1gbmkuEd6e43Br4gyL\"]},\"src/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x1f015a7a107f4c471985a958f1bfbc1710948f9bcd3786a02310bc0ad5080c69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1cacac08675284f319d151f6bc5d1c66cf1d54c5dad1c620a2e1e1336cbb93a\",\"dweb:/ipfs/QmPf8vQ3mBqniKHwvS1DDEFrV5dJfZSL6mMi9JVy6omQaz\"]},\"src/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x7731aeeba692b0ca5dac8f27803ec9e5ce98795a554c09ae05c220861bd0314e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://963a8155e442d31c4541c387d333db0c02941ae3517e9173ad30ebcb4f6a14e9\",\"dweb:/ipfs/QmevAr8oG4WSoi5gBqQ53VzBuFbDKoZHfJwjuTmVhzm8Tc\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x6d8760794ed38264579c5da7b2afe8ff5543de999180850bc08687b77dce36ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e72da6f868ba5f5c829f78f649286c6b5922a8cda0317dfbb156b8a4d27fb24\",\"dweb:/ipfs/QmUQDZciNFhy4AFGXfYvoy22ihPc7ehvypeRVQwvVcD3vJ\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0x617e5ad0052a09d657cbf523ecb47b99a5ad8a1eeca72a22bf60a93487bf74de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0f4f995c019105daac9495c1f6d278dc682a74c087075726277e02608d46fc\",\"dweb:/ipfs/QmVQYQrrunLpyGEgftYVJHqnrc9FFubbwquDoiugk3G6R3\"]},\"src/libraries/LockDataLibrary.sol\":{\"keccak256\":\"0xf4be97b50bca4e569e0e2c8555b11e7397bf79c04fc0322c9d74a9a87fa31674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4adf536b8e73fd663d788cfedc7cb8e075359fe0c237e1a9ccc07f4024d21b7b\",\"dweb:/ipfs/QmTSzyLQ8vfZBAvM46dneUwtHyRgy8EkX4oXMzfhY2zmCo\"]},\"src/libraries/Pool.sol\":{\"keccak256\":\"0x33095bc0ae0c09c96c0aff5a45762584b7897edd3733bbcf30371638ce18cbbb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6ca8960a3a0f221b6f992a5a2269fe37be5bbdea5e283f4350cf51ea77942a87\",\"dweb:/ipfs/QmdG69msxRxHJmEgiiqmCgb5XhnRYdjS9gWcYP3fe5fgdW\"]},\"src/libraries/Position.sol\":{\"keccak256\":\"0x1319e4c172e31427c3b3521dd3c9c9c3949da22e25c9919ae57c47a8c9328e43\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1e0885e8e035681836fe02213e165d1ab48cf2488cf6ba8f01964b4b026d2b46\",\"dweb:/ipfs/QmR4W3DZYYvctASLFnm7Sf4wk2L77gwNRrTS2mBqtiUaud\"]},\"src/libraries/SafeCast.sol\":{\"keccak256\":\"0xb459cbf9f2cda4c38c11916e888cc2afbe4297c5ae6f50a0976eb83ed0dc9b25\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5608698d33b18d3f49e3fa1fbdf6e7c6383378f7d53c914dcf14a0411cf7a79b\",\"dweb:/ipfs/QmbF4VWDcTPzH17aczU6eCUcqTp9Be7xiuBGB5TMWmtJAi\"]},\"src/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0x62cb03c7ce6ce037c82fa74e5aabb2431d6b4ddbca1458efdabf5d6af9ca6f90\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://206e025889f55aa8e5d9db2f846460394b54d6dc6d80a5e4ca1d4b70edd98188\",\"dweb:/ipfs/QmNSzKqtUDXHzgXXDjdNv3ZnHZE3LU4KhwNmkrcWtTRGqk\"]},\"src/libraries/SwapMath.sol\":{\"keccak256\":\"0xac5b75b36ff928e88cbec828bdc9db03e681cc3b337d5d7f6be9fd617b3fef7f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6aaea2ecabdb3fec93c7c6be19ea3a034cf396a59ab96f61c57b5214c04b5a6e\",\"dweb:/ipfs/QmYyd4ExT6xbvEHZTQBv9nZuvU6xjB6EN4uY8TmK8Tceqv\"]},\"src/libraries/TickBitmap.sol\":{\"keccak256\":\"0x7cccb8dff4c76da872a827f1549dc44cdff384d123e77a5361a02a31902bf15c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://88f850cd5bd2bbada4d9514f2516804392c7b23dc2cb541b74e9c88d0a351dcd\",\"dweb:/ipfs/QmZh9LvKUG23oFUZXAAa5gn77MguAbZ41VGjkES5U8N9Em\"]},\"src/libraries/TickMath.sol\":{\"keccak256\":\"0xadffea78a3eed37613b57766d87c0bdb9454d2df39de90d7a450e4a8b3207e56\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c5043430807061e5ccc82986c59b2e074457ff608111a8bd51b413ceaf661c78\",\"dweb:/ipfs/QmXjqKzCrngzidTRmuLUFvwNPqMKtd8xVFLVCycRfEQcWo\"]},\"src/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x2a8cb75af05f8557b698b089a0ab19e24279fffb7e87cddf5794404c7eaf1c69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://85f68e6d614205f3f0f55f6ac41805e3a7d523d95bda1c443f2e75444443ffe3\",\"dweb:/ipfs/QmdCheMqxWNx4CbxG5MH9BUQeSMeeXF6DHkf7Aax4duRUe\"]},\"src/types/BalanceDelta.sol\":{\"keccak256\":\"0xe8a5ce042a75fb471a43d4466fddcfbfe23a4bdf4d4b5f84ea842551f577bb6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fc93822da004d24a7811a46ae475c81f367953c0210e4c94cf936469fa33fcf\",\"dweb:/ipfs/QmTpWAmvjKDczv2J1t9fV3tTtLW4LetW8TTGuG866zCSwA\"]},\"src/types/Currency.sol\":{\"keccak256\":\"0xb1395e2817b604745bf6cd41821aafeaaa252caafe45133e54f02d6f6be13d2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ec58bd7634ccb1b74f59378e54771ae11cba37494b57ae64e3f6640d4afdd9\",\"dweb:/ipfs/QmeYL1TuGXcTYfsQBGu7p9urSqGjiJky8iJAgwTRYqrJ4F\"]},\"src/types/PoolId.sol\":{\"keccak256\":\"0x2928a23cdf4c3dd05fafd3094020723954150901c6935a40fbb8e3cbc1e0ebe3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddde47e0eda04cf7e1b8e903eafd22ff19866bcb2ce0f61b46a3470b4dc9927\",\"dweb:/ipfs/Qme84u2nmVFZkaBSwVJw3bhZSqt6P9xMHNsp1Y7ddWMDvi\"]},\"src/types/PoolKey.sol\":{\"keccak256\":\"0xef7421713157a514d757863e99c2d094a6fac1dcbae602ac0eb47eda2d651a6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2832668ba213b3928fd79e159b4d00b4b8f057844e2897902ec089014470f29\",\"dweb:/ipfs/QmV2MESks8RiTwRJpqynGCGsrmXKimRFpQFZSBXnxEiXKX\"]},\"test/PoolManagerReentrancyTest.t.sol\":{\"keccak256\":\"0xce653b58bdcc2d3e74caceeb980532708a9e50d02b60cd4c7e10828a6d1bb320\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://37292f8af477ce02f6565ead3c20bb9c8da17381fdff96f92b4d2dab0aef6e94\",\"dweb:/ipfs/Qmd62z6vxvUt53ZtzCPu68BPENqybzyEASEri2QomAnkew\"]},\"test/utils/Constants.sol\":{\"keccak256\":\"0x33f7c97c2a827f6fb97112940bb123bb4cb0c7dcb194adf40d75cec59d5e773b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ba8bb762ee6aa61688368b97d0186b2d63fe054947f29ea7d47203e4c36ca6e5\",\"dweb:/ipfs/QmZfiZG21mD5fjyZodYYYAiFhTU5Tgmzq2vPVdNtihr9QE\"]},\"test/utils/Deployers.sol\":{\"keccak256\":\"0xc6c6eafd0cb39d013c02518d5132ed60dcab301e8c5eb97ceb69154cc5be48a9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da2f2d9d4585c1b73f2dc15ac3dd6bfd1f5dbf304d55ae9edcca7304665a8d92\",\"dweb:/ipfs/QmbougvJ8ibsKJs5tAdZHBcWEt4PDt8kedUgD8tSxyvzbn\"]},\"test/utils/SortTokens.sol\":{\"keccak256\":\"0xe11482e2053ed4ed8969495e8c3217400ff129af33678893ef428f42047898fb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4ef722d03a6275ae5ac1b0f1f59e094698dd5302f476a46b256848475845424d\",\"dweb:/ipfs/QmRyJBG5kn5uFBfzKovUdWaLqTXbBFrrsvYarR2DNMbUpq\"]},\"test/utils/TokenFixture.sol\":{\"keccak256\":\"0x51d5553ef7db0442b0cd90e8977248ebba6a94df3b64754ef9f5685e73d995a4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d64361413a86a5e09c3d2650ad686915b8e39390781c23e70b9edbfece508573\",\"dweb:/ipfs/QmRibyGSJWnPAFKJqDgoKMFGtbs27DrUSJxGb5yVPfraKj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.22+commit.4fc1097e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "depth",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionChecker"
        },
        {
          "inputs": [
            {
              "internalType": "contract PoolManager",
              "name": "manager",
              "type": "address"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPool",
          "outputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testParallelLocker"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSimpleLinearLocker"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenLocker"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenRevert"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/PoolManagerReentrancyTest.t.sol": "PoolManagerReentrancyTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e",
        "urls": [
          "bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275",
          "dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9",
        "urls": [
          "bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5",
          "dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566",
        "urls": [
          "bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e",
          "dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4",
        "urls": [
          "bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922",
          "dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466",
        "urls": [
          "bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e",
          "dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Fees.sol": {
        "keccak256": "0x6c998aa477d8bbcdf23dd0e2450a4d3bd02241c32d511bc1ff22f4201b7fbef1",
        "urls": [
          "bzz-raw://8b73b18351d859d512876c1abbebe2f31bd033406838012c7eceec138cc52b66",
          "dweb:/ipfs/QmPCCQ1WfoWrpmfvL13XRThkb6CyGeGqZ5y3ycVbQ3vmac"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/NoDelegateCall.sol": {
        "keccak256": "0xf17b8cb46d679529ffd7b8f33e35190e9df7dc6b41da11dcf7b1ba134e8d0c40",
        "urls": [
          "bzz-raw://aba476e6983e633bfce71cf4ae56b751c07910ead14bbace00f464dd771781f7",
          "dweb:/ipfs/QmbHT8SgG6Pjyz2BoYpme9M4mS4yqv7XirHDBaXQvyvVea"
        ],
        "license": "BUSL-1.1"
      },
      "src/Owned.sol": {
        "keccak256": "0x0109d375f0df894818365069e711e88bb8b6b315a867cac951f22bafeedacd64",
        "urls": [
          "bzz-raw://70a4c8c612f849c2bf337ab69887609259f500c96d791496176533f5956ecaff",
          "dweb:/ipfs/QmUe6BLMxxdbr39r7YFZAeXyiCPRNnXjntekgHCzfHnYKd"
        ],
        "license": "BUSL-1.1"
      },
      "src/PoolManager.sol": {
        "keccak256": "0xc27b2635e6b3d0ade0ba05cd156fff1b476b0063f7c3c6c7c8b8dddbad0015c8",
        "urls": [
          "bzz-raw://4c55ffd94cb2e26b38477363d314a922f1fb386975291c2744676cb82869bd20",
          "dweb:/ipfs/QmetAWahHKwRYi86heZAv7mMVubqGGNCjTYVs2zgZEEsWR"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IDynamicFeeManager.sol": {
        "keccak256": "0x043d635da3ce5f249f4acd74cb2badbcb5c2b2e5136e4cd8393d6aa5d59c46e7",
        "urls": [
          "bzz-raw://442efca7ad055d7249afab1d9e31f7e2d8b0a24b62bb0e55ab94348c152f5965",
          "dweb:/ipfs/QmaXWB7s5yWRWA8tgcrTHR96Kvmj3PfY7bUgQcqoTNoejt"
        ],
        "license": "MIT"
      },
      "src/interfaces/IFees.sol": {
        "keccak256": "0x7a2d2b74602f23a8944b45c745e8a512f7d8f00f8ba22742636abaf929379697",
        "urls": [
          "bzz-raw://ab38548046bb65d089fd56b335a3b98d2b4f03e9af4763c2b7da2b04322a6e73",
          "dweb:/ipfs/QmVQfsaSwqV8ynqc9KEGWjQkxnAzju7uQQaFvxqhAd32cW"
        ],
        "license": "MIT"
      },
      "src/interfaces/IHookFeeManager.sol": {
        "keccak256": "0x62873d5cdfadef590908e8ba3a3e48441f0e9a6c4e15718288ff8e17da316cbd",
        "urls": [
          "bzz-raw://5e1206bca2f5227b07a8de05bc679564ce8e7c6049f94960e91e08cece4a4360",
          "dweb:/ipfs/QmThCu96pnudtJJhRCSLKnvTZhsFCvAGPC64hvqLxm9BCX"
        ],
        "license": "MIT"
      },
      "src/interfaces/IHooks.sol": {
        "keccak256": "0xc8b2ff0889b0866f84a4a4f06702b92ac08e3a5e2a6048e09dcbba8d58297002",
        "urls": [
          "bzz-raw://4614b2c046f2521dc7f39496cd77af787184189f9e23f65086ac89515826190c",
          "dweb:/ipfs/QmdVEVCfz1wJq5zWnvRsKKCUniwYbDUdWf8NWYukCaXe54"
        ],
        "license": "MIT"
      },
      "src/interfaces/IPoolManager.sol": {
        "keccak256": "0x8710691cd4d68bdee1f7053709521f3ad48cf224ada6b4848cabd05b55db9a8f",
        "urls": [
          "bzz-raw://a6cb473e388d308f376b17ff9aa27cceea74758cec82d39da344444833d26ce9",
          "dweb:/ipfs/QmU9GJPNrVfjf7Ka1v5XvvEpXj36oXoBazhV2rctjfmiX5"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolFeeController.sol": {
        "keccak256": "0xd30010960f5f0de6a81b95a9a3e733d6d8e06cf09d87bdf26129c286c2ca4ee6",
        "urls": [
          "bzz-raw://b9b3420f8393f20ecf3cb432d4d2f4350fee457191c35f60b75214ed38a194d5",
          "dweb:/ipfs/QmSfS2U51ttBYtPgDdmPrfPR2BXAuJ99j1uQXTjRoAALe5"
        ],
        "license": "MIT"
      },
      "src/interfaces/callback/ILockCallback.sol": {
        "keccak256": "0x92e6478df92399c7c1fc6b41579e368bcd70ba9e2012f945f66da92eb0f78042",
        "urls": [
          "bzz-raw://5e540fdcde3180708f0c268f6c7b893dc03644be0dc526b5c22035287a310a44",
          "dweb:/ipfs/QmQKJSTn9GvQqps5j7XRoMazRq3i93ZJFJFXAhN4exAjp4"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/IERC20Minimal.sol": {
        "keccak256": "0x8dc5ee72426906aeb12f4ae6a2426df059491739bd5cbdb8ea4a3e26970436c6",
        "urls": [
          "bzz-raw://f7e30dbbc972cb78d169c8845d6210d27490c8534e68a20d4f296b11ec727b92",
          "dweb:/ipfs/QmXBvaWaAnPW25YGVm2sMbf5mwrzLapUcqPnrNiiGGXxmA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/BitMath.sol": {
        "keccak256": "0x652cd36970d953b3067c766b3b0c0063d4c403eba7352df09ec10dcc868910d9",
        "urls": [
          "bzz-raw://e357b092171edb755c8514b4b4ae758a8b43458c7a23409ebf5afd325fefa2be",
          "dweb:/ipfs/QmWKRWT2z15cVbVVDkjqdVnpf8Ck1jytcXbA7zCUevp7b6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/FeeLibrary.sol": {
        "keccak256": "0x9fc00b77978b617d1a9b5c9d024210b43ee5455682982703d3009bfafc1c12b4",
        "urls": [
          "bzz-raw://777acadfdbd1b3c01aa780b2dff49771ae6189e421b7e23be38c2db75b9c1267",
          "dweb:/ipfs/QmUR443r39JFuYjLi6zCWnW7r15u1gbmkuEd6e43Br4gyL"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/FixedPoint128.sol": {
        "keccak256": "0x1f015a7a107f4c471985a958f1bfbc1710948f9bcd3786a02310bc0ad5080c69",
        "urls": [
          "bzz-raw://a1cacac08675284f319d151f6bc5d1c66cf1d54c5dad1c620a2e1e1336cbb93a",
          "dweb:/ipfs/QmPf8vQ3mBqniKHwvS1DDEFrV5dJfZSL6mMi9JVy6omQaz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/FixedPoint96.sol": {
        "keccak256": "0x7731aeeba692b0ca5dac8f27803ec9e5ce98795a554c09ae05c220861bd0314e",
        "urls": [
          "bzz-raw://963a8155e442d31c4541c387d333db0c02941ae3517e9173ad30ebcb4f6a14e9",
          "dweb:/ipfs/QmevAr8oG4WSoi5gBqQ53VzBuFbDKoZHfJwjuTmVhzm8Tc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x6d8760794ed38264579c5da7b2afe8ff5543de999180850bc08687b77dce36ea",
        "urls": [
          "bzz-raw://0e72da6f868ba5f5c829f78f649286c6b5922a8cda0317dfbb156b8a4d27fb24",
          "dweb:/ipfs/QmUQDZciNFhy4AFGXfYvoy22ihPc7ehvypeRVQwvVcD3vJ"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0x617e5ad0052a09d657cbf523ecb47b99a5ad8a1eeca72a22bf60a93487bf74de",
        "urls": [
          "bzz-raw://5d0f4f995c019105daac9495c1f6d278dc682a74c087075726277e02608d46fc",
          "dweb:/ipfs/QmVQYQrrunLpyGEgftYVJHqnrc9FFubbwquDoiugk3G6R3"
        ],
        "license": "MIT"
      },
      "src/libraries/LockDataLibrary.sol": {
        "keccak256": "0xf4be97b50bca4e569e0e2c8555b11e7397bf79c04fc0322c9d74a9a87fa31674",
        "urls": [
          "bzz-raw://4adf536b8e73fd663d788cfedc7cb8e075359fe0c237e1a9ccc07f4024d21b7b",
          "dweb:/ipfs/QmTSzyLQ8vfZBAvM46dneUwtHyRgy8EkX4oXMzfhY2zmCo"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/Pool.sol": {
        "keccak256": "0x33095bc0ae0c09c96c0aff5a45762584b7897edd3733bbcf30371638ce18cbbb",
        "urls": [
          "bzz-raw://6ca8960a3a0f221b6f992a5a2269fe37be5bbdea5e283f4350cf51ea77942a87",
          "dweb:/ipfs/QmdG69msxRxHJmEgiiqmCgb5XhnRYdjS9gWcYP3fe5fgdW"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/Position.sol": {
        "keccak256": "0x1319e4c172e31427c3b3521dd3c9c9c3949da22e25c9919ae57c47a8c9328e43",
        "urls": [
          "bzz-raw://1e0885e8e035681836fe02213e165d1ab48cf2488cf6ba8f01964b4b026d2b46",
          "dweb:/ipfs/QmR4W3DZYYvctASLFnm7Sf4wk2L77gwNRrTS2mBqtiUaud"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/SafeCast.sol": {
        "keccak256": "0xb459cbf9f2cda4c38c11916e888cc2afbe4297c5ae6f50a0976eb83ed0dc9b25",
        "urls": [
          "bzz-raw://5608698d33b18d3f49e3fa1fbdf6e7c6383378f7d53c914dcf14a0411cf7a79b",
          "dweb:/ipfs/QmbF4VWDcTPzH17aczU6eCUcqTp9Be7xiuBGB5TMWmtJAi"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/SqrtPriceMath.sol": {
        "keccak256": "0x62cb03c7ce6ce037c82fa74e5aabb2431d6b4ddbca1458efdabf5d6af9ca6f90",
        "urls": [
          "bzz-raw://206e025889f55aa8e5d9db2f846460394b54d6dc6d80a5e4ca1d4b70edd98188",
          "dweb:/ipfs/QmNSzKqtUDXHzgXXDjdNv3ZnHZE3LU4KhwNmkrcWtTRGqk"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/SwapMath.sol": {
        "keccak256": "0xac5b75b36ff928e88cbec828bdc9db03e681cc3b337d5d7f6be9fd617b3fef7f",
        "urls": [
          "bzz-raw://6aaea2ecabdb3fec93c7c6be19ea3a034cf396a59ab96f61c57b5214c04b5a6e",
          "dweb:/ipfs/QmYyd4ExT6xbvEHZTQBv9nZuvU6xjB6EN4uY8TmK8Tceqv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/TickBitmap.sol": {
        "keccak256": "0x7cccb8dff4c76da872a827f1549dc44cdff384d123e77a5361a02a31902bf15c",
        "urls": [
          "bzz-raw://88f850cd5bd2bbada4d9514f2516804392c7b23dc2cb541b74e9c88d0a351dcd",
          "dweb:/ipfs/QmZh9LvKUG23oFUZXAAa5gn77MguAbZ41VGjkES5U8N9Em"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/TickMath.sol": {
        "keccak256": "0xadffea78a3eed37613b57766d87c0bdb9454d2df39de90d7a450e4a8b3207e56",
        "urls": [
          "bzz-raw://c5043430807061e5ccc82986c59b2e074457ff608111a8bd51b413ceaf661c78",
          "dweb:/ipfs/QmXjqKzCrngzidTRmuLUFvwNPqMKtd8xVFLVCycRfEQcWo"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/UnsafeMath.sol": {
        "keccak256": "0x2a8cb75af05f8557b698b089a0ab19e24279fffb7e87cddf5794404c7eaf1c69",
        "urls": [
          "bzz-raw://85f68e6d614205f3f0f55f6ac41805e3a7d523d95bda1c443f2e75444443ffe3",
          "dweb:/ipfs/QmdCheMqxWNx4CbxG5MH9BUQeSMeeXF6DHkf7Aax4duRUe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/types/BalanceDelta.sol": {
        "keccak256": "0xe8a5ce042a75fb471a43d4466fddcfbfe23a4bdf4d4b5f84ea842551f577bb6e",
        "urls": [
          "bzz-raw://9fc93822da004d24a7811a46ae475c81f367953c0210e4c94cf936469fa33fcf",
          "dweb:/ipfs/QmTpWAmvjKDczv2J1t9fV3tTtLW4LetW8TTGuG866zCSwA"
        ],
        "license": "MIT"
      },
      "src/types/Currency.sol": {
        "keccak256": "0xb1395e2817b604745bf6cd41821aafeaaa252caafe45133e54f02d6f6be13d2b",
        "urls": [
          "bzz-raw://49ec58bd7634ccb1b74f59378e54771ae11cba37494b57ae64e3f6640d4afdd9",
          "dweb:/ipfs/QmeYL1TuGXcTYfsQBGu7p9urSqGjiJky8iJAgwTRYqrJ4F"
        ],
        "license": "MIT"
      },
      "src/types/PoolId.sol": {
        "keccak256": "0x2928a23cdf4c3dd05fafd3094020723954150901c6935a40fbb8e3cbc1e0ebe3",
        "urls": [
          "bzz-raw://4ddde47e0eda04cf7e1b8e903eafd22ff19866bcb2ce0f61b46a3470b4dc9927",
          "dweb:/ipfs/Qme84u2nmVFZkaBSwVJw3bhZSqt6P9xMHNsp1Y7ddWMDvi"
        ],
        "license": "MIT"
      },
      "src/types/PoolKey.sol": {
        "keccak256": "0xef7421713157a514d757863e99c2d094a6fac1dcbae602ac0eb47eda2d651a6d",
        "urls": [
          "bzz-raw://d2832668ba213b3928fd79e159b4d00b4b8f057844e2897902ec089014470f29",
          "dweb:/ipfs/QmV2MESks8RiTwRJpqynGCGsrmXKimRFpQFZSBXnxEiXKX"
        ],
        "license": "MIT"
      },
      "test/PoolManagerReentrancyTest.t.sol": {
        "keccak256": "0xce653b58bdcc2d3e74caceeb980532708a9e50d02b60cd4c7e10828a6d1bb320",
        "urls": [
          "bzz-raw://37292f8af477ce02f6565ead3c20bb9c8da17381fdff96f92b4d2dab0aef6e94",
          "dweb:/ipfs/Qmd62z6vxvUt53ZtzCPu68BPENqybzyEASEri2QomAnkew"
        ],
        "license": "UNLICENSED"
      },
      "test/utils/Constants.sol": {
        "keccak256": "0x33f7c97c2a827f6fb97112940bb123bb4cb0c7dcb194adf40d75cec59d5e773b",
        "urls": [
          "bzz-raw://ba8bb762ee6aa61688368b97d0186b2d63fe054947f29ea7d47203e4c36ca6e5",
          "dweb:/ipfs/QmZfiZG21mD5fjyZodYYYAiFhTU5Tgmzq2vPVdNtihr9QE"
        ],
        "license": "UNLICENSED"
      },
      "test/utils/Deployers.sol": {
        "keccak256": "0xc6c6eafd0cb39d013c02518d5132ed60dcab301e8c5eb97ceb69154cc5be48a9",
        "urls": [
          "bzz-raw://da2f2d9d4585c1b73f2dc15ac3dd6bfd1f5dbf304d55ae9edcca7304665a8d92",
          "dweb:/ipfs/QmbougvJ8ibsKJs5tAdZHBcWEt4PDt8kedUgD8tSxyvzbn"
        ],
        "license": "UNLICENSED"
      },
      "test/utils/SortTokens.sol": {
        "keccak256": "0xe11482e2053ed4ed8969495e8c3217400ff129af33678893ef428f42047898fb",
        "urls": [
          "bzz-raw://4ef722d03a6275ae5ac1b0f1f59e094698dd5302f476a46b256848475845424d",
          "dweb:/ipfs/QmRyJBG5kn5uFBfzKovUdWaLqTXbBFrrsvYarR2DNMbUpq"
        ],
        "license": "UNLICENSED"
      },
      "test/utils/TokenFixture.sol": {
        "keccak256": "0x51d5553ef7db0442b0cd90e8977248ebba6a94df3b64754ef9f5685e73d995a4",
        "urls": [
          "bzz-raw://d64361413a86a5e09c3d2650ad686915b8e39390781c23e70b9edbfece508573",
          "dweb:/ipfs/QmRibyGSJWnPAFKJqDgoKMFGtbs27DrUSJxGb5yVPfraKj"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/PoolManagerReentrancyTest.t.sol",
    "id": 58377,
    "exportedSymbols": {
      "Currency": [
        41931
      ],
      "CurrencyLibrary": [
        42202
      ],
      "Deployers": [
        65616
      ],
      "ILockCallback": [
        33663
      ],
      "IPoolManager": [
        33638
      ],
      "LockDataLibrary": [
        34783
      ],
      "MockERC20": [
        30647
      ],
      "ParallelLocker": [
        58157
      ],
      "PoolManager": [
        33031
      ],
      "PoolManagerReentrancyTest": [
        58376
      ],
      "SimpleLinearLocker": [
        57902
      ],
      "Test": [
        11275
      ],
      "TokenFixture": [
        65762
      ],
      "TokenLocker": [
        57811
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:5818:85",
    "nodes": [
      {
        "id": 57611,
        "nodeType": "PragmaDirective",
        "src": "39:24:85",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 57613,
        "nodeType": "ImportDirective",
        "src": "65:40:85",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58377,
        "sourceUnit": 11276,
        "symbolAliases": [
          {
            "foreign": {
              "id": 57612,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11275,
              "src": "73:4:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 57615,
        "nodeType": "ImportDirective",
        "src": "106:65:85",
        "nodes": [],
        "absolutePath": "lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58377,
        "sourceUnit": 30648,
        "symbolAliases": [
          {
            "foreign": {
              "id": 57614,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30647,
              "src": "114:9:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 57618,
        "nodeType": "ImportDirective",
        "src": "172:68:85",
        "nodes": [],
        "absolutePath": "src/types/Currency.sol",
        "file": "../src/types/Currency.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58377,
        "sourceUnit": 42203,
        "symbolAliases": [
          {
            "foreign": {
              "id": 57616,
              "name": "Currency",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41931,
              "src": "180:8:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 57617,
              "name": "CurrencyLibrary",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42202,
              "src": "190:15:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 57620,
        "nodeType": "ImportDirective",
        "src": "241:69:85",
        "nodes": [],
        "absolutePath": "src/libraries/LockDataLibrary.sol",
        "file": "../src/libraries/LockDataLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58377,
        "sourceUnit": 34784,
        "symbolAliases": [
          {
            "foreign": {
              "id": 57619,
              "name": "LockDataLibrary",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34783,
              "src": "249:15:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 57622,
        "nodeType": "ImportDirective",
        "src": "311:64:85",
        "nodes": [],
        "absolutePath": "src/interfaces/IPoolManager.sol",
        "file": "../src/interfaces/IPoolManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58377,
        "sourceUnit": 33639,
        "symbolAliases": [
          {
            "foreign": {
              "id": 57621,
              "name": "IPoolManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33638,
              "src": "319:12:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 57624,
        "nodeType": "ImportDirective",
        "src": "376:75:85",
        "nodes": [],
        "absolutePath": "src/interfaces/callback/ILockCallback.sol",
        "file": "../src/interfaces/callback/ILockCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58377,
        "sourceUnit": 33664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 57623,
              "name": "ILockCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33663,
              "src": "384:13:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 57626,
        "nodeType": "ImportDirective",
        "src": "452:51:85",
        "nodes": [],
        "absolutePath": "src/PoolManager.sol",
        "file": "../src/PoolManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58377,
        "sourceUnit": 33032,
        "symbolAliases": [
          {
            "foreign": {
              "id": 57625,
              "name": "PoolManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33031,
              "src": "460:11:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 57628,
        "nodeType": "ImportDirective",
        "src": "504:48:85",
        "nodes": [],
        "absolutePath": "test/utils/Deployers.sol",
        "file": "./utils/Deployers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58377,
        "sourceUnit": 65617,
        "symbolAliases": [
          {
            "foreign": {
              "id": 57627,
              "name": "Deployers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65616,
              "src": "512:9:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 57630,
        "nodeType": "ImportDirective",
        "src": "553:54:85",
        "nodes": [],
        "absolutePath": "test/utils/TokenFixture.sol",
        "file": "./utils/TokenFixture.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58377,
        "sourceUnit": 65763,
        "symbolAliases": [
          {
            "foreign": {
              "id": 57629,
              "name": "TokenFixture",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65762,
              "src": "561:12:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 57811,
        "nodeType": "ContractDefinition",
        "src": "609:1285:85",
        "nodes": [
          {
            "id": 57636,
            "nodeType": "UsingForDirective",
            "src": "653:35:85",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 57633,
              "name": "CurrencyLibrary",
              "nameLocations": [
                "659:15:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42202,
              "src": "659:15:85"
            },
            "typeName": {
              "id": 57635,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57634,
                "name": "Currency",
                "nameLocations": [
                  "679:8:85"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41931,
                "src": "679:8:85"
              },
              "referencedDeclaration": 41931,
              "src": "679:8:85",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                "typeString": "Currency"
              }
            }
          },
          {
            "id": 57658,
            "nodeType": "FunctionDefinition",
            "src": "694:138:85",
            "nodes": [],
            "body": {
              "id": 57657,
              "nodeType": "Block",
              "src": "772:60:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 57652,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57642,
                            "src": "806:8:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                              "typeString": "Currency"
                            }
                          },
                          {
                            "id": 57653,
                            "name": "reclaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57644,
                            "src": "816:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                              "typeString": "Currency"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 57650,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "795:3:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 57651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "799:6:85",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "795:10:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 57654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "795:29:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 57647,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57639,
                        "src": "782:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 57649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "790:4:85",
                      "memberName": "lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33507,
                      "src": "782:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 57655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:43:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 57656,
                  "nodeType": "ExpressionStatement",
                  "src": "782:43:85"
                }
              ]
            },
            "functionSelector": "bd0a51d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "main",
            "nameLocation": "703:4:85",
            "parameters": {
              "id": 57645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57639,
                  "mutability": "mutable",
                  "name": "manager",
                  "nameLocation": "721:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 57658,
                  "src": "708:20:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPoolManager_$33638",
                    "typeString": "contract IPoolManager"
                  },
                  "typeName": {
                    "id": 57638,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57637,
                      "name": "IPoolManager",
                      "nameLocations": [
                        "708:12:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33638,
                      "src": "708:12:85"
                    },
                    "referencedDeclaration": 33638,
                    "src": "708:12:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolManager_$33638",
                      "typeString": "contract IPoolManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57642,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "739:8:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 57658,
                  "src": "730:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                    "typeString": "Currency"
                  },
                  "typeName": {
                    "id": 57641,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57640,
                      "name": "Currency",
                      "nameLocations": [
                        "730:8:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41931,
                      "src": "730:8:85"
                    },
                    "referencedDeclaration": 41931,
                    "src": "730:8:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                      "typeString": "Currency"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57644,
                  "mutability": "mutable",
                  "name": "reclaim",
                  "nameLocation": "754:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 57658,
                  "src": "749:12:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 57643,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:4:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "707:55:85"
            },
            "returnParameters": {
              "id": 57646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:0:85"
            },
            "scope": 57811,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57810,
            "nodeType": "FunctionDefinition",
            "src": "838:1054:85",
            "nodes": [],
            "body": {
              "id": 57809,
              "nodeType": "Block",
              "src": "913:979:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    57667,
                    57669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 57667,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "933:8:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 57809,
                      "src": "924:17:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                        "typeString": "Currency"
                      },
                      "typeName": {
                        "id": 57666,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 57665,
                          "name": "Currency",
                          "nameLocations": [
                            "924:8:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41931,
                          "src": "924:8:85"
                        },
                        "referencedDeclaration": 41931,
                        "src": "924:8:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                          "typeString": "Currency"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 57669,
                      "mutability": "mutable",
                      "name": "reclaim",
                      "nameLocation": "948:7:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 57809,
                      "src": "943:12:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 57668,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "943:4:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 57678,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 57672,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57660,
                        "src": "970:4:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 57673,
                            "name": "Currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41931,
                            "src": "977:8:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$41931_$",
                              "typeString": "type(Currency)"
                            }
                          },
                          {
                            "id": 57675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "987:4:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bool_$",
                              "typeString": "type(bool)"
                            },
                            "typeName": {
                              "id": 57674,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "987:4:85",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 57676,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "976:16:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_userDefinedValueType$_Currency_$41931_$_$_t_type$_t_bool_$_$",
                          "typeString": "tuple(type(Currency),type(bool))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_userDefinedValueType$_Currency_$41931_$_$_t_type$_t_bool_$_$",
                          "typeString": "tuple(type(Currency),type(bool))"
                        }
                      ],
                      "expression": {
                        "id": 57670,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "959:3:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 57671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "963:6:85",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "959:10:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 57677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:34:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_Currency_$41931_$_t_bool_$",
                      "typeString": "tuple(Currency,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "923:70:85"
                },
                {
                  "assignments": [
                    57681
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 57681,
                      "mutability": "mutable",
                      "name": "manager",
                      "nameLocation": "1017:7:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 57809,
                      "src": "1004:20:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPoolManager_$33638",
                        "typeString": "contract IPoolManager"
                      },
                      "typeName": {
                        "id": 57680,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 57679,
                          "name": "IPoolManager",
                          "nameLocations": [
                            "1004:12:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33638,
                          "src": "1004:12:85"
                        },
                        "referencedDeclaration": 33638,
                        "src": "1004:12:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 57686,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 57683,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1040:3:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 57684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1044:6:85",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1040:10:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 57682,
                      "name": "IPoolManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33638,
                      "src": "1027:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IPoolManager_$33638_$",
                        "typeString": "type(contract IPoolManager)"
                      }
                    },
                    "id": 57685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1027:24:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolManager_$33638",
                      "typeString": "contract IPoolManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1004:47:85"
                },
                {
                  "assignments": [
                    null,
                    57688
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 57688,
                      "mutability": "mutable",
                      "name": "nonzeroDeltaCount",
                      "nameLocation": "1073:17:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 57809,
                      "src": "1065:25:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 57687,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1065:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 57692,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 57689,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57681,
                        "src": "1094:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 57690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1102:8:85",
                      "memberName": "lockData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33475,
                      "src": "1094:16:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 57691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1094:18:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1062:50:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 57696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 57694,
                          "name": "nonzeroDeltaCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57688,
                          "src": "1129:17:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 57695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1150:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1129:22:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 57693,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1122:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 57697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1122:30:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57698,
                  "nodeType": "ExpressionStatement",
                  "src": "1122:30:85"
                },
                {
                  "assignments": [
                    57700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 57700,
                      "mutability": "mutable",
                      "name": "delta",
                      "nameLocation": "1170:5:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 57809,
                      "src": "1163:12:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 57699,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1163:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 57709,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 57705,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1208:4:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLocker_$57811",
                              "typeString": "contract TokenLocker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLocker_$57811",
                              "typeString": "contract TokenLocker"
                            }
                          ],
                          "id": 57704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1200:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 57703,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1200:7:85",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 57706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1200:13:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 57707,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57667,
                        "src": "1215:8:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                          "typeString": "Currency"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                          "typeString": "Currency"
                        }
                      ],
                      "expression": {
                        "id": 57701,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57681,
                        "src": "1178:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 57702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1186:13:85",
                      "memberName": "currencyDelta",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33499,
                      "src": "1178:21:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_userDefinedValueType$_Currency_$41931_$returns$_t_int256_$",
                        "typeString": "function (address,Currency) view external returns (int256)"
                      }
                    },
                    "id": 57708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:46:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1163:61:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 57713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 57711,
                          "name": "delta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57700,
                          "src": "1241:5:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 57712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1250:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1241:10:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 57710,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1234:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 57714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1234:18:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57715,
                  "nodeType": "ExpressionStatement",
                  "src": "1234:18:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 57721,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57681,
                            "src": "1320:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPoolManager_$33638",
                              "typeString": "contract IPoolManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPoolManager_$33638",
                              "typeString": "contract IPoolManager"
                            }
                          ],
                          "id": 57720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1312:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 57719,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1312:7:85",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 57722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1312:16:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 57723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1330:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 57716,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57667,
                        "src": "1294:8:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                          "typeString": "Currency"
                        }
                      },
                      "id": 57718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1303:8:85",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42081,
                      "src": "1294:17:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_userDefinedValueType$_Currency_$41931_$_t_address_$_t_uint256_$returns$__$attached_to$_t_userDefinedValueType$_Currency_$41931_$",
                        "typeString": "function (Currency,address,uint256)"
                      }
                    },
                    "id": 57724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:38:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57725,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:38:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 57729,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57667,
                        "src": "1357:8:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                          "typeString": "Currency"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                          "typeString": "Currency"
                        }
                      ],
                      "expression": {
                        "id": 57726,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57681,
                        "src": "1342:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 57728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1350:6:85",
                      "memberName": "settle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33598,
                      "src": "1342:14:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_userDefinedValueType$_Currency_$41931_$returns$_t_uint256_$",
                        "typeString": "function (Currency) payable external returns (uint256)"
                      }
                    },
                    "id": 57730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1342:24:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 57731,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:24:85"
                },
                {
                  "expression": {
                    "id": 57737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 57732,
                          "name": "nonzeroDeltaCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57688,
                          "src": "1379:17:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 57733,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1376:21:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint128_$",
                        "typeString": "tuple(,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 57734,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57681,
                          "src": "1400:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPoolManager_$33638",
                            "typeString": "contract IPoolManager"
                          }
                        },
                        "id": 57735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1408:8:85",
                        "memberName": "lockData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33475,
                        "src": "1400:16:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 57736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1400:18:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "1376:42:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57738,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:42:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 57742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 57740,
                          "name": "nonzeroDeltaCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57688,
                          "src": "1435:17:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 57741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1456:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1435:22:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 57739,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1428:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 57743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1428:30:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57744,
                  "nodeType": "ExpressionStatement",
                  "src": "1428:30:85"
                },
                {
                  "expression": {
                    "id": 57754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57745,
                      "name": "delta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57700,
                      "src": "1468:5:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 57750,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1506:4:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenLocker_$57811",
                                "typeString": "contract TokenLocker"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenLocker_$57811",
                                "typeString": "contract TokenLocker"
                              }
                            ],
                            "id": 57749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1498:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 57748,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1498:7:85",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 57751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1498:13:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 57752,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57667,
                          "src": "1513:8:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                            "typeString": "Currency"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                            "typeString": "Currency"
                          }
                        ],
                        "expression": {
                          "id": 57746,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57681,
                          "src": "1476:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPoolManager_$33638",
                            "typeString": "contract IPoolManager"
                          }
                        },
                        "id": 57747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1484:13:85",
                        "memberName": "currencyDelta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33499,
                        "src": "1476:21:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_userDefinedValueType$_Currency_$41931_$returns$_t_int256_$",
                          "typeString": "function (address,Currency) view external returns (int256)"
                        }
                      },
                      "id": 57753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1476:46:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "1468:54:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 57755,
                  "nodeType": "ExpressionStatement",
                  "src": "1468:54:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 57760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 57757,
                          "name": "delta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57700,
                          "src": "1539:5:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 57759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "1548:2:85",
                          "subExpression": {
                            "hexValue": "31",
                            "id": 57758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1549:1:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        },
                        "src": "1539:11:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 57756,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1532:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 57761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:19:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57762,
                  "nodeType": "ExpressionStatement",
                  "src": "1532:19:85"
                },
                {
                  "condition": {
                    "id": 57763,
                    "name": "reclaim",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 57669,
                    "src": "1592:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 57806,
                  "nodeType": "IfStatement",
                  "src": "1588:278:85",
                  "trueBody": {
                    "id": 57805,
                    "nodeType": "Block",
                    "src": "1601:265:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 57767,
                              "name": "currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57667,
                              "src": "1628:8:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                                "typeString": "Currency"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 57770,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1646:4:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenLocker_$57811",
                                    "typeString": "contract TokenLocker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenLocker_$57811",
                                    "typeString": "contract TokenLocker"
                                  }
                                ],
                                "id": 57769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1638:7:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 57768,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1638:7:85",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 57771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1638:13:85",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 57772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1653:1:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                                "typeString": "Currency"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 57764,
                              "name": "manager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57681,
                              "src": "1615:7:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPoolManager_$33638",
                                "typeString": "contract IPoolManager"
                              }
                            },
                            "id": 57766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1623:4:85",
                            "memberName": "take",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33578,
                            "src": "1615:12:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_Currency_$41931_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (Currency,address,uint256) external"
                            }
                          },
                          "id": 57773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1615:40:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 57774,
                        "nodeType": "ExpressionStatement",
                        "src": "1615:40:85"
                      },
                      {
                        "expression": {
                          "id": 57780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              null,
                              {
                                "id": 57775,
                                "name": "nonzeroDeltaCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57688,
                                "src": "1672:17:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "id": 57776,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1669:21:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$_t_uint128_$",
                              "typeString": "tuple(,uint128)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 57777,
                                "name": "manager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57681,
                                "src": "1693:7:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPoolManager_$33638",
                                  "typeString": "contract IPoolManager"
                                }
                              },
                              "id": 57778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1701:8:85",
                              "memberName": "lockData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33475,
                              "src": "1693:16:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                                "typeString": "function () view external returns (uint128,uint128)"
                              }
                            },
                            "id": 57779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1693:18:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                              "typeString": "tuple(uint128,uint128)"
                            }
                          },
                          "src": "1669:42:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 57781,
                        "nodeType": "ExpressionStatement",
                        "src": "1669:42:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 57785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 57783,
                                "name": "nonzeroDeltaCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57688,
                                "src": "1732:17:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 57784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1753:1:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1732:22:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 57782,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -3,
                            "src": "1725:6:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 57786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1725:30:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 57787,
                        "nodeType": "ExpressionStatement",
                        "src": "1725:30:85"
                      },
                      {
                        "expression": {
                          "id": 57797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 57788,
                            "name": "delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57700,
                            "src": "1769:5:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 57793,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "1807:4:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TokenLocker_$57811",
                                      "typeString": "contract TokenLocker"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TokenLocker_$57811",
                                      "typeString": "contract TokenLocker"
                                    }
                                  ],
                                  "id": 57792,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1799:7:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 57791,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1799:7:85",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 57794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1799:13:85",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 57795,
                                "name": "currency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57667,
                                "src": "1814:8:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                                  "typeString": "Currency"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                                  "typeString": "Currency"
                                }
                              ],
                              "expression": {
                                "id": 57789,
                                "name": "manager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57681,
                                "src": "1777:7:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPoolManager_$33638",
                                  "typeString": "contract IPoolManager"
                                }
                              },
                              "id": 57790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1785:13:85",
                              "memberName": "currencyDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33499,
                              "src": "1777:21:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_userDefinedValueType$_Currency_$41931_$returns$_t_int256_$",
                                "typeString": "function (address,Currency) view external returns (int256)"
                              }
                            },
                            "id": 57796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1777:46:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1769:54:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 57798,
                        "nodeType": "ExpressionStatement",
                        "src": "1769:54:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 57802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 57800,
                                "name": "delta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57700,
                                "src": "1844:5:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 57801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1853:1:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1844:10:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 57799,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -3,
                            "src": "1837:6:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 57803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1837:18:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 57804,
                        "nodeType": "ExpressionStatement",
                        "src": "1837:18:85"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "",
                    "id": 57807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1883:2:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 57664,
                  "id": 57808,
                  "nodeType": "Return",
                  "src": "1876:9:85"
                }
              ]
            },
            "baseFunctions": [
              33662
            ],
            "functionSelector": "ab6291fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockAcquired",
            "nameLocation": "847:12:85",
            "parameters": {
              "id": 57661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57660,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "875:4:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 57810,
                  "src": "860:19:85",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57659,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:5:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "859:21:85"
            },
            "returnParameters": {
              "id": 57664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57663,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57810,
                  "src": "899:12:85",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57662,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:5:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "898:14:85"
            },
            "scope": 57811,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57631,
              "name": "ILockCallback",
              "nameLocations": [
                "633:13:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33663,
              "src": "633:13:85"
            },
            "id": 57632,
            "nodeType": "InheritanceSpecifier",
            "src": "633:13:85"
          }
        ],
        "canonicalName": "TokenLocker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          57811,
          33663
        ],
        "name": "TokenLocker",
        "nameLocation": "618:11:85",
        "scope": 58377,
        "usedErrors": [
          42034,
          42037
        ],
        "usedEvents": []
      },
      {
        "id": 57902,
        "nodeType": "ContractDefinition",
        "src": "1896:681:85",
        "nodes": [
          {
            "id": 57819,
            "nodeType": "VariableDeclaration",
            "src": "1947:34:85",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "checker",
            "nameLocation": "1974:7:85",
            "scope": 57902,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
              "typeString": "function (uint256) external"
            },
            "typeName": {
              "id": 57818,
              "nodeType": "FunctionTypeName",
              "parameterTypes": {
                "id": 57816,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 57815,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 57818,
                    "src": "1956:7:85",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 57814,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1956:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1955:9:85"
              },
              "returnParameterTypes": {
                "id": 57817,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1974:0:85"
              },
              "src": "1947:34:85",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                "typeString": "function (uint256) external"
              },
              "visibility": "external"
            },
            "visibility": "internal"
          },
          {
            "id": 57848,
            "nodeType": "FunctionDefinition",
            "src": "1988:194:85",
            "nodes": [],
            "body": {
              "id": 57847,
              "nodeType": "Block",
              "src": "2094:88:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 57835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57833,
                      "name": "checker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57819,
                      "src": "2104:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 57834,
                      "name": "checker_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57830,
                      "src": "2114:8:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "src": "2104:18:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                      "typeString": "function (uint256) external"
                    }
                  },
                  "id": 57836,
                  "nodeType": "ExpressionStatement",
                  "src": "2104:18:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 57842,
                            "name": "timesToReenter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57824,
                            "src": "2156:14:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 57843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2172:1:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 57840,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2145:3:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 57841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2149:6:85",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2145:10:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 57844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2145:29:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 57837,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57822,
                        "src": "2132:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 57839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2140:4:85",
                      "memberName": "lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33507,
                      "src": "2132:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 57845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2132:43:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 57846,
                  "nodeType": "ExpressionStatement",
                  "src": "2132:43:85"
                }
              ]
            },
            "functionSelector": "5ef9eca9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "main",
            "nameLocation": "1997:4:85",
            "parameters": {
              "id": 57831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57822,
                  "mutability": "mutable",
                  "name": "manager",
                  "nameLocation": "2015:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 57848,
                  "src": "2002:20:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPoolManager_$33638",
                    "typeString": "contract IPoolManager"
                  },
                  "typeName": {
                    "id": 57821,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57820,
                      "name": "IPoolManager",
                      "nameLocations": [
                        "2002:12:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33638,
                      "src": "2002:12:85"
                    },
                    "referencedDeclaration": 33638,
                    "src": "2002:12:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolManager_$33638",
                      "typeString": "contract IPoolManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57824,
                  "mutability": "mutable",
                  "name": "timesToReenter",
                  "nameLocation": "2032:14:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 57848,
                  "src": "2024:22:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2024:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57830,
                  "mutability": "mutable",
                  "name": "checker_",
                  "nameLocation": "2075:8:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 57848,
                  "src": "2048:35:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                    "typeString": "function (uint256) external"
                  },
                  "typeName": {
                    "id": 57829,
                    "nodeType": "FunctionTypeName",
                    "parameterTypes": {
                      "id": 57827,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 57826,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 57829,
                          "src": "2057:7:85",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 57825,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2057:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "2056:9:85"
                    },
                    "returnParameterTypes": {
                      "id": 57828,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "2075:0:85"
                    },
                    "src": "2048:35:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                      "typeString": "function (uint256) external"
                    },
                    "visibility": "external"
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2001:83:85"
            },
            "returnParameters": {
              "id": 57832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2094:0:85"
            },
            "scope": 57902,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57901,
            "nodeType": "FunctionDefinition",
            "src": "2188:387:85",
            "nodes": [],
            "body": {
              "id": 57900,
              "nodeType": "Block",
              "src": "2263:312:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    57856,
                    57858
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 57856,
                      "mutability": "mutable",
                      "name": "timesToReenter",
                      "nameLocation": "2282:14:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 57900,
                      "src": "2274:22:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 57855,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2274:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 57858,
                      "mutability": "mutable",
                      "name": "depth",
                      "nameLocation": "2306:5:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 57900,
                      "src": "2298:13:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 57857,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2298:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 57868,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 57861,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57850,
                        "src": "2326:4:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 57863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2333:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 57862,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2333:7:85",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 57865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2342:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 57864,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2342:7:85",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 57866,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2332:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint256),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint256),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 57859,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2315:3:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 57860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2319:6:85",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2315:10:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 57867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2315:36:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2273:78:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 57870,
                        "name": "depth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57858,
                        "src": "2369:5:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 57869,
                      "name": "checker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57819,
                      "src": "2361:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 57871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2361:14:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57872,
                  "nodeType": "ExpressionStatement",
                  "src": "2361:14:85"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 57875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 57873,
                      "name": "depth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57858,
                      "src": "2389:5:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 57874,
                      "name": "timesToReenter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57856,
                      "src": "2397:14:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2389:22:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 57897,
                  "nodeType": "IfStatement",
                  "src": "2385:165:85",
                  "trueBody": {
                    "id": 57896,
                    "nodeType": "Block",
                    "src": "2413:137:85",
                    "statements": [
                      {
                        "assignments": [
                          57878
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 57878,
                            "mutability": "mutable",
                            "name": "manager",
                            "nameLocation": "2440:7:85",
                            "nodeType": "VariableDeclaration",
                            "scope": 57896,
                            "src": "2427:20:85",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPoolManager_$33638",
                              "typeString": "contract IPoolManager"
                            },
                            "typeName": {
                              "id": 57877,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 57876,
                                "name": "IPoolManager",
                                "nameLocations": [
                                  "2427:12:85"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 33638,
                                "src": "2427:12:85"
                              },
                              "referencedDeclaration": 33638,
                              "src": "2427:12:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPoolManager_$33638",
                                "typeString": "contract IPoolManager"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 57883,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 57880,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2463:3:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 57881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2467:6:85",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2463:10:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 57879,
                            "name": "IPoolManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33638,
                            "src": "2450:12:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPoolManager_$33638_$",
                              "typeString": "type(contract IPoolManager)"
                            }
                          },
                          "id": 57882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2450:24:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPoolManager_$33638",
                            "typeString": "contract IPoolManager"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2427:47:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 57889,
                                  "name": "timesToReenter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57856,
                                  "src": "2512:14:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 57892,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 57890,
                                    "name": "depth",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 57858,
                                    "src": "2528:5:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 57891,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2536:1:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "2528:9:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 57887,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2501:3:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 57888,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2505:6:85",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "2501:10:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 57893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2501:37:85",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 57884,
                              "name": "manager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57878,
                              "src": "2488:7:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPoolManager_$33638",
                                "typeString": "contract IPoolManager"
                              }
                            },
                            "id": 57886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2496:4:85",
                            "memberName": "lock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33507,
                            "src": "2488:12:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 57894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2488:51:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 57895,
                        "nodeType": "ExpressionStatement",
                        "src": "2488:51:85"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "",
                    "id": 57898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2566:2:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 57854,
                  "id": 57899,
                  "nodeType": "Return",
                  "src": "2559:9:85"
                }
              ]
            },
            "baseFunctions": [
              33662
            ],
            "functionSelector": "ab6291fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockAcquired",
            "nameLocation": "2197:12:85",
            "parameters": {
              "id": 57851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57850,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2225:4:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 57901,
                  "src": "2210:19:85",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57849,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:5:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2209:21:85"
            },
            "returnParameters": {
              "id": 57854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57853,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57901,
                  "src": "2249:12:85",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57852,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2249:5:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2248:14:85"
            },
            "scope": 57902,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57812,
              "name": "ILockCallback",
              "nameLocations": [
                "1927:13:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33663,
              "src": "1927:13:85"
            },
            "id": 57813,
            "nodeType": "InheritanceSpecifier",
            "src": "1927:13:85"
          }
        ],
        "canonicalName": "SimpleLinearLocker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          57902,
          33663
        ],
        "name": "SimpleLinearLocker",
        "nameLocation": "1905:18:85",
        "scope": 58377,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 58157,
        "nodeType": "ContractDefinition",
        "src": "2579:1741:85",
        "nodes": [
          {
            "id": 57907,
            "nodeType": "VariableDeclaration",
            "src": "2626:20:85",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "manager",
            "nameLocation": "2639:7:85",
            "scope": 58157,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPoolManager_$33638",
              "typeString": "contract IPoolManager"
            },
            "typeName": {
              "id": 57906,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57905,
                "name": "IPoolManager",
                "nameLocations": [
                  "2626:12:85"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33638,
                "src": "2626:12:85"
              },
              "referencedDeclaration": 33638,
              "src": "2626:12:85",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPoolManager_$33638",
                "typeString": "contract IPoolManager"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 57918,
            "nodeType": "FunctionDefinition",
            "src": "2653:70:85",
            "nodes": [],
            "body": {
              "id": 57917,
              "nodeType": "Block",
              "src": "2688:35:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 57915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57913,
                      "name": "manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57907,
                      "src": "2698:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPoolManager_$33638",
                        "typeString": "contract IPoolManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 57914,
                      "name": "manager_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57910,
                      "src": "2708:8:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPoolManager_$33638",
                        "typeString": "contract IPoolManager"
                      }
                    },
                    "src": "2698:18:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolManager_$33638",
                      "typeString": "contract IPoolManager"
                    }
                  },
                  "id": 57916,
                  "nodeType": "ExpressionStatement",
                  "src": "2698:18:85"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 57911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57910,
                  "mutability": "mutable",
                  "name": "manager_",
                  "nameLocation": "2678:8:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 57918,
                  "src": "2665:21:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPoolManager_$33638",
                    "typeString": "contract IPoolManager"
                  },
                  "typeName": {
                    "id": 57909,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57908,
                      "name": "IPoolManager",
                      "nameLocations": [
                        "2665:12:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33638,
                      "src": "2665:12:85"
                    },
                    "referencedDeclaration": 33638,
                    "src": "2665:12:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolManager_$33638",
                      "typeString": "contract IPoolManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2664:23:85"
            },
            "returnParameters": {
              "id": 57912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2688:0:85"
            },
            "scope": 58157,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 57928,
            "nodeType": "FunctionDefinition",
            "src": "2729:58:85",
            "nodes": [],
            "body": {
              "id": 57927,
              "nodeType": "Block",
              "src": "2754:33:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 57924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2777:2:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 57921,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57907,
                        "src": "2764:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 57923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2772:4:85",
                      "memberName": "lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33507,
                      "src": "2764:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 57925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:16:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 57926,
                  "nodeType": "ExpressionStatement",
                  "src": "2764:16:85"
                }
              ]
            },
            "functionSelector": "dffeadd0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "main",
            "nameLocation": "2738:4:85",
            "parameters": {
              "id": 57919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2742:2:85"
            },
            "returnParameters": {
              "id": 57920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2754:0:85"
            },
            "scope": 58157,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57960,
            "nodeType": "FunctionDefinition",
            "src": "2793:217:85",
            "nodes": [],
            "body": {
              "id": 57959,
              "nodeType": "Block",
              "src": "2843:167:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    57934,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 57934,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2862:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 57959,
                      "src": "2854:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 57933,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2854:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 57938,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 57935,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57907,
                        "src": "2873:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 57936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2881:8:85",
                      "memberName": "lockData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33475,
                      "src": "2873:16:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 57937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2873:18:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2853:38:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 57942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 57940,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57934,
                          "src": "2908:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 57941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2918:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "2908:11:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 57939,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2901:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 57943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2901:19:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57944,
                  "nodeType": "ExpressionStatement",
                  "src": "2901:19:85"
                },
                {
                  "assignments": [
                    57946
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 57946,
                      "mutability": "mutable",
                      "name": "locker",
                      "nameLocation": "2938:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 57959,
                      "src": "2930:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 57945,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2930:7:85",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 57951,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 57949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2963:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 57947,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57907,
                        "src": "2947:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 57948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2955:7:85",
                      "memberName": "getLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33467,
                      "src": "2947:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 57950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2947:18:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2930:35:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 57956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 57953,
                          "name": "locker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57946,
                          "src": "2982:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 57954,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2992:3:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 57955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2996:6:85",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2992:10:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2982:20:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 57952,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2975:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 57957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2975:28:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57958,
                  "nodeType": "ExpressionStatement",
                  "src": "2975:28:85"
                }
              ]
            },
            "functionSelector": "dc5342c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionChecker0",
            "nameLocation": "2802:17:85",
            "parameters": {
              "id": 57931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57930,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57960,
                  "src": "2820:7:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2820:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2819:9:85"
            },
            "returnParameters": {
              "id": 57932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2843:0:85"
            },
            "scope": 58157,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57996,
            "nodeType": "FunctionDefinition",
            "src": "3016:239:85",
            "nodes": [],
            "body": {
              "id": 57995,
              "nodeType": "Block",
              "src": "3072:183:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    57966,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 57966,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "3091:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 57995,
                      "src": "3083:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 57965,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3083:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 57970,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 57967,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57907,
                        "src": "3102:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 57968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3110:8:85",
                      "memberName": "lockData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33475,
                      "src": "3102:16:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 57969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3102:18:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3082:38:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 57976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 57972,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57966,
                          "src": "3137:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 57975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 57973,
                            "name": "depth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57962,
                            "src": "3147:5:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 57974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3155:1:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "3147:9:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3137:19:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 57971,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "3130:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 57977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3130:27:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57978,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:27:85"
                },
                {
                  "assignments": [
                    57980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 57980,
                      "mutability": "mutable",
                      "name": "locker",
                      "nameLocation": "3175:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 57995,
                      "src": "3167:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 57979,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3167:7:85",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 57987,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 57985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 57983,
                          "name": "depth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57962,
                          "src": "3200:5:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 57984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3208:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3200:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 57981,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57907,
                        "src": "3184:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 57982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3192:7:85",
                      "memberName": "getLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33467,
                      "src": "3184:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 57986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3184:26:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3167:43:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 57992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 57989,
                          "name": "locker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57980,
                          "src": "3227:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 57990,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3237:3:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 57991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3241:6:85",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3237:10:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3227:20:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 57988,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "3220:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 57993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3220:28:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57994,
                  "nodeType": "ExpressionStatement",
                  "src": "3220:28:85"
                }
              ]
            },
            "functionSelector": "02494a1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionChecker1",
            "nameLocation": "3025:17:85",
            "parameters": {
              "id": 57963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57962,
                  "mutability": "mutable",
                  "name": "depth",
                  "nameLocation": "3051:5:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 57996,
                  "src": "3043:13:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3043:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3042:15:85"
            },
            "returnParameters": {
              "id": 57964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3072:0:85"
            },
            "scope": 58157,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58028,
            "nodeType": "FunctionDefinition",
            "src": "3261:217:85",
            "nodes": [],
            "body": {
              "id": 58027,
              "nodeType": "Block",
              "src": "3311:167:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58002,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58002,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "3330:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58027,
                      "src": "3322:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 58001,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3322:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 58006,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 58003,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57907,
                        "src": "3341:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 58004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3349:8:85",
                      "memberName": "lockData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33475,
                      "src": "3341:16:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 58005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3341:18:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3321:38:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 58010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58008,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58002,
                          "src": "3376:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 58009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3386:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "3376:11:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 58007,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "3369:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 58011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3369:19:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58012,
                  "nodeType": "ExpressionStatement",
                  "src": "3369:19:85"
                },
                {
                  "assignments": [
                    58014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58014,
                      "mutability": "mutable",
                      "name": "locker",
                      "nameLocation": "3406:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58027,
                      "src": "3398:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 58013,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3398:7:85",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58019,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 58017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3431:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 58015,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57907,
                        "src": "3415:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 58016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3423:7:85",
                      "memberName": "getLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33467,
                      "src": "3415:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 58018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3415:18:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3398:35:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 58024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58021,
                          "name": "locker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58014,
                          "src": "3450:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 58022,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3460:3:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 58023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3464:6:85",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3460:10:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3450:20:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 58020,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "3443:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 58025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3443:28:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58026,
                  "nodeType": "ExpressionStatement",
                  "src": "3443:28:85"
                }
              ]
            },
            "functionSelector": "bc846e17",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionChecker2",
            "nameLocation": "3270:17:85",
            "parameters": {
              "id": 57999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57998,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58028,
                  "src": "3288:7:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3288:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3287:9:85"
            },
            "returnParameters": {
              "id": 58000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3311:0:85"
            },
            "scope": 58157,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58156,
            "nodeType": "FunctionDefinition",
            "src": "3484:834:85",
            "nodes": [],
            "body": {
              "id": 58155,
              "nodeType": "Block",
              "src": "3554:764:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58037,
                      "mutability": "mutable",
                      "name": "locker0",
                      "nameLocation": "3583:7:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58155,
                      "src": "3564:26:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                        "typeString": "contract SimpleLinearLocker"
                      },
                      "typeName": {
                        "id": 58036,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58035,
                          "name": "SimpleLinearLocker",
                          "nameLocations": [
                            "3564:18:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57902,
                          "src": "3564:18:85"
                        },
                        "referencedDeclaration": 57902,
                        "src": "3564:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58042,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3593:22:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SimpleLinearLocker_$57902_$",
                        "typeString": "function () returns (contract SimpleLinearLocker)"
                      },
                      "typeName": {
                        "id": 58039,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58038,
                          "name": "SimpleLinearLocker",
                          "nameLocations": [
                            "3597:18:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57902,
                          "src": "3597:18:85"
                        },
                        "referencedDeclaration": 57902,
                        "src": "3597:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      }
                    },
                    "id": 58041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3593:24:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                      "typeString": "contract SimpleLinearLocker"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3564:53:85"
                },
                {
                  "assignments": [
                    58045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58045,
                      "mutability": "mutable",
                      "name": "locker1",
                      "nameLocation": "3646:7:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58155,
                      "src": "3627:26:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                        "typeString": "contract SimpleLinearLocker"
                      },
                      "typeName": {
                        "id": 58044,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58043,
                          "name": "SimpleLinearLocker",
                          "nameLocations": [
                            "3627:18:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57902,
                          "src": "3627:18:85"
                        },
                        "referencedDeclaration": 57902,
                        "src": "3627:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58050,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3656:22:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SimpleLinearLocker_$57902_$",
                        "typeString": "function () returns (contract SimpleLinearLocker)"
                      },
                      "typeName": {
                        "id": 58047,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58046,
                          "name": "SimpleLinearLocker",
                          "nameLocations": [
                            "3660:18:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57902,
                          "src": "3660:18:85"
                        },
                        "referencedDeclaration": 57902,
                        "src": "3660:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      }
                    },
                    "id": 58049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3656:24:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                      "typeString": "contract SimpleLinearLocker"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3627:53:85"
                },
                {
                  "assignments": [
                    58053
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58053,
                      "mutability": "mutable",
                      "name": "locker2",
                      "nameLocation": "3709:7:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58155,
                      "src": "3690:26:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                        "typeString": "contract SimpleLinearLocker"
                      },
                      "typeName": {
                        "id": 58052,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58051,
                          "name": "SimpleLinearLocker",
                          "nameLocations": [
                            "3690:18:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57902,
                          "src": "3690:18:85"
                        },
                        "referencedDeclaration": 57902,
                        "src": "3690:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58058,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3719:22:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SimpleLinearLocker_$57902_$",
                        "typeString": "function () returns (contract SimpleLinearLocker)"
                      },
                      "typeName": {
                        "id": 58055,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58054,
                          "name": "SimpleLinearLocker",
                          "nameLocations": [
                            "3723:18:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57902,
                          "src": "3723:18:85"
                        },
                        "referencedDeclaration": 57902,
                        "src": "3723:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      }
                    },
                    "id": 58057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3719:24:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                      "typeString": "contract SimpleLinearLocker"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3690:53:85"
                },
                {
                  "assignments": [
                    58060,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58060,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "3763:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58155,
                      "src": "3755:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 58059,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3755:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 58064,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 58061,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57907,
                        "src": "3774:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 58062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3782:8:85",
                      "memberName": "lockData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33475,
                      "src": "3774:16:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 58063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3774:18:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3754:38:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 58068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58066,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58060,
                          "src": "3809:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 58067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3819:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3809:11:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 58065,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "3802:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 58069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3802:19:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58070,
                  "nodeType": "ExpressionStatement",
                  "src": "3802:19:85"
                },
                {
                  "assignments": [
                    58072
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58072,
                      "mutability": "mutable",
                      "name": "locker",
                      "nameLocation": "3839:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58155,
                      "src": "3831:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 58071,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3831:7:85",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58077,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 58075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3864:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 58073,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57907,
                        "src": "3848:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      "id": 58074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3856:7:85",
                      "memberName": "getLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33467,
                      "src": "3848:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 58076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3848:18:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3831:35:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 58084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58079,
                          "name": "locker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58072,
                          "src": "3883:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 58082,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3901:4:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ParallelLocker_$58157",
                                "typeString": "contract ParallelLocker"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ParallelLocker_$58157",
                                "typeString": "contract ParallelLocker"
                              }
                            ],
                            "id": 58081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3893:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 58080,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3893:7:85",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 58083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3893:13:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3883:23:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 58078,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "3876:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 58085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3876:31:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58086,
                  "nodeType": "ExpressionStatement",
                  "src": "3876:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58090,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57907,
                        "src": "3931:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 58091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3940:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "id": 58092,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "3943:4:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ParallelLocker_$58157",
                            "typeString": "contract ParallelLocker"
                          }
                        },
                        "id": 58093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3948:17:85",
                        "memberName": "assertionChecker0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57960,
                        "src": "3943:22:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) view external"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) view external"
                        }
                      ],
                      "expression": {
                        "id": 58087,
                        "name": "locker0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58037,
                        "src": "3918:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      },
                      "id": 58089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3926:4:85",
                      "memberName": "main",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57848,
                      "src": "3918:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IPoolManager_$33638_$_t_uint256_$_t_function_external_nonpayable$_t_uint256_$returns$__$_$returns$__$",
                        "typeString": "function (contract IPoolManager,uint256,function (uint256) external) external"
                      }
                    },
                    "id": 58094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3918:48:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58095,
                  "nodeType": "ExpressionStatement",
                  "src": "3918:48:85"
                },
                {
                  "expression": {
                    "id": 58101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 58096,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58060,
                          "src": "3977:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null
                      ],
                      "id": 58097,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3976:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$",
                        "typeString": "tuple(uint128,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 58098,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57907,
                          "src": "3988:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPoolManager_$33638",
                            "typeString": "contract IPoolManager"
                          }
                        },
                        "id": 58099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3996:8:85",
                        "memberName": "lockData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33475,
                        "src": "3988:16:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 58100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3988:18:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "3976:30:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58102,
                  "nodeType": "ExpressionStatement",
                  "src": "3976:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 58106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58104,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58060,
                          "src": "4023:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 58105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4033:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4023:11:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 58103,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "4016:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 58107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4016:19:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58108,
                  "nodeType": "ExpressionStatement",
                  "src": "4016:19:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58112,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57907,
                        "src": "4059:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 58113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4068:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "expression": {
                          "id": 58114,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4071:4:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ParallelLocker_$58157",
                            "typeString": "contract ParallelLocker"
                          }
                        },
                        "id": 58115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4076:17:85",
                        "memberName": "assertionChecker1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57996,
                        "src": "4071:22:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) view external"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) view external"
                        }
                      ],
                      "expression": {
                        "id": 58109,
                        "name": "locker1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58045,
                        "src": "4046:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      },
                      "id": 58111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4054:4:85",
                      "memberName": "main",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57848,
                      "src": "4046:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IPoolManager_$33638_$_t_uint256_$_t_function_external_nonpayable$_t_uint256_$returns$__$_$returns$__$",
                        "typeString": "function (contract IPoolManager,uint256,function (uint256) external) external"
                      }
                    },
                    "id": 58116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4046:48:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58117,
                  "nodeType": "ExpressionStatement",
                  "src": "4046:48:85"
                },
                {
                  "expression": {
                    "id": 58123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 58118,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58060,
                          "src": "4105:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null
                      ],
                      "id": 58119,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4104:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$",
                        "typeString": "tuple(uint128,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 58120,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57907,
                          "src": "4116:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPoolManager_$33638",
                            "typeString": "contract IPoolManager"
                          }
                        },
                        "id": 58121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4124:8:85",
                        "memberName": "lockData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33475,
                        "src": "4116:16:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 58122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4116:18:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "4104:30:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58124,
                  "nodeType": "ExpressionStatement",
                  "src": "4104:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 58128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58126,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58060,
                          "src": "4151:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 58127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4161:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4151:11:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 58125,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "4144:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 58129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4144:19:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58130,
                  "nodeType": "ExpressionStatement",
                  "src": "4144:19:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58134,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57907,
                        "src": "4187:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 58135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4196:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "id": 58136,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4199:4:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ParallelLocker_$58157",
                            "typeString": "contract ParallelLocker"
                          }
                        },
                        "id": 58137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4204:17:85",
                        "memberName": "assertionChecker2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58028,
                        "src": "4199:22:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) view external"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) view external"
                        }
                      ],
                      "expression": {
                        "id": 58131,
                        "name": "locker2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58053,
                        "src": "4174:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      },
                      "id": 58133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4182:4:85",
                      "memberName": "main",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57848,
                      "src": "4174:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IPoolManager_$33638_$_t_uint256_$_t_function_external_nonpayable$_t_uint256_$returns$__$_$returns$__$",
                        "typeString": "function (contract IPoolManager,uint256,function (uint256) external) external"
                      }
                    },
                    "id": 58138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4174:48:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58139,
                  "nodeType": "ExpressionStatement",
                  "src": "4174:48:85"
                },
                {
                  "expression": {
                    "id": 58145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 58140,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58060,
                          "src": "4233:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null
                      ],
                      "id": 58141,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4232:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$",
                        "typeString": "tuple(uint128,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 58142,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57907,
                          "src": "4244:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPoolManager_$33638",
                            "typeString": "contract IPoolManager"
                          }
                        },
                        "id": 58143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4252:8:85",
                        "memberName": "lockData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33475,
                        "src": "4244:16:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 58144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4244:18:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "4232:30:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58146,
                  "nodeType": "ExpressionStatement",
                  "src": "4232:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 58150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58148,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58060,
                          "src": "4279:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 58149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4289:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4279:11:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 58147,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "4272:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 58151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4272:19:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58152,
                  "nodeType": "ExpressionStatement",
                  "src": "4272:19:85"
                },
                {
                  "expression": {
                    "hexValue": "",
                    "id": 58153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4309:2:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 58034,
                  "id": 58154,
                  "nodeType": "Return",
                  "src": "4302:9:85"
                }
              ]
            },
            "baseFunctions": [
              33662
            ],
            "functionSelector": "ab6291fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockAcquired",
            "nameLocation": "3493:12:85",
            "parameters": {
              "id": 58031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58030,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58156,
                  "src": "3506:14:85",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 58029,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3506:5:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3505:16:85"
            },
            "returnParameters": {
              "id": 58034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58033,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58156,
                  "src": "3540:12:85",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 58032,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3540:5:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3539:14:85"
            },
            "scope": 58157,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57903,
              "name": "ILockCallback",
              "nameLocations": [
                "2606:13:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33663,
              "src": "2606:13:85"
            },
            "id": 57904,
            "nodeType": "InheritanceSpecifier",
            "src": "2606:13:85"
          }
        ],
        "canonicalName": "ParallelLocker",
        "contractDependencies": [
          57902
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          58157,
          33663
        ],
        "name": "ParallelLocker",
        "nameLocation": "2588:14:85",
        "scope": 58377,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 58376,
        "nodeType": "ContractDefinition",
        "src": "4322:1534:85",
        "nodes": [
          {
            "id": 58166,
            "nodeType": "VariableDeclaration",
            "src": "4396:19:85",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "manager",
            "nameLocation": "4408:7:85",
            "scope": 58376,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PoolManager_$33031",
              "typeString": "contract PoolManager"
            },
            "typeName": {
              "id": 58165,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58164,
                "name": "PoolManager",
                "nameLocations": [
                  "4396:11:85"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33031,
                "src": "4396:11:85"
              },
              "referencedDeclaration": 33031,
              "src": "4396:11:85",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PoolManager_$33031",
                "typeString": "contract PoolManager"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58179,
            "nodeType": "FunctionDefinition",
            "src": "4422:109:85",
            "nodes": [],
            "body": {
              "id": 58178,
              "nodeType": "Block",
              "src": "4446:85:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58169,
                      "name": "initializeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65761,
                      "src": "4456:16:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 58170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4456:18:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58171,
                  "nodeType": "ExpressionStatement",
                  "src": "4456:18:85"
                },
                {
                  "expression": {
                    "id": 58176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58172,
                      "name": "manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58166,
                      "src": "4484:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PoolManager_$33031",
                        "typeString": "contract PoolManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 58173,
                          "name": "Deployers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65616,
                          "src": "4494:9:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Deployers_$65616_$",
                            "typeString": "type(contract Deployers)"
                          }
                        },
                        "id": 58174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4504:18:85",
                        "memberName": "createFreshManager",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65615,
                        "src": "4494:28:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_PoolManager_$33031_$",
                          "typeString": "function () returns (contract PoolManager)"
                        }
                      },
                      "id": 58175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4494:30:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PoolManager_$33031",
                        "typeString": "contract PoolManager"
                      }
                    },
                    "src": "4484:40:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PoolManager_$33031",
                      "typeString": "contract PoolManager"
                    }
                  },
                  "id": 58177,
                  "nodeType": "ExpressionStatement",
                  "src": "4484:40:85"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "4431:5:85",
            "parameters": {
              "id": 58167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4436:2:85"
            },
            "returnParameters": {
              "id": 58168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4446:0:85"
            },
            "scope": 58376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58227,
            "nodeType": "FunctionDefinition",
            "src": "4537:283:85",
            "nodes": [],
            "body": {
              "id": 58226,
              "nodeType": "Block",
              "src": "4571:249:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58184,
                      "mutability": "mutable",
                      "name": "locker",
                      "nameLocation": "4593:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58226,
                      "src": "4581:18:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenLocker_$57811",
                        "typeString": "contract TokenLocker"
                      },
                      "typeName": {
                        "id": 58183,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58182,
                          "name": "TokenLocker",
                          "nameLocations": [
                            "4581:11:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57811,
                          "src": "4581:11:85"
                        },
                        "referencedDeclaration": 57811,
                        "src": "4581:11:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenLocker_$57811",
                          "typeString": "contract TokenLocker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58189,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4602:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenLocker_$57811_$",
                        "typeString": "function () returns (contract TokenLocker)"
                      },
                      "typeName": {
                        "id": 58186,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58185,
                          "name": "TokenLocker",
                          "nameLocations": [
                            "4606:11:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57811,
                          "src": "4606:11:85"
                        },
                        "referencedDeclaration": 57811,
                        "src": "4606:11:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenLocker_$57811",
                          "typeString": "contract TokenLocker"
                        }
                      }
                    },
                    "id": 58188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4602:17:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenLocker_$57811",
                      "typeString": "contract TokenLocker"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4581:38:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 58199,
                            "name": "locker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58184,
                            "src": "4680:6:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLocker_$57811",
                              "typeString": "contract TokenLocker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLocker_$57811",
                              "typeString": "contract TokenLocker"
                            }
                          ],
                          "id": 58198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4672:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58197,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4672:7:85",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4672:15:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 58201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4689:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 58193,
                                "name": "currency0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65705,
                                "src": "4655:9:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                                  "typeString": "Currency"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                                  "typeString": "Currency"
                                }
                              ],
                              "expression": {
                                "id": 58191,
                                "name": "Currency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41931,
                                "src": "4639:8:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$41931_$",
                                  "typeString": "type(Currency)"
                                }
                              },
                              "id": 58192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4648:6:85",
                              "memberName": "unwrap",
                              "nodeType": "MemberAccess",
                              "src": "4639:15:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$41931_$returns$_t_address_$",
                                "typeString": "function (Currency) pure returns (address)"
                              }
                            },
                            "id": 58194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4639:26:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 58190,
                          "name": "MockERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30647,
                          "src": "4629:9:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MockERC20_$30647_$",
                            "typeString": "type(contract MockERC20)"
                          }
                        },
                        "id": 58195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4629:37:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$30647",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 58196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4667:4:85",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30633,
                      "src": "4629:42:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 58202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4629:62:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58203,
                  "nodeType": "ExpressionStatement",
                  "src": "4629:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 58213,
                            "name": "locker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58184,
                            "src": "4755:6:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLocker_$57811",
                              "typeString": "contract TokenLocker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLocker_$57811",
                              "typeString": "contract TokenLocker"
                            }
                          ],
                          "id": 58212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4747:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58211,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4747:7:85",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4747:15:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 58215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4764:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 58207,
                                "name": "currency0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65705,
                                "src": "4727:9:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                                  "typeString": "Currency"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                                  "typeString": "Currency"
                                }
                              ],
                              "expression": {
                                "id": 58205,
                                "name": "Currency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41931,
                                "src": "4711:8:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$41931_$",
                                  "typeString": "type(Currency)"
                                }
                              },
                              "id": 58206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4720:6:85",
                              "memberName": "unwrap",
                              "nodeType": "MemberAccess",
                              "src": "4711:15:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$41931_$returns$_t_address_$",
                                "typeString": "function (Currency) pure returns (address)"
                              }
                            },
                            "id": 58208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4711:26:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 58204,
                          "name": "MockERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30647,
                          "src": "4701:9:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MockERC20_$30647_$",
                            "typeString": "type(contract MockERC20)"
                          }
                        },
                        "id": 58209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4701:37:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$30647",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 58210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4739:7:85",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30752,
                      "src": "4701:45:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 58216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4701:65:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58217,
                  "nodeType": "ExpressionStatement",
                  "src": "4701:65:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58221,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58166,
                        "src": "4788:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      {
                        "id": 58222,
                        "name": "currency0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65705,
                        "src": "4797:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                          "typeString": "Currency"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 58223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4808:4:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                          "typeString": "Currency"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 58218,
                        "name": "locker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58184,
                        "src": "4776:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenLocker_$57811",
                          "typeString": "contract TokenLocker"
                        }
                      },
                      "id": 58220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4783:4:85",
                      "memberName": "main",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57658,
                      "src": "4776:11:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IPoolManager_$33638_$_t_userDefinedValueType$_Currency_$41931_$_t_bool_$returns$__$",
                        "typeString": "function (contract IPoolManager,Currency,bool) external"
                      }
                    },
                    "id": 58224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4776:37:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58225,
                  "nodeType": "ExpressionStatement",
                  "src": "4776:37:85"
                }
              ]
            },
            "functionSelector": "ad4739b1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenLocker",
            "nameLocation": "4546:15:85",
            "parameters": {
              "id": 58180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4561:2:85"
            },
            "returnParameters": {
              "id": 58181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4571:0:85"
            },
            "scope": 58376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58286,
            "nodeType": "FunctionDefinition",
            "src": "4826:375:85",
            "nodes": [],
            "body": {
              "id": 58285,
              "nodeType": "Block",
              "src": "4860:341:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58232,
                      "mutability": "mutable",
                      "name": "locker",
                      "nameLocation": "4882:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58285,
                      "src": "4870:18:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenLocker_$57811",
                        "typeString": "contract TokenLocker"
                      },
                      "typeName": {
                        "id": 58231,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58230,
                          "name": "TokenLocker",
                          "nameLocations": [
                            "4870:11:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57811,
                          "src": "4870:11:85"
                        },
                        "referencedDeclaration": 57811,
                        "src": "4870:11:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenLocker_$57811",
                          "typeString": "contract TokenLocker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58237,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4891:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenLocker_$57811_$",
                        "typeString": "function () returns (contract TokenLocker)"
                      },
                      "typeName": {
                        "id": 58234,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58233,
                          "name": "TokenLocker",
                          "nameLocations": [
                            "4895:11:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57811,
                          "src": "4895:11:85"
                        },
                        "referencedDeclaration": 57811,
                        "src": "4895:11:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenLocker_$57811",
                          "typeString": "contract TokenLocker"
                        }
                      }
                    },
                    "id": 58236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4891:17:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenLocker_$57811",
                      "typeString": "contract TokenLocker"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4870:38:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 58247,
                            "name": "locker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58232,
                            "src": "4969:6:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLocker_$57811",
                              "typeString": "contract TokenLocker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLocker_$57811",
                              "typeString": "contract TokenLocker"
                            }
                          ],
                          "id": 58246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4961:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58245,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4961:7:85",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4961:15:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 58249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4978:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 58241,
                                "name": "currency0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65705,
                                "src": "4944:9:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                                  "typeString": "Currency"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                                  "typeString": "Currency"
                                }
                              ],
                              "expression": {
                                "id": 58239,
                                "name": "Currency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41931,
                                "src": "4928:8:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$41931_$",
                                  "typeString": "type(Currency)"
                                }
                              },
                              "id": 58240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4937:6:85",
                              "memberName": "unwrap",
                              "nodeType": "MemberAccess",
                              "src": "4928:15:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$41931_$returns$_t_address_$",
                                "typeString": "function (Currency) pure returns (address)"
                              }
                            },
                            "id": 58242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4928:26:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 58238,
                          "name": "MockERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30647,
                          "src": "4918:9:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MockERC20_$30647_$",
                            "typeString": "type(contract MockERC20)"
                          }
                        },
                        "id": 58243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4918:37:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$30647",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 58244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4956:4:85",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30633,
                      "src": "4918:42:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 58250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4918:62:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58251,
                  "nodeType": "ExpressionStatement",
                  "src": "4918:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 58261,
                            "name": "locker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58232,
                            "src": "5044:6:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLocker_$57811",
                              "typeString": "contract TokenLocker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLocker_$57811",
                              "typeString": "contract TokenLocker"
                            }
                          ],
                          "id": 58260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5036:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58259,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5036:7:85",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5036:15:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 58263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5053:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 58255,
                                "name": "currency0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65705,
                                "src": "5016:9:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                                  "typeString": "Currency"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                                  "typeString": "Currency"
                                }
                              ],
                              "expression": {
                                "id": 58253,
                                "name": "Currency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41931,
                                "src": "5000:8:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_userDefinedValueType$_Currency_$41931_$",
                                  "typeString": "type(Currency)"
                                }
                              },
                              "id": 58254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5009:6:85",
                              "memberName": "unwrap",
                              "nodeType": "MemberAccess",
                              "src": "5000:15:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Currency_$41931_$returns$_t_address_$",
                                "typeString": "function (Currency) pure returns (address)"
                              }
                            },
                            "id": 58256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5000:26:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 58252,
                          "name": "MockERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30647,
                          "src": "4990:9:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MockERC20_$30647_$",
                            "typeString": "type(contract MockERC20)"
                          }
                        },
                        "id": 58257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4990:37:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$30647",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 58258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5028:7:85",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30752,
                      "src": "4990:45:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 58264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4990:65:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58265,
                  "nodeType": "ExpressionStatement",
                  "src": "4990:65:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 58271,
                                "name": "IPoolManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33638,
                                "src": "5104:12:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPoolManager_$33638_$",
                                  "typeString": "type(contract IPoolManager)"
                                }
                              },
                              "id": 58272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5117:18:85",
                              "memberName": "CurrencyNotSettled",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33284,
                              "src": "5104:31:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 58273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5136:8:85",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5104:40:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 58269,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5081:3:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 58270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5085:18:85",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5081:22:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 58274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5081:64:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 58266,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "5065:2:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12595",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 58268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5068:12:85",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12329,
                      "src": "5065:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 58275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5065:81:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58276,
                  "nodeType": "ExpressionStatement",
                  "src": "5065:81:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58280,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58166,
                        "src": "5168:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      {
                        "id": 58281,
                        "name": "currency0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65705,
                        "src": "5177:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                          "typeString": "Currency"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 58282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5188:5:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Currency_$41931",
                          "typeString": "Currency"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 58277,
                        "name": "locker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58232,
                        "src": "5156:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenLocker_$57811",
                          "typeString": "contract TokenLocker"
                        }
                      },
                      "id": 58279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5163:4:85",
                      "memberName": "main",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57658,
                      "src": "5156:11:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IPoolManager_$33638_$_t_userDefinedValueType$_Currency_$41931_$_t_bool_$returns$__$",
                        "typeString": "function (contract IPoolManager,Currency,bool) external"
                      }
                    },
                    "id": 58283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5156:38:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58284,
                  "nodeType": "ExpressionStatement",
                  "src": "5156:38:85"
                }
              ]
            },
            "functionSelector": "63dbc58d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenRevert",
            "nameLocation": "4835:15:85",
            "parameters": {
              "id": 58228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4850:2:85"
            },
            "returnParameters": {
              "id": 58229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4860:0:85"
            },
            "scope": 58376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58318,
            "nodeType": "FunctionDefinition",
            "src": "5207:229:85",
            "nodes": [],
            "body": {
              "id": 58317,
              "nodeType": "Block",
              "src": "5257:179:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58292,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58292,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "5276:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58317,
                      "src": "5268:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 58291,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "5268:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 58296,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 58293,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58166,
                        "src": "5287:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      "id": 58294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5295:8:85",
                      "memberName": "lockData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31671,
                      "src": "5287:16:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 58295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5287:18:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5267:38:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58298,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58292,
                        "src": "5324:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58299,
                          "name": "depth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58288,
                          "src": "5332:5:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 58300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5340:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5332:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58297,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2507,
                        2532,
                        2545,
                        2561,
                        2603,
                        2645,
                        2687,
                        2724,
                        2761,
                        2798,
                        813,
                        838,
                        868,
                        893,
                        952,
                        977,
                        1007,
                        1032,
                        2132,
                        2167
                      ],
                      "referencedDeclaration": 1007,
                      "src": "5315:8:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5315:27:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58303,
                  "nodeType": "ExpressionStatement",
                  "src": "5315:27:85"
                },
                {
                  "assignments": [
                    58305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58305,
                      "mutability": "mutable",
                      "name": "locker",
                      "nameLocation": "5360:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58317,
                      "src": "5352:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 58304,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5352:7:85",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58310,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 58308,
                        "name": "depth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58288,
                        "src": "5385:5:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 58306,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58166,
                        "src": "5369:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      "id": 58307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5377:7:85",
                      "memberName": "getLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31843,
                      "src": "5369:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 58309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5369:22:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5352:39:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58312,
                        "name": "locker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58305,
                        "src": "5410:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 58313,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5418:3:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 58314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5422:6:85",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5418:10:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 58311,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2507,
                        2532,
                        2545,
                        2561,
                        2603,
                        2645,
                        2687,
                        2724,
                        2761,
                        2798,
                        813,
                        838,
                        868,
                        893,
                        952,
                        977,
                        1007,
                        1032,
                        2132,
                        2167
                      ],
                      "referencedDeclaration": 813,
                      "src": "5401:8:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 58315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5401:28:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58316,
                  "nodeType": "ExpressionStatement",
                  "src": "5401:28:85"
                }
              ]
            },
            "functionSelector": "88428031",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionChecker",
            "nameLocation": "5216:16:85",
            "parameters": {
              "id": 58289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58288,
                  "mutability": "mutable",
                  "name": "depth",
                  "nameLocation": "5241:5:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58318,
                  "src": "5233:13:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5233:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5232:15:85"
            },
            "returnParameters": {
              "id": 58290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5257:0:85"
            },
            "scope": 58376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58357,
            "nodeType": "FunctionDefinition",
            "src": "5442:278:85",
            "nodes": [],
            "body": {
              "id": 58356,
              "nodeType": "Block",
              "src": "5483:237:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58323,
                      "mutability": "mutable",
                      "name": "locker",
                      "nameLocation": "5512:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58356,
                      "src": "5493:25:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                        "typeString": "contract SimpleLinearLocker"
                      },
                      "typeName": {
                        "id": 58322,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58321,
                          "name": "SimpleLinearLocker",
                          "nameLocations": [
                            "5493:18:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57902,
                          "src": "5493:18:85"
                        },
                        "referencedDeclaration": 57902,
                        "src": "5493:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58328,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5521:22:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SimpleLinearLocker_$57902_$",
                        "typeString": "function () returns (contract SimpleLinearLocker)"
                      },
                      "typeName": {
                        "id": 58325,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58324,
                          "name": "SimpleLinearLocker",
                          "nameLocations": [
                            "5525:18:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57902,
                          "src": "5525:18:85"
                        },
                        "referencedDeclaration": 57902,
                        "src": "5525:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      }
                    },
                    "id": 58327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5521:24:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                      "typeString": "contract SimpleLinearLocker"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5493:52:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58332,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58166,
                        "src": "5567:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 58333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5576:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "id": 58334,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "5579:4:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PoolManagerReentrancyTest_$58376",
                            "typeString": "contract PoolManagerReentrancyTest"
                          }
                        },
                        "id": 58335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5584:16:85",
                        "memberName": "assertionChecker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58318,
                        "src": "5579:21:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) external"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) external"
                        }
                      ],
                      "expression": {
                        "id": 58329,
                        "name": "locker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58323,
                        "src": "5555:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      },
                      "id": 58331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5562:4:85",
                      "memberName": "main",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57848,
                      "src": "5555:11:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IPoolManager_$33638_$_t_uint256_$_t_function_external_nonpayable$_t_uint256_$returns$__$_$returns$__$",
                        "typeString": "function (contract IPoolManager,uint256,function (uint256) external) external"
                      }
                    },
                    "id": 58336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5555:46:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58337,
                  "nodeType": "ExpressionStatement",
                  "src": "5555:46:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58341,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58166,
                        "src": "5623:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 58342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5632:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "expression": {
                          "id": 58343,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "5635:4:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PoolManagerReentrancyTest_$58376",
                            "typeString": "contract PoolManagerReentrancyTest"
                          }
                        },
                        "id": 58344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5640:16:85",
                        "memberName": "assertionChecker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58318,
                        "src": "5635:21:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) external"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) external"
                        }
                      ],
                      "expression": {
                        "id": 58338,
                        "name": "locker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58323,
                        "src": "5611:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      },
                      "id": 58340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5618:4:85",
                      "memberName": "main",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57848,
                      "src": "5611:11:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IPoolManager_$33638_$_t_uint256_$_t_function_external_nonpayable$_t_uint256_$returns$__$_$returns$__$",
                        "typeString": "function (contract IPoolManager,uint256,function (uint256) external) external"
                      }
                    },
                    "id": 58345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5611:46:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58346,
                  "nodeType": "ExpressionStatement",
                  "src": "5611:46:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58350,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58166,
                        "src": "5679:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 58351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5688:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "expression": {
                          "id": 58352,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "5691:4:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PoolManagerReentrancyTest_$58376",
                            "typeString": "contract PoolManagerReentrancyTest"
                          }
                        },
                        "id": 58353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5696:16:85",
                        "memberName": "assertionChecker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58318,
                        "src": "5691:21:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) external"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) external"
                        }
                      ],
                      "expression": {
                        "id": 58347,
                        "name": "locker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58323,
                        "src": "5667:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleLinearLocker_$57902",
                          "typeString": "contract SimpleLinearLocker"
                        }
                      },
                      "id": 58349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5674:4:85",
                      "memberName": "main",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57848,
                      "src": "5667:11:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IPoolManager_$33638_$_t_uint256_$_t_function_external_nonpayable$_t_uint256_$returns$__$_$returns$__$",
                        "typeString": "function (contract IPoolManager,uint256,function (uint256) external) external"
                      }
                    },
                    "id": 58354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5667:46:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58355,
                  "nodeType": "ExpressionStatement",
                  "src": "5667:46:85"
                }
              ]
            },
            "functionSelector": "e9b3aebe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSimpleLinearLocker",
            "nameLocation": "5451:22:85",
            "parameters": {
              "id": 58319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5473:2:85"
            },
            "returnParameters": {
              "id": 58320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5483:0:85"
            },
            "scope": 58376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58375,
            "nodeType": "FunctionDefinition",
            "src": "5726:128:85",
            "nodes": [],
            "body": {
              "id": 58374,
              "nodeType": "Block",
              "src": "5763:91:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58362,
                      "mutability": "mutable",
                      "name": "locker",
                      "nameLocation": "5788:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58374,
                      "src": "5773:21:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ParallelLocker_$58157",
                        "typeString": "contract ParallelLocker"
                      },
                      "typeName": {
                        "id": 58361,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58360,
                          "name": "ParallelLocker",
                          "nameLocations": [
                            "5773:14:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 58157,
                          "src": "5773:14:85"
                        },
                        "referencedDeclaration": 58157,
                        "src": "5773:14:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ParallelLocker_$58157",
                          "typeString": "contract ParallelLocker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58368,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 58366,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58166,
                        "src": "5816:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      ],
                      "id": 58365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5797:18:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IPoolManager_$33638_$returns$_t_contract$_ParallelLocker_$58157_$",
                        "typeString": "function (contract IPoolManager) returns (contract ParallelLocker)"
                      },
                      "typeName": {
                        "id": 58364,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58363,
                          "name": "ParallelLocker",
                          "nameLocations": [
                            "5801:14:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 58157,
                          "src": "5801:14:85"
                        },
                        "referencedDeclaration": 58157,
                        "src": "5801:14:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ParallelLocker_$58157",
                          "typeString": "contract ParallelLocker"
                        }
                      }
                    },
                    "id": 58367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5797:27:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ParallelLocker_$58157",
                      "typeString": "contract ParallelLocker"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5773:51:85"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 58369,
                        "name": "locker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58362,
                        "src": "5834:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ParallelLocker_$58157",
                          "typeString": "contract ParallelLocker"
                        }
                      },
                      "id": 58371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5841:4:85",
                      "memberName": "main",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57928,
                      "src": "5834:11:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 58372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5834:13:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58373,
                  "nodeType": "ExpressionStatement",
                  "src": "5834:13:85"
                }
              ]
            },
            "functionSelector": "a448f8b1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testParallelLocker",
            "nameLocation": "5735:18:85",
            "parameters": {
              "id": 58358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5753:2:85"
            },
            "returnParameters": {
              "id": 58359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5763:0:85"
            },
            "scope": 58376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 58158,
              "name": "Test",
              "nameLocations": [
                "4360:4:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11275,
              "src": "4360:4:85"
            },
            "id": 58159,
            "nodeType": "InheritanceSpecifier",
            "src": "4360:4:85"
          },
          {
            "baseName": {
              "id": 58160,
              "name": "Deployers",
              "nameLocations": [
                "4366:9:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65616,
              "src": "4366:9:85"
            },
            "id": 58161,
            "nodeType": "InheritanceSpecifier",
            "src": "4366:9:85"
          },
          {
            "baseName": {
              "id": 58162,
              "name": "TokenFixture",
              "nameLocations": [
                "4377:12:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65762,
              "src": "4377:12:85"
            },
            "id": 58163,
            "nodeType": "InheritanceSpecifier",
            "src": "4377:12:85"
          }
        ],
        "canonicalName": "PoolManagerReentrancyTest",
        "contractDependencies": [
          30647,
          33031,
          57811,
          57902,
          58157
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          58376,
          65762,
          65616,
          11275,
          2339,
          2336,
          11226,
          7025,
          6735,
          6056,
          4484,
          3790,
          2279
        ],
        "name": "PoolManagerReentrancyTest",
        "nameLocation": "4331:25:85",
        "scope": 58377,
        "usedErrors": [],
        "usedEvents": [
          498,
          502,
          506,
          510,
          514,
          518,
          522,
          526,
          532,
          538,
          546,
          554,
          560,
          566,
          572,
          578,
          2401,
          2406,
          2411,
          2418,
          2425,
          2432
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 85
}