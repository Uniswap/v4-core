{
  "abi": [
    {
      "inputs": [],
      "name": "FeeNotDynamic",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FeeTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProtocolFeeCannotBeFetched",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "protocolFeeController",
          "type": "address"
        }
      ],
      "name": "ProtocolFeeControllerUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MIN_PROTOCOL_FEE_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "Currency",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hookFeesAccrued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Currency",
          "name": "",
          "type": "address"
        }
      ],
      "name": "protocolFeesAccrued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MIN_PROTOCOL_FEE_DENOMINATOR()": "84e41c5e",
    "hookFeesAccrued(address,address)": "b4c41939",
    "protocolFeesAccrued(address)": "97e8cd4e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FeeNotDynamic\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeCannotBeFetched\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MIN_PROTOCOL_FEE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hookFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"protocolFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"FeeNotDynamic()\":[{\"notice\":\"Thrown when a pool does not have a dynamic fee.\"}],\"FeeTooLarge()\":[{\"notice\":\"Thrown when the protocol fee denominator is less than 4. Also thrown when the static or dynamic fee on a pool is exceeds 100%.\"}],\"ProtocolFeeCannotBeFetched()\":[{\"notice\":\"Thrown when not enough gas is provided to look up the protocol fee\"}]},\"kind\":\"user\",\"methods\":{\"MIN_PROTOCOL_FEE_DENOMINATOR()\":{\"notice\":\"Returns the minimum denominator for the protocol fee, which restricts it to a maximum of 25%\"},\"hookFeesAccrued(address,address)\":{\"notice\":\"Given a hook and a currency address, returns the fees accrued\"},\"protocolFeesAccrued(address)\":{\"notice\":\"Given a currency address, returns the protocol fees accrued in that currency\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IFees.sol\":\"IFees\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/interfaces/IFees.sol\":{\"keccak256\":\"0x7a2d2b74602f23a8944b45c745e8a512f7d8f00f8ba22742636abaf929379697\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab38548046bb65d089fd56b335a3b98d2b4f03e9af4763c2b7da2b04322a6e73\",\"dweb:/ipfs/QmVQfsaSwqV8ynqc9KEGWjQkxnAzju7uQQaFvxqhAd32cW\"]},\"src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0x8dc5ee72426906aeb12f4ae6a2426df059491739bd5cbdb8ea4a3e26970436c6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f7e30dbbc972cb78d169c8845d6210d27490c8534e68a20d4f296b11ec727b92\",\"dweb:/ipfs/QmXBvaWaAnPW25YGVm2sMbf5mwrzLapUcqPnrNiiGGXxmA\"]},\"src/types/Currency.sol\":{\"keccak256\":\"0xb1395e2817b604745bf6cd41821aafeaaa252caafe45133e54f02d6f6be13d2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ec58bd7634ccb1b74f59378e54771ae11cba37494b57ae64e3f6640d4afdd9\",\"dweb:/ipfs/QmeYL1TuGXcTYfsQBGu7p9urSqGjiJky8iJAgwTRYqrJ4F\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.22+commit.4fc1097e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "FeeNotDynamic"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FeeTooLarge"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProtocolFeeCannotBeFetched"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocolFeeController",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProtocolFeeControllerUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MIN_PROTOCOL_FEE_DENOMINATOR",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hookFeesAccrued",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Currency",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFeesAccrued",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MIN_PROTOCOL_FEE_DENOMINATOR()": {
            "notice": "Returns the minimum denominator for the protocol fee, which restricts it to a maximum of 25%"
          },
          "hookFeesAccrued(address,address)": {
            "notice": "Given a hook and a currency address, returns the fees accrued"
          },
          "protocolFeesAccrued(address)": {
            "notice": "Given a currency address, returns the protocol fees accrued in that currency"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/IFees.sol": "IFees"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/IFees.sol": {
        "keccak256": "0x7a2d2b74602f23a8944b45c745e8a512f7d8f00f8ba22742636abaf929379697",
        "urls": [
          "bzz-raw://ab38548046bb65d089fd56b335a3b98d2b4f03e9af4763c2b7da2b04322a6e73",
          "dweb:/ipfs/QmVQfsaSwqV8ynqc9KEGWjQkxnAzju7uQQaFvxqhAd32cW"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/IERC20Minimal.sol": {
        "keccak256": "0x8dc5ee72426906aeb12f4ae6a2426df059491739bd5cbdb8ea4a3e26970436c6",
        "urls": [
          "bzz-raw://f7e30dbbc972cb78d169c8845d6210d27490c8534e68a20d4f296b11ec727b92",
          "dweb:/ipfs/QmXBvaWaAnPW25YGVm2sMbf5mwrzLapUcqPnrNiiGGXxmA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/types/Currency.sol": {
        "keccak256": "0xb1395e2817b604745bf6cd41821aafeaaa252caafe45133e54f02d6f6be13d2b",
        "urls": [
          "bzz-raw://49ec58bd7634ccb1b74f59378e54771ae11cba37494b57ae64e3f6640d4afdd9",
          "dweb:/ipfs/QmeYL1TuGXcTYfsQBGu7p9urSqGjiJky8iJAgwTRYqrJ4F"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/IFees.sol",
    "id": 33094,
    "exportedSymbols": {
      "Currency": [
        44035
      ],
      "IFees": [
        33093
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1064:36",
    "nodes": [
      {
        "id": 33051,
        "nodeType": "PragmaDirective",
        "src": "32:24:36",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 33053,
        "nodeType": "ImportDirective",
        "src": "58:47:36",
        "nodes": [],
        "absolutePath": "src/types/Currency.sol",
        "file": "../types/Currency.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33094,
        "sourceUnit": 44307,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33052,
              "name": "Currency",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44035,
              "src": "66:8:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33093,
        "nodeType": "ContractDefinition",
        "src": "107:988:36",
        "nodes": [
          {
            "id": 33056,
            "nodeType": "ErrorDefinition",
            "src": "272:20:36",
            "nodes": [],
            "documentation": {
              "id": 33054,
              "nodeType": "StructuredDocumentation",
              "src": "129:138:36",
              "text": "@notice Thrown when the protocol fee denominator is less than 4. Also thrown when the static or dynamic fee on a pool is exceeds 100%."
            },
            "errorSelector": "fc5bee12",
            "name": "FeeTooLarge",
            "nameLocation": "278:11:36",
            "parameters": {
              "id": 33055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "289:2:36"
            }
          },
          {
            "id": 33059,
            "nodeType": "ErrorDefinition",
            "src": "380:35:36",
            "nodes": [],
            "documentation": {
              "id": 33057,
              "nodeType": "StructuredDocumentation",
              "src": "297:78:36",
              "text": "@notice Thrown when not enough gas is provided to look up the protocol fee"
            },
            "errorSelector": "1ee49702",
            "name": "ProtocolFeeCannotBeFetched",
            "nameLocation": "386:26:36",
            "parameters": {
              "id": 33058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:2:36"
            }
          },
          {
            "id": 33062,
            "nodeType": "ErrorDefinition",
            "src": "484:22:36",
            "nodes": [],
            "documentation": {
              "id": 33060,
              "nodeType": "StructuredDocumentation",
              "src": "420:59:36",
              "text": "@notice Thrown when a pool does not have a dynamic fee."
            },
            "errorSelector": "d00f12d2",
            "name": "FeeNotDynamic",
            "nameLocation": "490:13:36",
            "parameters": {
              "id": 33061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "503:2:36"
            }
          },
          {
            "id": 33066,
            "nodeType": "EventDefinition",
            "src": "512:66:36",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b4bd8ef53df690b9943d3318996006dbb82a25f54719d8c8035b516a2a5b8acc",
            "name": "ProtocolFeeControllerUpdated",
            "nameLocation": "518:28:36",
            "parameters": {
              "id": 33065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33064,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "protocolFeeController",
                  "nameLocation": "555:21:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 33066,
                  "src": "547:29:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "546:31:36"
            }
          },
          {
            "id": 33072,
            "nodeType": "FunctionDefinition",
            "src": "693:70:36",
            "nodes": [],
            "documentation": {
              "id": 33067,
              "nodeType": "StructuredDocumentation",
              "src": "584:104:36",
              "text": "@notice Returns the minimum denominator for the protocol fee, which restricts it to a maximum of 25%"
            },
            "functionSelector": "84e41c5e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MIN_PROTOCOL_FEE_DENOMINATOR",
            "nameLocation": "702:28:36",
            "parameters": {
              "id": 33068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "730:2:36"
            },
            "returnParameters": {
              "id": 33071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33070,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33072,
                  "src": "756:5:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 33069,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "755:7:36"
            },
            "scope": 33093,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33081,
            "nodeType": "FunctionDefinition",
            "src": "862:71:36",
            "nodes": [],
            "documentation": {
              "id": 33073,
              "nodeType": "StructuredDocumentation",
              "src": "769:88:36",
              "text": "@notice Given a currency address, returns the protocol fees accrued in that currency"
            },
            "functionSelector": "97e8cd4e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "protocolFeesAccrued",
            "nameLocation": "871:19:36",
            "parameters": {
              "id": 33077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33076,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33081,
                  "src": "891:8:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Currency_$44035",
                    "typeString": "Currency"
                  },
                  "typeName": {
                    "id": 33075,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33074,
                      "name": "Currency",
                      "nameLocations": [
                        "891:8:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44035,
                      "src": "891:8:36"
                    },
                    "referencedDeclaration": 44035,
                    "src": "891:8:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Currency_$44035",
                      "typeString": "Currency"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:10:36"
            },
            "returnParameters": {
              "id": 33080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33079,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33081,
                  "src": "924:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "923:9:36"
            },
            "scope": 33093,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 33092,
            "nodeType": "FunctionDefinition",
            "src": "1017:76:36",
            "nodes": [],
            "documentation": {
              "id": 33082,
              "nodeType": "StructuredDocumentation",
              "src": "939:73:36",
              "text": "@notice Given a hook and a currency address, returns the fees accrued"
            },
            "functionSelector": "b4c41939",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hookFeesAccrued",
            "nameLocation": "1026:15:36",
            "parameters": {
              "id": 33088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33084,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33092,
                  "src": "1042:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33087,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33092,
                  "src": "1051:8:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Currency_$44035",
                    "typeString": "Currency"
                  },
                  "typeName": {
                    "id": 33086,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33085,
                      "name": "Currency",
                      "nameLocations": [
                        "1051:8:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44035,
                      "src": "1051:8:36"
                    },
                    "referencedDeclaration": 44035,
                    "src": "1051:8:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Currency_$44035",
                      "typeString": "Currency"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1041:19:36"
            },
            "returnParameters": {
              "id": 33091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33090,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33092,
                  "src": "1084:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1083:9:36"
            },
            "scope": 33093,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IFees",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          33093
        ],
        "name": "IFees",
        "nameLocation": "117:5:36",
        "scope": 33094,
        "usedErrors": [
          33056,
          33059,
          33062
        ],
        "usedEvents": [
          33066
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 36
}