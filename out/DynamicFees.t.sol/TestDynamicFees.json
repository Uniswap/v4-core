{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "oldGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newGas",
          "type": "uint256"
        }
      ],
      "name": "GasMismatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "InvalidStringNumber",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "PoolId",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int128",
          "name": "amount0",
          "type": "int128"
        },
        {
          "indexed": false,
          "internalType": "int128",
          "name": "amount1",
          "type": "int128"
        },
        {
          "indexed": false,
          "internalType": "uint160",
          "name": "sqrtPriceX96",
          "type": "uint160"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CHECK_ENV_VAR",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SNAP_DIR",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PoolManager",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "contract IHooks",
          "name": "hooks",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "uint160",
          "name": "sqrtPriceX96",
          "type": "uint160"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "key",
          "type": "tuple"
        },
        {
          "internalType": "PoolId",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCacheDynamicFeeAndSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDynamicFeeAndBeforeSwapHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDynamicFeesCacheNoOtherHooks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testPoolInitializeFailsWithTooLargeFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSwapFailsWithTooLargeFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSwapWorks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testUpdateRevertsOnStaticFeePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "906:5184:77:-:0;;;1572:26:2;;;-1:-1:-1;;1572:26:2;;;1594:4;1572:26;;;;;;3288:44:6;;;;;;;;;758:28:4;;;;;;;;;;;1007:470:77;;;-1:-1:-1;;;;;;1007:470:77;;;-1:-1:-1;;;;;1007:470:77;;;;1484:502;;;;;;-1:-1:-1;;;;;1484:502:77;;;906:5184;;;;;;;;;-1:-1:-1;1101:8:0;;;;;;;;;;;;-1:-1:-1;;;1101:8:0;;;;1093:17;;:7;:17::i;:::-;1135:13;;;;;;;;;;;;;;;;1124:25;;-1:-1:-1;;;1124:25:0;;:10;;;;:25;;1135:13;1124:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;1124:25:0;;;;;;;;-1:-1:-1;;1124:25:0;;;;;;;;;;;;:::i;:::-;;;1120:136;;1232:5;:13;;-1:-1:-1;;1232:13:0;;;906:5184:77;;1120:136:0;1186:5;:14;;;;;;;-1:-1:-1;;1186:14:0;;;;;;;;;906:5184:77;;4561:205:0;4640:15;;;4653:1;4640:15;;;;;;;;;4615:22;;4640:15;;;;;;;;;;;;;;;;;;;;4615:40;;4665:19;;;;;;;;;;;;;-1:-1:-1;;;4665:19:0;;;:6;4672:1;4665:9;;;;;;;;:::i;:::-;;;;;;:19;;;;4694:16;;;;;;;;;;;;;-1:-1:-1;;;4694:16:0;;;:6;4701:1;4694:9;;;;;;;;:::i;:::-;;;;;;:16;;;;4732:3;4720:6;4727:1;4720:9;;;;;;;;:::i;:::-;;;;;;;;;;:15;4745:14;;-1:-1:-1;;;4745:14:0;;:6;;;;:14;;4752:6;;4745:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4745:14:0;;;;;;;;;;;;:::i;:::-;;4605:161;4561:205;:::o;14:250:98:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:98;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:98;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:98:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;:::-;706:53;545:220;-1:-1:-1;;;545:220:98:o;770:277::-;837:6;890:2;878:9;869:7;865:23;861:32;858:52;;;906:1;903;896:12;858:52;938:9;932:16;991:5;984:13;977:21;970:5;967:32;957:60;;1013:1;1010;1003:12;1052:127;1113:10;1108:3;1104:20;1101:1;1094:31;1144:4;1141:1;1134:15;1168:4;1165:1;1158:15;1184:127;1245:10;1240:3;1236:20;1233:1;1226:31;1276:4;1273:1;1266:15;1300:4;1297:1;1290:15;1316:803;1478:4;1507:2;1547;1536:9;1532:18;1577:2;1566:9;1559:21;1600:6;1635;1629:13;1666:6;1658;1651:22;1704:2;1693:9;1689:18;1682:25;;1766:2;1756:6;1753:1;1749:14;1738:9;1734:30;1730:39;1716:53;;1804:2;1796:6;1792:15;1825:1;1835:255;1849:6;1846:1;1843:13;1835:255;;;1942:2;1938:7;1926:9;1918:6;1914:22;1910:36;1905:3;1898:49;1970:40;2003:6;1994;1988:13;1970:40;:::i;:::-;1960:50;-1:-1:-1;2068:12:98;;;;2033:15;;;;1871:1;1864:9;1835:255;;;-1:-1:-1;2107:6:98;;1316:803;-1:-1:-1;;;;;;;1316:803:98:o;2124:896::-;2203:6;2256:2;2244:9;2235:7;2231:23;2227:32;2224:52;;;2272:1;2269;2262:12;2224:52;2299:16;;-1:-1:-1;;;;;2364:14:98;;;2361:34;;;2391:1;2388;2381:12;2361:34;2429:6;2418:9;2414:22;2404:32;;2474:7;2467:4;2463:2;2459:13;2455:27;2445:55;;2496:1;2493;2486:12;2445:55;2525:2;2519:9;2547:2;2543;2540:10;2537:36;;;2553:18;;:::i;:::-;2628:2;2622:9;2596:2;2682:13;;-1:-1:-1;;2678:22:98;;;2702:2;2674:31;2670:40;2658:53;;;2726:18;;;2746:22;;;2723:46;2720:72;;;2772:18;;:::i;:::-;2812:10;2808:2;2801:22;2847:2;2839:6;2832:18;2887:7;2882:2;2877;2873;2869:11;2865:20;2862:33;2859:53;;;2908:1;2905;2898:12;2859:53;2921:68;2986:2;2981;2973:6;2969:15;2964:2;2960;2956:11;2921:68;:::i;:::-;3008:6;2124:896;-1:-1:-1;;;;;;;2124:896:98:o;:::-;906:5184:77;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "906:5184:77:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4071:570;;;:::i;:::-;;2083:692;;;:::i;2781:326::-;;;:::i;2161:134:9:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5238:281:77;;;:::i;361:61:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2930:133:9:-;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;3537:528:77:-;;;:::i;2301:140:9:-;;;:::i;:::-;;;;;;;:::i;1658:242:95:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2778:146:9:-;;;:::i;475:53:0:-;;;;;;;;;;;;;;;;;;;;;1866:141:9;;;:::i;3113:187:77:-;;;:::i;1819:584:2:-;;;:::i;:::-;;;5770:14:98;;5763:22;5745:41;;5733:2;5718:18;1819:584:2;5605:187:98;5525:563:77;;;:::i;4647:585::-;;;:::i;2013:142:9:-;;;:::i;758:28:4:-;;;;;;;;;1572:26:2;;;;;;;;;4071:570:77;4126:11;;:23;;-1:-1:-1;;;4126:23:77;;4145:3;4126:23;;;5952:40:98;-1:-1:-1;;;;;4126:11:77;;;;:18;;5925::98;;4126:23:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4159:7:77;;:33;;-1:-1:-1;;;4159:33:77;;-1:-1:-1;;;;;4159:7:77;;;;-1:-1:-1;4159:28:77;;-1:-1:-1;4159:33:77;;4188:3;;4159:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4248:7:77;;4202:55;;-1:-1:-1;;;4202:55:77;;4216:4;4202:55;;;6968:41:98;;;7025:18;;;7018:50;;;7084:18;;;7077:50;;;7143:18;;;7136:50;-1:-1:-1;;;;;4248:7:77;;;7202:19:98;;;7195:84;4202:13:77;;-1:-1:-1;4202:13:77;;-1:-1:-1;6940:19:98;;4202:55:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4297:10:77;;4277:8;;;;;;;;:3;:8;-1:-1:-1;;;;;4277:8:77;;;;;;;;;;;;;;;-1:-1:-1;;;4277:8:77;;;;;;;;;;-1:-1:-1;;;4277:8:77;;;;;;;;;;;;;;;;;4297:10;;;-1:-1:-1;4277:10:77;;-1:-1:-1;4277:8:77;:10::i;:::-;4272:74;4310:1;;4316:18;-1:-1:-1;;;4333:1:77;4316:18;:::i;:::-;4272:74;;;7985:2:98;7974:22;;;7956:41;;8033:22;;;;8028:2;8013:18;;8006:50;-1:-1:-1;;;;;8092:55:98;8072:18;;;8065:83;-1:-1:-1;8179:2:98;8164:18;;8157:75;;;8263:3;8248:19;;8241:50;4342:3:77;8322::98;8307:19;;8300:50;4272:74:77;;;;;;7943:3:98;4272:74:77;;;4356:46;;;;;;;;;;;;;;;;;;:9;:46::i;:::-;4432:29;;;4443:4;4432:29;;;8527:41:98;4456:3:77;8584:18:98;;;8577:49;;;;4412:17:77;;8500:18:98;;4432:29:77;;;;-1:-1:-1;;4432:29:77;;;;;;4471:10;;4505:53;;;;;4471:10;4505:53;;4471:10;4432:29;4505:53;;;;;4432:29;;-1:-1:-1;;;;;;4471:10:77;;:15;;4500:3;;4505:53;;;;4539:18;;-1:-1:-1;;;130:29:94;4539:18:77;:::i;:::-;-1:-1:-1;;;;;4505:53:77;;;4560:39;;;;;;;;-1:-1:-1;4560:39:77;;;;;;;4471:144;;-1:-1:-1;;;;;;4471:144:77;;;;;;;;;;;4560:39;4601:4;;4471:144;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4625:9;:7;:9::i;:::-;4116:525;4071:570::o;2083:692::-;2117:20;2140:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2187:11:77;;2201:18;;;-1:-1:-1;;;;;2201:18:77;;;;;;;;;;;;;;;;;;2117:44;;-1:-1:-1;2171:7:77;;;;2187:11;;;;309:37:3;;2201:18:77;;;;;2171:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2246:17:77;;2266:18;;;;-1:-1:-1;;;;;2266:18:77;;;;;;;;;;;;;;;;2230:7;;-1:-1:-1;2230:7:77;;-1:-1:-1;2246:17:77;;;2266:18;;;-1:-1:-1;;2266:18:77;;;;2230:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2367:11:77;;2326:100;;-1:-1:-1;;;;;;2367:11:77;;-1:-1:-1;193:8:44;-1:-1:-1;;;2326:25:77;:100::i;:::-;-1:-1:-1;2296:130:77;;2306:3;2296:130;;-1:-1:-1;;2296:130:77;;;-1:-1:-1;;;;;2296:130:77;;;;;;;2297:7;2296:130;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2296:130:77;;;;;;;-1:-1:-1;;;2296:130:77;;;;;;-1:-1:-1;;;;2296:130:77;-1:-1:-1;;;2296:130:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2436:11;;:45;;-1:-1:-1;;;2436:45:77;;;;;10325:74:98;;;;2436:11:77;;:22;;10298:18:98;;2436:45:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2560:7:77;;2584:17;;2492:10;;-1:-1:-1;2526:132:77;;-1:-1:-1;;;;;;2560:7:77;;;;2584:17;193:8:44;-1:-1:-1;;;2526:20:77;:132::i;:::-;2512:146;;2513:4;2512:146;;-1:-1:-1;;2512:146:77;;;-1:-1:-1;;;;;2512:146:77;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2512:146:77;;;;;;;-1:-1:-1;;;2512:146:77;;;;;;-1:-1:-1;;;;2512:146:77;-1:-1:-1;;;2512:146:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2668:17;;2710:7;;2668:51;;-1:-1:-1;;;2668:51:77;;2710:7;;;2668:51;;;10325:74:98;2512:146:77;;-1:-1:-1;2668:17:77;;;:28;;10298:18:98;2668:51:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2760:7:77;;2743:25;;-1:-1:-1;;;;;2760:7:77;;;;-1:-1:-1;2743:25:77;;-1:-1:-1;2743:25:77;:::i;:::-;-1:-1:-1;;;;;10343:55:98;;;10325:74;;10313:2;10298:18;2743:25:77;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2730:10:77;:38;;-1:-1:-1;;2730:38:77;-1:-1:-1;;;;;2730:38:77;;;;;;;;;;-1:-1:-1;;2083:692:77:o;2781:326::-;2848:11;;:27;;-1:-1:-1;;;2848:27:77;;2867:7;2848:27;;;5952:40:98;-1:-1:-1;;;;;2848:11:77;;;;:18;;5925::98;;2848:27:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2942:11:77;;2885:19;;-1:-1:-1;2907:78:77;;-1:-1:-1;;;;;;2942:11:77;193:8:44;2907:19:77;:78::i;:::-;2995:43;;-1:-1:-1;;;2995:43:77;;-1:-1:-1;;;2995:43:77;;;11016:52:98;2885:100:77;;-1:-1:-1;2995:15:77;;;;10989:18:98;;2995:43:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3048:7:77;;;820:12:95;;;3048:7:77;820:12:95;;;;;;;;;-1:-1:-1;;;3048:52:77;;-1:-1:-1;;;;;3048:7:77;;-1:-1:-1;3048:18:77;;-1:-1:-1;3048:52:77;;3067:4;;-1:-1:-1;;;130:29:94;3048:52:77;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2838:269;2781:326::o;2161:134:9:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:9;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;5238:281:77:-;5354:7;;5300:28;;5333:71;;-1:-1:-1;;;;;5354:7:77;5300:28;5383:4;-1:-1:-1;;;5333:20:77;:71::i;:::-;-1:-1:-1;5414:45:77;;-1:-1:-1;;;5414:45:77;;-1:-1:-1;;;5414:45:77;;;11016:52:98;5299:105:77;;-1:-1:-1;5414:15:77;;;;10989:18:98;;5414:45:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5469:7:77;;:43;;-1:-1:-1;;;5469:43:77;;-1:-1:-1;;;;;5469:7:77;;;;-1:-1:-1;5469:28:77;;-1:-1:-1;5469:43:77;;5498:13;;5469:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5289:230;5238:281::o;2930:133:9:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:9;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:9;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;3537:528:77:-;3579:11;;:23;;-1:-1:-1;;;3579:23:77;;3598:3;3579:23;;;5952:40:98;-1:-1:-1;;;;;3579:11:77;;;;:18;;5925::98;;3579:23:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3612:7:77;;:33;;-1:-1:-1;;;3612:33:77;;-1:-1:-1;;;;;3612:7:77;;;;-1:-1:-1;3612:28:77;;-1:-1:-1;3612:33:77;;3641:3;;3612:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3701:7:77;;3655:55;;-1:-1:-1;;;3655:55:77;;3669:4;3655:55;;;6968:41:98;;;7025:18;;;7018:50;;;7084:18;;;7077:50;;;7143:18;;;7136:50;-1:-1:-1;;;;;3701:7:77;;;7202:19:98;;;7195:84;3655:13:77;;-1:-1:-1;3655:13:77;;-1:-1:-1;6940:19:98;;3655:55:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3750:10:77;;3730:8;;;;;;;;:3;:8;-1:-1:-1;;;;;3730:8:77;;;;;;;;;;;;;;;-1:-1:-1;;;3730:8:77;;;;;;;;;;-1:-1:-1;;;3730:8:77;;;;;;;;;;;;;;;;;3750:10;;;-1:-1:-1;3730:10:77;;-1:-1:-1;3730:8:77;:10::i;:::-;3725:74;3763:1;;3769:18;-1:-1:-1;;;3786:1:77;3769:18;:::i;:::-;3725:74;;;7985:2:98;7974:22;;;7956:41;;8033:22;;;;8028:2;8013:18;;8006:50;-1:-1:-1;;;;;8092:55:98;8072:18;;;8065:83;-1:-1:-1;8179:2:98;8164:18;;8157:75;;;8263:3;8248:19;;8241:50;3795:3:77;8322::98;8307:19;;8300:50;3725:74:77;;;;;;7943:3:98;3725:74:77;;;3809:34;;;;;;;;;;;;;;;;;;:9;:34::i;:::-;3853:10;;3899:53;;;;;;;;3853:10;3899:53;;3853:10;3899:53;;;;;;-1:-1:-1;;;;;3853:10:77;;;;:15;;3882:3;;3899:53;;;;;3933:18;;-1:-1:-1;;;130:29:94;3933:18:77;:::i;:::-;-1:-1:-1;;;;;3899:53:77;;;3966:39;;;;;;;;-1:-1:-1;3966:39:77;;;;;;;;;;820:12:95;;;;;;;;;;;-1:-1:-1;;;;;;3853:186:77;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4049:9;:7;:9::i;:::-;3537:528::o;2301:140:9:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1658:242:95;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:12:95;;;;;;;;;;;-1:-1:-1;;1836:57:95;;1847:7;;1856:5;;1863:3;;1868:12;;1836:10;:57::i;:::-;1824:69;;;;-1:-1:-1;1658:242:95;-1:-1:-1;;;;;1658:242:95:o;2778:146:9:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3113:187:77;3170:11;;:27;;-1:-1:-1;;;3170:27:77;;3189:7;3170:27;;;5952:40:98;-1:-1:-1;;;;;3170:11:77;;;;:18;;5925::98;;3170:27:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3207:43:77;;-1:-1:-1;;;3207:43:77;;-1:-1:-1;;;3207:43:77;;;11016:52:98;3207:15:77;;-1:-1:-1;3207:15:77;;-1:-1:-1;10989:18:98;;3207:43:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3260:7:77;;:33;;-1:-1:-1;;;3260:33:77;;-1:-1:-1;;;;;3260:7:77;;;;-1:-1:-1;3260:28:77;;-1:-1:-1;3260:33:77;;3289:3;;3260:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3113:187::o;1819:584:2:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:2;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;13524:74:98;;;2221:17:2;13614:18:98;;;13607:34;2196:43:2;;;;;;;;;13497:18:98;;;2196:43:2;;;-1:-1:-1;;1671:64:2;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:2;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:2:o;5525:563:77:-;5586:17;;:29;;-1:-1:-1;;;5586:29:77;;5611:3;5586:29;;;5952:40:98;-1:-1:-1;;;;;5586:17:77;;;;:24;;5925:18:98;;5586:29:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5625:7:77;;:34;;-1:-1:-1;;;5625:34:77;;-1:-1:-1;;;;;5625:7:77;;;;-1:-1:-1;5625:28:77;;-1:-1:-1;5625:34:77;;5654:4;;5625:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5715:7:77;;5669:55;;-1:-1:-1;;;5669:55:77;;5683:4;5669:55;;;6968:41:98;;;7025:18;;;7018:50;;;7084:18;;;7077:50;;;7143:18;;;7136:50;-1:-1:-1;;;;;5715:7:77;;;7202:19:98;;;7195:84;5669:13:77;;-1:-1:-1;5669:13:77;;-1:-1:-1;6940:19:98;;5669:55:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5765:10:77;;5744:9;;;;;;;;:4;:9;-1:-1:-1;;;;;5744:9:77;;;;;;;;;;;;;;;-1:-1:-1;;;5744:9:77;;;;;;;;;;-1:-1:-1;;;5744:9:77;;;;;;;;;;;;;;;;;5765:10;;;-1:-1:-1;5744:11:77;;-1:-1:-1;5744:9:77;:11::i;:::-;5739:75;5778:1;;5784:18;-1:-1:-1;;;5801:1:77;5784:18;:::i;:::-;5739:75;;;7985:2:98;7974:22;;;7956:41;;8033:22;;;;8028:2;8013:18;;8006:50;-1:-1:-1;;;;;8092:55:98;8072:18;;;8065:83;-1:-1:-1;8179:2:98;8164:18;;8157:75;;;8263:3;8248:19;;8241:50;5810:3:77;8322::98;8307:19;;8300:50;5739:75:77;;;;;;7943:3:98;5739:75:77;;;5824:41;;;;;;;;;;;;;;;;;;:9;:41::i;:::-;5875:10;;5922:53;;;;;;;;5875:10;5922:53;;5875:10;5922:53;;;;;;-1:-1:-1;;;;;5875:10:77;;;;:15;;5904:4;;5922:53;;;;;5956:18;;-1:-1:-1;;;130:29:94;5956:18:77;:::i;4647:585::-;4707:11;;:23;;-1:-1:-1;;;4707:23:77;;4726:3;4707:23;;;5952:40:98;-1:-1:-1;;;;;4707:11:77;;;;:18;;5925::98;;4707:23:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4740:7:77;;:33;;-1:-1:-1;;;4740:33:77;;-1:-1:-1;;;;;4740:7:77;;;;-1:-1:-1;4740:28:77;;-1:-1:-1;4740:33:77;;4769:3;;4740:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4829:7:77;;4783:55;;-1:-1:-1;;;4783:55:77;;4797:4;4783:55;;;6968:41:98;;;7025:18;;;7018:50;;;7084:18;;;7077:50;;;7143:18;;;7136:50;-1:-1:-1;;;;;4829:7:77;;;7202:19:98;;;7195:84;4783:13:77;;-1:-1:-1;4783:13:77;;-1:-1:-1;6940:19:98;;4783:55:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4878:10:77;;4858:8;;;;;;;;:3;:8;-1:-1:-1;;;;;4858:8:77;;;;;;;;;;;;;;;-1:-1:-1;;;4858:8:77;;;;;;;;;;-1:-1:-1;;;4858:8:77;;;;;;;;;;;;;;;;;4878:10;;;-1:-1:-1;4858:10:77;;-1:-1:-1;4858:8:77;:10::i;:::-;4853:74;4891:1;;4897:18;-1:-1:-1;;;4914:1:77;4897:18;:::i;:::-;4853:74;;;7985:2:98;7974:22;;;7956:41;;8033:22;;;;8028:2;8013:18;;8006:50;-1:-1:-1;;;;;8092:55:98;8072:18;;;8065:83;-1:-1:-1;8179:2:98;8164:18;;8157:75;;;8263:3;8248:19;;8241:50;4923:3:77;8322::98;8307:19;;8300:50;4853:74:77;;;;;;7943:3:98;4853:74:77;;;4937:57;;;;;;;;;;;;;;;;;;:9;:57::i;:::-;5024:28;;;5004:17;5024:28;;;8527:41:98;;;8584:18;;;8577:49;;;8500:18;;5024:28:77;8361:271:98;2013:142:9;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:9;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;202:136:74:-;263:6;321:7;310:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;300:30;;;;;;281:50;;202:136;;;:::o;2927:227:0:-;3088:1;3076:9;:13;3099:10;:17;3112:4;3099:10;:17;:::i;:::-;;3138:9;3126;:21;-1:-1:-1;2927:227:0:o;3286:441::-;3324:18;3345:9;3324:30;;3423:15;781:3;3453:10;3441:9;;:22;;;;:::i;:::-;:40;;;;:::i;:::-;3572:1;3560:9;:13;3588:5;;3423:58;;-1:-1:-1;3588:5:0;;;;;3584:137;;;3609:35;3624:10;3609:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3636:7;3609:14;:35::i;3584:137::-;3675:35;3690:10;3675:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3702:7;3675:14;:35::i;2807:254:95:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:12:95;;;;;;;;;;;-1:-1:-1;;;3001:53:95;;3017:5;;3024:3;;3029:12;;3001:15;:53::i;:::-;2980:74;;;;-1:-1:-1;2980:74:95;;-1:-1:-1;2807:254:95;-1:-1:-1;;;;2807:254:95:o;2446:355::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2567:25:95;2580:1;-1:-1:-1;;;2567:12:95;:25::i;:::-;2539:53;;2603:18;2623;2645:37;2661:6;2668:1;2661:9;;;;;;;;:::i;:::-;;;;;;;2672:6;2679:1;2672:9;;;;;;;;:::i;:::-;;;;;;;2645:15;:37::i;:::-;2602:80;;;;2698:96;;;;;;;;2706:9;-1:-1:-1;;;;;2698:96:95;;;;;2717:9;-1:-1:-1;;;;;2698:96:95;;;;;2728:3;2698:96;;;;;;2733:18;:3;:16;;193:8:44;433:23;:28;;;352:116;2733:18:95;:53;;2772:9;2778:3;2772;:9;:::i;:::-;:13;;2784:1;2772:13;:::i;:::-;2733:53;;;2760:2;2733:53;2698:96;;;;;;2788:5;-1:-1:-1;;;;;2698:96:95;;;;2692:102;;2529:272;;;2446:355;;;;:::o;1906:534::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2124:25:95;2137:1;-1:-1:-1;;;2124:12:95;:25::i;:::-;2096:53;;2160:18;2180;2202:37;2218:6;2225:1;2218:9;;;;;;;;:::i;2202:37::-;2159:80;;;;2255:96;;;;;;;;2263:9;-1:-1:-1;;;;;2255:96:95;;;;;2274:9;-1:-1:-1;;;;;2255:96:95;;;;;2285:3;2255:96;;;;;;2290:18;:3;:16;;193:8:44;433:23;:28;;;352:116;2290:18:95;:53;;2329:9;2335:3;2329;:9;:::i;:::-;:13;;2341:1;2329:13;:::i;:::-;2290:53;;;2317:2;2290:53;2255:96;;;;;;2345:5;-1:-1:-1;;;;;2255:96:95;;;;2249:102;;2366:10;:3;:8;:10::i;:::-;2386:47;;-1:-1:-1;;;2386:47:95;;2361:15;;-1:-1:-1;;;;;;2386:18:95;;;;;:47;;2405:3;;2410:12;;2424:8;;2386:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2086:354;;;1906:534;;;;;;;;:::o;3810:232:0:-;3895:18;3916:19;3930:4;3916:13;:19::i;:::-;3895:40;;3963:7;3949:10;:21;3945:91;;3993:32;;-1:-1:-1;;;3993:32:0;;;;;17792:25:98;;;17833:18;;;17826:34;;;17765:18;;3993:32:0;;;;;;;;3945:91;3885:157;3810:232;;:::o;4366:140::-;4445:12;;4458:18;4471:4;4458:12;:18::i;:::-;4478:20;;-1:-1:-1;;;4478:20:0;;;;;18017:25:98;;;4478:11:0;;;;17990:18:98;;4478:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4478:20:0;;;;;;;;;;;;:::i;:::-;4445:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4366:140;;:::o;3067:345:95:-;-1:-1:-1;;;;;;;;3197:19:95;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;3238:9:95;3273:20;:18;:20::i;:::-;3263:30;;3315:55;3326:7;3335:5;3342:3;3347:12;3361:8;3315:10;:55::i;:::-;3303:67;;-1:-1:-1;3303:67:95;-1:-1:-1;3067:345:95;;;;;;;;:::o;1334:318::-;1408:25;1470:5;1454:22;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1454:22:95;;1445:31;;1491:7;1486:160;1508:5;1504:9;;:1;:9;;;1486:160;;;1576:2;1546:33;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1534:6;1541:1;1534:9;;;;;;;;;;:::i;:::-;;;;;;:45;-1:-1:-1;;;;;1534:45:95;;;-1:-1:-1;;;;;1534:45:95;;;;;1593:6;1600:1;1593:9;;;;;;;;;;:::i;:::-;;;;;;;;;;;:42;;-1:-1:-1;;;1593:42:95;;1616:4;1593:42;;;13524:74:98;13614:18;;;13607:34;;;-1:-1:-1;;;;;1593:14:95;;;;;;13497:18:98;;1593:42:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1515:3:95;;;;;-1:-1:-1;1486:160:95;;-1:-1:-1;1486:160:95;;;1334:318;;;;:::o;212:436:96:-;309:19;330;395:6;-1:-1:-1;;;;;369:33:96;377:6;-1:-1:-1;;;;;369:33:96;;365:277;;;-1:-1:-1;468:6:96;;-1:-1:-1;500:6:96;365:277;;;-1:-1:-1;590:6:96;;-1:-1:-1;622:6:96;365:277;212:436;;;;;:::o;4107:200:0:-;4172:11;;4220;;4232:18;4245:4;4232:12;:18::i;:::-;4220:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4220:31:0;;;;;;;;;;;;:::i;:::-;4195:56;;4267:33;4291:8;4267:23;:33::i;:::-;4261:39;4107:200;-1:-1:-1;;;4107:200:0:o;4815:152::-;4879:13;4935:8;;;;;;;;;;;;;;;;;4945:4;4918:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4904:56;;4815:152;;;:::o;3418:119:95:-;3466:19;3523:6;3507:23;;;;;:::i;:::-;18017:25:98;;;18005:2;17990:18;3507:23:95;;;;;;;;;;;;;;;;;;;;;;;3497:33;;3418:119;:::o;184:767:1:-;246:14;295:1;246:14;;338:607;362:1;:8;358:1;:12;338:607;;;449:2;440:1;442;440:4;;;;;;;;:::i;:::-;;;;;;;434:17;;;;:38;;;470:2;461:1;463;461:4;;;;;;;;:::i;:::-;;;;;;;455:17;;434:38;430:505;;;569:6;557:18;;631:2;623:1;625;623:4;;;;;;;;:::i;:::-;;;;;617:16;;;623:4;;617:16;:::i;:::-;602:32;;:11;:6;611:2;602:11;:::i;:::-;:32;;;;:::i;:::-;593:41;;668:6;656:9;:18;652:201;;;832:1;812:22;;-1:-1:-1;;;812:22:1;;;;;;;;:::i;652:201::-;430:505;;;918:1;898:22;;-1:-1:-1;;;898:22:1;;;;;;;;:::i;430:505::-;372:3;;338:607;;;;262:689;;184:767;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:681:98:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;-1:-1:-1;;;;;526:62:98;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:98;;14:681;-1:-1:-1;;;;;;14:681:98:o;700:250::-;785:1;795:113;809:6;806:1;803:13;795:113;;;885:11;;;879:18;866:11;;;859:39;831:2;824:10;795:113;;;-1:-1:-1;;942:1:98;924:16;;917:27;700:250::o;955:271::-;997:3;1035:5;1029:12;1062:6;1057:3;1050:19;1078:76;1147:6;1140:4;1135:3;1131:14;1124:4;1117:5;1113:16;1078:76;:::i;:::-;1208:2;1187:15;-1:-1:-1;;1183:29:98;1174:39;;;;1215:4;1170:50;;955:271;-1:-1:-1;;955:271:98:o;1231:220::-;1380:2;1369:9;1362:21;1343:4;1400:45;1441:2;1430:9;1426:18;1418:6;1400:45;:::i;1456:1590::-;1658:4;1687:2;1727;1716:9;1712:18;1757:2;1746:9;1739:21;1780:6;1815;1809:13;1846:6;1838;1831:22;1872:2;1862:12;;1905:2;1894:9;1890:18;1883:25;;1967:2;1957:6;1954:1;1950:14;1939:9;1935:30;1931:39;2005:2;1997:6;1993:15;2026:1;2047;2057:960;2073:6;2068:3;2065:15;2057:960;;;2142:22;;;-1:-1:-1;;2138:36:98;2126:49;;2198:13;;2285:9;;-1:-1:-1;;;;;2281:58:98;2266:74;;2379:11;;2373:18;2411:15;;;2404:27;;;2492:19;;2238:15;;;2524:24;;;2614:21;;;;2659:1;;2582:2;2570:15;;;2673:236;2689:8;2684:3;2681:17;2673:236;;;2770:15;;-1:-1:-1;;;;;;2766:42:98;2752:57;;2878:17;;;;2717:1;2708:11;;;;;2835:14;;;;2673:236;;;-1:-1:-1;2995:12:98;;;;2932:5;-1:-1:-1;;;2960:15:98;;;;2099:1;2090:11;2057:960;;;-1:-1:-1;3034:6:98;;1456:1590;-1:-1:-1;;;;;;;;;1456:1590:98:o;3051:803::-;3213:4;3242:2;3282;3271:9;3267:18;3312:2;3301:9;3294:21;3335:6;3370;3364:13;3401:6;3393;3386:22;3439:2;3428:9;3424:18;3417:25;;3501:2;3491:6;3488:1;3484:14;3473:9;3469:30;3465:39;3451:53;;3539:2;3531:6;3527:15;3560:1;3570:255;3584:6;3581:1;3578:13;3570:255;;;3677:2;3673:7;3661:9;3653:6;3649:22;3645:36;3640:3;3633:49;3705:40;3738:6;3729;3723:13;3705:40;:::i;:::-;3695:50;-1:-1:-1;3803:12:98;;;;3768:15;;;;3606:1;3599:9;3570:255;;;-1:-1:-1;3842:6:98;;3051:803;-1:-1:-1;;;;;;;3051:803:98:o;3859:167::-;-1:-1:-1;;;;;3951:5:98;3947:54;3940:5;3937:65;3927:93;;4016:1;4013;4006:12;4031:776;4153:6;4161;4169;4177;4230:3;4218:9;4209:7;4205:23;4201:33;4198:53;;;4247:1;4244;4237:12;4198:53;4286:9;4273:23;4305:44;4343:5;4305:44;:::i;:::-;4368:5;-1:-1:-1;4425:2:98;4410:18;;4397:32;4438:46;4397:32;4438:46;:::i;:::-;4503:7;-1:-1:-1;4562:2:98;4547:18;;4534:32;4610:8;4597:22;;4585:35;;4575:63;;4634:1;4631;4624:12;4575:63;4657:7;-1:-1:-1;4716:2:98;4701:18;;4688:32;4729:46;4688:32;4729:46;:::i;:::-;4031:776;;;;-1:-1:-1;4031:776:98;;-1:-1:-1;;4031:776:98:o;5251:349::-;5493:3;5478:19;;5506:44;5482:9;5532:6;-1:-1:-1;;;;;4964:2:98;4956:5;4950:12;4946:21;4941:3;4934:34;5029:2;5021:4;5014:5;5010:16;5004:23;5000:32;4993:4;4988:3;4984:14;4977:56;5094:8;5086:4;5079:5;5075:16;5069:23;5065:38;5058:4;5053:3;5049:14;5042:62;5167:4;5160:5;5156:16;5150:23;5147:1;5136:38;5129:4;5124:3;5120:14;5113:62;5236:2;5228:4;5221:5;5217:16;5211:23;5207:32;5200:4;5195:3;5191:14;5184:56;;4812:434;;;5506:44;5587:6;5581:3;5570:9;5566:19;5559:35;5251:349;;;;;:::o;6474:254::-;6657:3;6642:19;;6670:52;6646:9;6704:6;6149:12;;-1:-1:-1;;;;;6145:21:98;;;6133:34;;6210:4;6199:16;;6193:23;6248:18;;;6241:4;6232:14;;6225:42;6307:3;6303:19;;;6324:8;6299:34;6292:4;6283:14;;6276:58;6384:3;6380:19;6377:1;6366:34;;;6359:4;6350:14;;6343:58;6443:13;;;6437:20;6433:29;6426:4;6417:14;;;6410:53;6003:466;6670:52;6474:254;;;;:::o;7290:127::-;7351:10;7346:3;7342:20;7339:1;7332:31;7382:4;7379:1;7372:15;7406:4;7403:1;7396:15;7422:205;-1:-1:-1;;;;;7552:10:98;;;7564;;;7548:27;;7587:11;;;7584:37;;;7601:18;;:::i;8637:949::-;6149:12;;-1:-1:-1;;;;;6145:21:98;;;6133:34;;6210:4;6199:16;;6193:23;6248:18;;;6241:4;6232:14;;6225:42;6324:8;6307:3;6303:19;;;6299:34;6292:4;6283:14;;6276:58;6384:3;6380:19;6377:1;6366:34;;;6359:4;6350:14;;6343:58;6443:13;;6437:20;6433:29;6426:4;6417:14;;6410:53;9000:4;9029:3;9150:6;9144:13;9137:21;9130:29;9124:3;9113:9;9109:19;9102:58;9215:4;9207:6;9203:17;9197:24;9191:3;9180:9;9176:19;9169:53;-1:-1:-1;;;;;9281:4:98;9273:6;9269:17;9263:24;9259:73;9253:3;9242:9;9238:19;9231:102;9390:6;9384:13;9377:21;9370:29;9364:3;9353:9;9349:19;9342:58;9469:4;9461:6;9457:17;9451:24;9444:32;9437:40;9431:3;9420:9;9416:19;9409:69;9515:2;9509:3;9498:9;9494:19;9487:31;9535:45;9576:2;9565:9;9561:18;9553:6;9535:45;:::i;:::-;9527:53;8637:949;-1:-1:-1;;;;;;;8637:949:98:o;9591:218::-;9695:6;9748:2;9736:9;9727:7;9723:23;9719:32;9716:52;;;9764:1;9761;9754:12;9716:52;-1:-1:-1;9787:16:98;;9591:218;-1:-1:-1;9591:218:98:o;9814:338::-;-1:-1:-1;;;;;9993:6:98;9989:55;9978:9;9971:74;10081:2;10076;10065:9;10061:18;10054:30;9952:4;10101:45;10142:2;10131:9;10127:18;10119:6;10101:45;:::i;:::-;10093:53;9814:338;-1:-1:-1;;;;9814:338:98:o;11079:127::-;11140:10;11135:3;11131:20;11128:1;11121:31;11171:4;11168:1;11161:15;11195:4;11192:1;11185:15;11211:484;11448:44;11482:9;11474:6;-1:-1:-1;;;;;4964:2:98;4956:5;4950:12;4946:21;4941:3;4934:34;5029:2;5021:4;5014:5;5010:16;5004:23;5000:32;4993:4;4988:3;4984:14;4977:56;5094:8;5086:4;5079:5;5075:16;5069:23;5065:38;5058:4;5053:3;5049:14;5042:62;5167:4;5160:5;5156:16;5150:23;5147:1;5136:38;5129:4;5124:3;5120:14;5113:62;5236:2;5228:4;5221:5;5217:16;5211:23;5207:32;5200:4;5195:3;5191:14;5184:56;;4812:434;;;11448:44;-1:-1:-1;;;;;11533:6:98;11529:55;11523:3;11512:9;11508:19;11501:84;11622:3;11616;11605:9;11601:19;11594:32;11429:4;11643:46;11684:3;11673:9;11669:19;11661:6;11643:46;:::i;:::-;11635:54;11211:484;-1:-1:-1;;;;;11211:484:98:o;11700:277::-;11768:6;11821:2;11809:9;11800:7;11796:23;11792:32;11789:52;;;11837:1;11834;11827:12;11789:52;11869:9;11863:16;11922:5;11919:1;11908:20;11901:5;11898:31;11888:59;;11943:1;11940;11933:12;11982:249;12168:3;12153:19;;12181:44;12157:9;12207:6;-1:-1:-1;;;;;4964:2:98;4956:5;4950:12;4946:21;4941:3;4934:34;5029:2;5021:4;5014:5;5010:16;5004:23;5000:32;4993:4;4988:3;4984:14;4977:56;5094:8;5086:4;5079:5;5075:16;5069:23;5065:38;5058:4;5053:3;5049:14;5042:62;5167:4;5160:5;5156:16;5150:23;5147:1;5136:38;5129:4;5124:3;5120:14;5113:62;5236:2;5228:4;5221:5;5217:16;5211:23;5207:32;5200:4;5195:3;5191:14;5184:56;;4812:434;;;12965:380;13044:1;13040:12;;;;13087;;;13108:61;;13162:4;13154:6;13150:17;13140:27;;13108:61;13215:2;13207:6;13204:14;13184:18;13181:38;13178:161;;13261:10;13256:3;13252:20;13249:1;13242:31;13296:4;13293:1;13286:15;13324:4;13321:1;13314:15;13178:161;;12965:380;;;:::o;13652:384::-;-1:-1:-1;;;;;;13837:33:98;;13825:46;;13894:13;;13807:3;;13916:74;13894:13;13979:1;13970:11;;13963:4;13951:17;;13916:74;:::i;:::-;14010:16;;;;14028:1;14006:24;;13652:384;-1:-1:-1;;;13652:384:98:o;14041:287::-;14170:3;14208:6;14202:13;14224:66;14283:6;14278:3;14271:4;14263:6;14259:17;14224:66;:::i;:::-;14306:16;;;;;14041:287;-1:-1:-1;;14041:287:98:o;14333:277::-;14400:6;14453:2;14441:9;14432:7;14428:23;14424:32;14421:52;;;14469:1;14466;14459:12;14421:52;14501:9;14495:16;14554:5;14547:13;14540:21;14533:5;14530:32;14520:60;;14576:1;14573;14566:12;14741:543;14843:2;14838:3;14835:11;14832:446;;;14879:1;14903:5;14900:1;14893:16;14947:4;14944:1;14934:18;15017:2;15005:10;15001:19;14998:1;14994:27;14988:4;14984:38;15053:4;15041:10;15038:20;15035:47;;;-1:-1:-1;15076:4:98;15035:47;15131:2;15126:3;15122:12;15119:1;15115:20;15109:4;15105:31;15095:41;;15186:82;15204:2;15197:5;15194:13;15186:82;;;15249:17;;;15230:1;15219:13;15186:82;;15460:1345;15586:3;15580:10;15613:18;15605:6;15602:30;15599:56;;;15635:18;;:::i;:::-;15664:97;15754:6;15714:38;15746:4;15740:11;15714:38;:::i;:::-;15708:4;15664:97;:::i;:::-;15816:4;;15873:2;15862:14;;15890:1;15885:663;;;;16592:1;16609:6;16606:89;;;-1:-1:-1;16661:19:98;;;16655:26;16606:89;-1:-1:-1;;15417:1:98;15413:11;;;15409:24;15405:29;15395:40;15441:1;15437:11;;;15392:57;16708:81;;15855:944;;15885:663;14688:1;14681:14;;;14725:4;14712:18;;-1:-1:-1;;15921:20:98;;;16039:236;16053:7;16050:1;16047:14;16039:236;;;16142:19;;;16136:26;16121:42;;16234:27;;;;16202:1;16190:14;;;;16069:19;;16039:236;;;16043:3;16303:6;16294:7;16291:19;16288:201;;;16364:19;;;16358:26;-1:-1:-1;;16447:1:98;16443:14;;;16459:3;16439:24;16435:37;16431:42;16416:58;16401:74;;16288:201;-1:-1:-1;;;;;16535:1:98;16519:14;;;16515:22;16502:36;;-1:-1:-1;15460:1345:98:o;16810:128::-;16877:9;;;16898:11;;;16895:37;;;16912:18;;:::i;16943:127::-;17004:10;16999:3;16995:20;16992:1;16985:31;17035:4;17032:1;17025:15;17059:4;17056:1;17049:15;17075:286;17114:1;17140:8;17175:2;17172:1;17168:10;17197:3;17187:134;;17243:10;17238:3;17234:20;17231:1;17224:31;17278:4;17275:1;17268:15;17306:4;17303:1;17296:15;17187:134;17339:10;;17335:20;;;;;17075:286;-1:-1:-1;;17075:286:98:o;17366:247::-;17437:8;17477:10;;;17489;;;17473:27;17520:20;;;;17437:8;17559:24;;;17549:58;;17587:18;;:::i;:::-;17549:58;;17366:247;;;;:::o;18053:897::-;18133:6;18186:2;18174:9;18165:7;18161:23;18157:32;18154:52;;;18202:1;18199;18192:12;18154:52;18235:9;18229:16;18264:18;18305:2;18297:6;18294:14;18291:34;;;18321:1;18318;18311:12;18291:34;18359:6;18348:9;18344:22;18334:32;;18404:7;18397:4;18393:2;18389:13;18385:27;18375:55;;18426:1;18423;18416:12;18375:55;18455:2;18449:9;18477:2;18473;18470:10;18467:36;;;18483:18;;:::i;:::-;18558:2;18552:9;18526:2;18612:13;;-1:-1:-1;;18608:22:98;;;18632:2;18604:31;18600:40;18588:53;;;18656:18;;;18676:22;;;18653:46;18650:72;;;18702:18;;:::i;:::-;18742:10;18738:2;18731:22;18777:2;18769:6;18762:18;18817:7;18812:2;18807;18803;18799:11;18795:20;18792:33;18789:53;;;18838:1;18835;18828:12;18789:53;18851:68;18916:2;18911;18903:6;18899:15;18894:2;18890;18886:11;18851:68;:::i;18955:383::-;19152:2;19141:9;19134:21;19115:4;19178:45;19219:2;19208:9;19204:18;19196:6;19178:45;:::i;:::-;19271:9;19263:6;19259:22;19254:2;19243:9;19239:18;19232:50;19299:33;19325:6;19317;19299:33;:::i;19500:586::-;19838:2;19827:9;19820:21;19801:4;19864:49;19909:2;19898:9;19894:18;19420:1;19408:14;;-1:-1:-1;;;19447:4:98;19438:14;;19431:30;19486:2;19477:12;;19343:152;19864:49;19961:9;19953:6;19949:22;19944:2;19933:9;19929:18;19922:50;19989:37;20019:6;19420:1;19408:14;;-1:-1:-1;;;19447:4:98;19438:14;;19431:30;19486:2;19477:12;;19343:152;19989:37;19981:45;;;20074:4;20066:6;20062:17;20057:2;20046:9;20042:18;20035:45;19500:586;;;;:::o;20393:663::-;20673:3;20711:6;20705:13;20727:66;20786:6;20781:3;20774:4;20766:6;20762:17;20727:66;:::i;:::-;20856:13;;20815:16;;;;20878:70;20856:13;20815:16;20925:4;20913:17;;20878:70;:::i;:::-;21013:7;20970:20;;20999:22;;;21048:1;21037:13;;20393:663;-1:-1:-1;;;;20393:663:98:o;21256:151::-;21346:4;21339:12;;;21325;;;21321:31;;21364:14;;21361:40;;;21381:18;;:::i;21412:168::-;21485:9;;;21516;;21533:15;;;21527:22;;21513:37;21503:71;;21554:18;;:::i;21585:125::-;21650:9;;;21671:10;;;21668:36;;;21684:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "CHECK_ENV_VAR()": "38092c4c",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "SNAP_DIR()": "9b27aa2e",
    "createPool(address,address,uint24,uint160)": "8e909e51",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testCacheDynamicFeeAndSwap()": "00379bdf",
    "testDynamicFeeAndBeforeSwapHook()": "d36bfbcf",
    "testDynamicFeesCacheNoOtherHooks()": "bf64ad28",
    "testPoolInitializeFailsWithTooLargeFee()": "1c7d027c",
    "testSwapFailsWithTooLargeFee()": "b5e5d597",
    "testSwapWorks()": "6b593cdd",
    "testUpdateRevertsOnStaticFeePool()": "37e0a9ad"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oldGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newGas\",\"type\":\"uint256\"}],\"name\":\"GasMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"InvalidStringNumber\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount0\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount1\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CHECK_ENV_VAR\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SNAP_DIR\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract PoolManager\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createPool\",\"outputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCacheDynamicFeeAndSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDynamicFeeAndBeforeSwapHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDynamicFeesCacheNoOtherHooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testPoolInitializeFailsWithTooLargeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSwapFailsWithTooLargeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSwapWorks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUpdateRevertsOnStaticFeePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CHECK_ENV_VAR()\":{\"notice\":\"if this environment variable is true, we revert on gas mismatch\"},\"SNAP_DIR()\":{\"notice\":\"save gas snapshots in this dir\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/DynamicFees.t.sol\":\"TestDynamicFees\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-gas-snapshot/src/GasSnapshot.sol\":{\"keccak256\":\"0xa0a96e1e5c339871cfc74bc4b3c189443a939234b00390e5aece97f5f3af4ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f86da5c2743381c8ee45aa2953378d7a13355c539e7e12ad4aa0e3a3270a1cf\",\"dweb:/ipfs/QmdsuT1YfJdnAetQxXmd5s6kGjH4Jv1K3LHSQjXfUNTLKW\"]},\"lib/forge-gas-snapshot/src/utils/UintString.sol\":{\"keccak256\":\"0x848ccf3820bc9dc5c001eb653c65d361d09c134f6b493751a2b6dca34e0f6c09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b7ca1cd59278688f7ccdd47ae9790f3a017da2db06353354c1cbf2450c8524b\",\"dweb:/ipfs/QmYFvZjjWpJ2yZoAAznKh3hEUBWLtLQcU92VGa2N6LUXXH\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0xd566affaba92598bcd059dcb3714a968aeedb365ec0d666815e8b38519e0f433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fb5f7a97d2a7a06e10c198b60f05e64176eb4ef306b72800c168e7a7ec51693\",\"dweb:/ipfs/Qmcep4r7YEU3BwFJNTTxZsdCVzBYdtcVp8oDtmwLoZGRzP\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/solmate/src/test/utils/mocks/MockERC20.sol\":{\"keccak256\":\"0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e\",\"dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"src/Fees.sol\":{\"keccak256\":\"0x6c998aa477d8bbcdf23dd0e2450a4d3bd02241c32d511bc1ff22f4201b7fbef1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8b73b18351d859d512876c1abbebe2f31bd033406838012c7eceec138cc52b66\",\"dweb:/ipfs/QmPCCQ1WfoWrpmfvL13XRThkb6CyGeGqZ5y3ycVbQ3vmac\"]},\"src/NoDelegateCall.sol\":{\"keccak256\":\"0xf17b8cb46d679529ffd7b8f33e35190e9df7dc6b41da11dcf7b1ba134e8d0c40\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://aba476e6983e633bfce71cf4ae56b751c07910ead14bbace00f464dd771781f7\",\"dweb:/ipfs/QmbHT8SgG6Pjyz2BoYpme9M4mS4yqv7XirHDBaXQvyvVea\"]},\"src/Owned.sol\":{\"keccak256\":\"0x0109d375f0df894818365069e711e88bb8b6b315a867cac951f22bafeedacd64\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://70a4c8c612f849c2bf337ab69887609259f500c96d791496176533f5956ecaff\",\"dweb:/ipfs/QmUe6BLMxxdbr39r7YFZAeXyiCPRNnXjntekgHCzfHnYKd\"]},\"src/PoolManager.sol\":{\"keccak256\":\"0xc27b2635e6b3d0ade0ba05cd156fff1b476b0063f7c3c6c7c8b8dddbad0015c8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4c55ffd94cb2e26b38477363d314a922f1fb386975291c2744676cb82869bd20\",\"dweb:/ipfs/QmetAWahHKwRYi86heZAv7mMVubqGGNCjTYVs2zgZEEsWR\"]},\"src/interfaces/IDynamicFeeManager.sol\":{\"keccak256\":\"0x043d635da3ce5f249f4acd74cb2badbcb5c2b2e5136e4cd8393d6aa5d59c46e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442efca7ad055d7249afab1d9e31f7e2d8b0a24b62bb0e55ab94348c152f5965\",\"dweb:/ipfs/QmaXWB7s5yWRWA8tgcrTHR96Kvmj3PfY7bUgQcqoTNoejt\"]},\"src/interfaces/IFees.sol\":{\"keccak256\":\"0x7a2d2b74602f23a8944b45c745e8a512f7d8f00f8ba22742636abaf929379697\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab38548046bb65d089fd56b335a3b98d2b4f03e9af4763c2b7da2b04322a6e73\",\"dweb:/ipfs/QmVQfsaSwqV8ynqc9KEGWjQkxnAzju7uQQaFvxqhAd32cW\"]},\"src/interfaces/IHookFeeManager.sol\":{\"keccak256\":\"0x62873d5cdfadef590908e8ba3a3e48441f0e9a6c4e15718288ff8e17da316cbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e1206bca2f5227b07a8de05bc679564ce8e7c6049f94960e91e08cece4a4360\",\"dweb:/ipfs/QmThCu96pnudtJJhRCSLKnvTZhsFCvAGPC64hvqLxm9BCX\"]},\"src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc8b2ff0889b0866f84a4a4f06702b92ac08e3a5e2a6048e09dcbba8d58297002\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4614b2c046f2521dc7f39496cd77af787184189f9e23f65086ac89515826190c\",\"dweb:/ipfs/QmdVEVCfz1wJq5zWnvRsKKCUniwYbDUdWf8NWYukCaXe54\"]},\"src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x8710691cd4d68bdee1f7053709521f3ad48cf224ada6b4848cabd05b55db9a8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6cb473e388d308f376b17ff9aa27cceea74758cec82d39da344444833d26ce9\",\"dweb:/ipfs/QmU9GJPNrVfjf7Ka1v5XvvEpXj36oXoBazhV2rctjfmiX5\"]},\"src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0xd30010960f5f0de6a81b95a9a3e733d6d8e06cf09d87bdf26129c286c2ca4ee6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9b3420f8393f20ecf3cb432d4d2f4350fee457191c35f60b75214ed38a194d5\",\"dweb:/ipfs/QmSfS2U51ttBYtPgDdmPrfPR2BXAuJ99j1uQXTjRoAALe5\"]},\"src/interfaces/callback/ILockCallback.sol\":{\"keccak256\":\"0x92e6478df92399c7c1fc6b41579e368bcd70ba9e2012f945f66da92eb0f78042\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e540fdcde3180708f0c268f6c7b893dc03644be0dc526b5c22035287a310a44\",\"dweb:/ipfs/QmQKJSTn9GvQqps5j7XRoMazRq3i93ZJFJFXAhN4exAjp4\"]},\"src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0x8dc5ee72426906aeb12f4ae6a2426df059491739bd5cbdb8ea4a3e26970436c6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f7e30dbbc972cb78d169c8845d6210d27490c8534e68a20d4f296b11ec727b92\",\"dweb:/ipfs/QmXBvaWaAnPW25YGVm2sMbf5mwrzLapUcqPnrNiiGGXxmA\"]},\"src/libraries/BitMath.sol\":{\"keccak256\":\"0x652cd36970d953b3067c766b3b0c0063d4c403eba7352df09ec10dcc868910d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e357b092171edb755c8514b4b4ae758a8b43458c7a23409ebf5afd325fefa2be\",\"dweb:/ipfs/QmWKRWT2z15cVbVVDkjqdVnpf8Ck1jytcXbA7zCUevp7b6\"]},\"src/libraries/FeeLibrary.sol\":{\"keccak256\":\"0x9fc00b77978b617d1a9b5c9d024210b43ee5455682982703d3009bfafc1c12b4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://777acadfdbd1b3c01aa780b2dff49771ae6189e421b7e23be38c2db75b9c1267\",\"dweb:/ipfs/QmUR443r39JFuYjLi6zCWnW7r15u1gbmkuEd6e43Br4gyL\"]},\"src/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x1f015a7a107f4c471985a958f1bfbc1710948f9bcd3786a02310bc0ad5080c69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1cacac08675284f319d151f6bc5d1c66cf1d54c5dad1c620a2e1e1336cbb93a\",\"dweb:/ipfs/QmPf8vQ3mBqniKHwvS1DDEFrV5dJfZSL6mMi9JVy6omQaz\"]},\"src/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x7731aeeba692b0ca5dac8f27803ec9e5ce98795a554c09ae05c220861bd0314e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://963a8155e442d31c4541c387d333db0c02941ae3517e9173ad30ebcb4f6a14e9\",\"dweb:/ipfs/QmevAr8oG4WSoi5gBqQ53VzBuFbDKoZHfJwjuTmVhzm8Tc\"]},\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x6d8760794ed38264579c5da7b2afe8ff5543de999180850bc08687b77dce36ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e72da6f868ba5f5c829f78f649286c6b5922a8cda0317dfbb156b8a4d27fb24\",\"dweb:/ipfs/QmUQDZciNFhy4AFGXfYvoy22ihPc7ehvypeRVQwvVcD3vJ\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0x617e5ad0052a09d657cbf523ecb47b99a5ad8a1eeca72a22bf60a93487bf74de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0f4f995c019105daac9495c1f6d278dc682a74c087075726277e02608d46fc\",\"dweb:/ipfs/QmVQYQrrunLpyGEgftYVJHqnrc9FFubbwquDoiugk3G6R3\"]},\"src/libraries/LockDataLibrary.sol\":{\"keccak256\":\"0xf4be97b50bca4e569e0e2c8555b11e7397bf79c04fc0322c9d74a9a87fa31674\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4adf536b8e73fd663d788cfedc7cb8e075359fe0c237e1a9ccc07f4024d21b7b\",\"dweb:/ipfs/QmTSzyLQ8vfZBAvM46dneUwtHyRgy8EkX4oXMzfhY2zmCo\"]},\"src/libraries/Pool.sol\":{\"keccak256\":\"0x33095bc0ae0c09c96c0aff5a45762584b7897edd3733bbcf30371638ce18cbbb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6ca8960a3a0f221b6f992a5a2269fe37be5bbdea5e283f4350cf51ea77942a87\",\"dweb:/ipfs/QmdG69msxRxHJmEgiiqmCgb5XhnRYdjS9gWcYP3fe5fgdW\"]},\"src/libraries/Position.sol\":{\"keccak256\":\"0x1319e4c172e31427c3b3521dd3c9c9c3949da22e25c9919ae57c47a8c9328e43\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1e0885e8e035681836fe02213e165d1ab48cf2488cf6ba8f01964b4b026d2b46\",\"dweb:/ipfs/QmR4W3DZYYvctASLFnm7Sf4wk2L77gwNRrTS2mBqtiUaud\"]},\"src/libraries/SafeCast.sol\":{\"keccak256\":\"0xb459cbf9f2cda4c38c11916e888cc2afbe4297c5ae6f50a0976eb83ed0dc9b25\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5608698d33b18d3f49e3fa1fbdf6e7c6383378f7d53c914dcf14a0411cf7a79b\",\"dweb:/ipfs/QmbF4VWDcTPzH17aczU6eCUcqTp9Be7xiuBGB5TMWmtJAi\"]},\"src/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0x62cb03c7ce6ce037c82fa74e5aabb2431d6b4ddbca1458efdabf5d6af9ca6f90\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://206e025889f55aa8e5d9db2f846460394b54d6dc6d80a5e4ca1d4b70edd98188\",\"dweb:/ipfs/QmNSzKqtUDXHzgXXDjdNv3ZnHZE3LU4KhwNmkrcWtTRGqk\"]},\"src/libraries/SwapMath.sol\":{\"keccak256\":\"0xac5b75b36ff928e88cbec828bdc9db03e681cc3b337d5d7f6be9fd617b3fef7f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6aaea2ecabdb3fec93c7c6be19ea3a034cf396a59ab96f61c57b5214c04b5a6e\",\"dweb:/ipfs/QmYyd4ExT6xbvEHZTQBv9nZuvU6xjB6EN4uY8TmK8Tceqv\"]},\"src/libraries/TickBitmap.sol\":{\"keccak256\":\"0x7cccb8dff4c76da872a827f1549dc44cdff384d123e77a5361a02a31902bf15c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://88f850cd5bd2bbada4d9514f2516804392c7b23dc2cb541b74e9c88d0a351dcd\",\"dweb:/ipfs/QmZh9LvKUG23oFUZXAAa5gn77MguAbZ41VGjkES5U8N9Em\"]},\"src/libraries/TickMath.sol\":{\"keccak256\":\"0xadffea78a3eed37613b57766d87c0bdb9454d2df39de90d7a450e4a8b3207e56\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c5043430807061e5ccc82986c59b2e074457ff608111a8bd51b413ceaf661c78\",\"dweb:/ipfs/QmXjqKzCrngzidTRmuLUFvwNPqMKtd8xVFLVCycRfEQcWo\"]},\"src/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x2a8cb75af05f8557b698b089a0ab19e24279fffb7e87cddf5794404c7eaf1c69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://85f68e6d614205f3f0f55f6ac41805e3a7d523d95bda1c443f2e75444443ffe3\",\"dweb:/ipfs/QmdCheMqxWNx4CbxG5MH9BUQeSMeeXF6DHkf7Aax4duRUe\"]},\"src/test/BaseTestHooks.sol\":{\"keccak256\":\"0xaa5019942fac8ba7b5b296a9a58a535b26a8cb43df4cd6d60293ad139fcde1fe\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c17902867305208913611357e836235f51f1da6ad0d7bd16731eabdf66539916\",\"dweb:/ipfs/QmbGCsTNMcD3t4pJrHa4x562A9XSm2i5vJHNotubZQMJDe\"]},\"src/test/DynamicFeesTest.sol\":{\"keccak256\":\"0xa98ef3e14d30219bd1a25077384e57192eb5637975045a2c9109b91eff685bc1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4a439059455085d59ffe7e4b1b2cfe7a7e1151346ac6a1368ec3ed6f3b90f970\",\"dweb:/ipfs/QmSurvNJ1sfKmeahddj3wZYKqbPX21vhfEP7Petiji36uh\"]},\"src/test/PoolSwapTest.sol\":{\"keccak256\":\"0x3c7d0ac051b1bcef32cf7c850641782926f8ab11964505d8bd9559da3aaed648\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cfc10f1bcbf707b903cf5d090688200982409ba9d5111a96240ad2f9b8bf5900\",\"dweb:/ipfs/QmPbrmxrxW3ehf22NK4zBrdREE4LQbtiPeyVSvDiKyGgUc\"]},\"src/types/BalanceDelta.sol\":{\"keccak256\":\"0xe8a5ce042a75fb471a43d4466fddcfbfe23a4bdf4d4b5f84ea842551f577bb6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fc93822da004d24a7811a46ae475c81f367953c0210e4c94cf936469fa33fcf\",\"dweb:/ipfs/QmTpWAmvjKDczv2J1t9fV3tTtLW4LetW8TTGuG866zCSwA\"]},\"src/types/Currency.sol\":{\"keccak256\":\"0xb1395e2817b604745bf6cd41821aafeaaa252caafe45133e54f02d6f6be13d2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ec58bd7634ccb1b74f59378e54771ae11cba37494b57ae64e3f6640d4afdd9\",\"dweb:/ipfs/QmeYL1TuGXcTYfsQBGu7p9urSqGjiJky8iJAgwTRYqrJ4F\"]},\"src/types/PoolId.sol\":{\"keccak256\":\"0x2928a23cdf4c3dd05fafd3094020723954150901c6935a40fbb8e3cbc1e0ebe3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddde47e0eda04cf7e1b8e903eafd22ff19866bcb2ce0f61b46a3470b4dc9927\",\"dweb:/ipfs/Qme84u2nmVFZkaBSwVJw3bhZSqt6P9xMHNsp1Y7ddWMDvi\"]},\"src/types/PoolKey.sol\":{\"keccak256\":\"0xef7421713157a514d757863e99c2d094a6fac1dcbae602ac0eb47eda2d651a6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2832668ba213b3928fd79e159b4d00b4b8f057844e2897902ec089014470f29\",\"dweb:/ipfs/QmV2MESks8RiTwRJpqynGCGsrmXKimRFpQFZSBXnxEiXKX\"]},\"test/DynamicFees.t.sol\":{\"keccak256\":\"0x47fc24407ec001bdb10798d11061579b2e447ddf0eccf0624f85b207140e8dbc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://75d8cc573f201a2ff5370755c1db5307cf0fdc2839c73dbcece6fb02d3da75a9\",\"dweb:/ipfs/QmSyuLGNRB2KYdQY6RkwhEtcvs23uLYxt7BKPgQzbbiP3a\"]},\"test/utils/Constants.sol\":{\"keccak256\":\"0x33f7c97c2a827f6fb97112940bb123bb4cb0c7dcb194adf40d75cec59d5e773b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ba8bb762ee6aa61688368b97d0186b2d63fe054947f29ea7d47203e4c36ca6e5\",\"dweb:/ipfs/QmZfiZG21mD5fjyZodYYYAiFhTU5Tgmzq2vPVdNtihr9QE\"]},\"test/utils/Deployers.sol\":{\"keccak256\":\"0xc6c6eafd0cb39d013c02518d5132ed60dcab301e8c5eb97ceb69154cc5be48a9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da2f2d9d4585c1b73f2dc15ac3dd6bfd1f5dbf304d55ae9edcca7304665a8d92\",\"dweb:/ipfs/QmbougvJ8ibsKJs5tAdZHBcWEt4PDt8kedUgD8tSxyvzbn\"]},\"test/utils/SortTokens.sol\":{\"keccak256\":\"0xe11482e2053ed4ed8969495e8c3217400ff129af33678893ef428f42047898fb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4ef722d03a6275ae5ac1b0f1f59e094698dd5302f476a46b256848475845424d\",\"dweb:/ipfs/QmRyJBG5kn5uFBfzKovUdWaLqTXbBFrrsvYarR2DNMbUpq\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.22+commit.4fc1097e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "newGas",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "GasMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "s",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "InvalidStringNumber"
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int128",
              "name": "amount0",
              "type": "int128",
              "indexed": false
            },
            {
              "internalType": "int128",
              "name": "amount1",
              "type": "int128",
              "indexed": false
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CHECK_ENV_VAR",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SNAP_DIR",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract PoolManager",
              "name": "manager",
              "type": "address"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPool",
          "outputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCacheDynamicFeeAndSwap"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDynamicFeeAndBeforeSwapHook"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDynamicFeesCacheNoOtherHooks"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testPoolInitializeFailsWithTooLargeFee"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSwapFailsWithTooLargeFee"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSwapWorks"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testUpdateRevertsOnStaticFeePool"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CHECK_ENV_VAR()": {
            "notice": "if this environment variable is true, we revert on gas mismatch"
          },
          "SNAP_DIR()": {
            "notice": "save gas snapshots in this dir"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/DynamicFees.t.sol": "TestDynamicFees"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-gas-snapshot/src/GasSnapshot.sol": {
        "keccak256": "0xa0a96e1e5c339871cfc74bc4b3c189443a939234b00390e5aece97f5f3af4ce5",
        "urls": [
          "bzz-raw://3f86da5c2743381c8ee45aa2953378d7a13355c539e7e12ad4aa0e3a3270a1cf",
          "dweb:/ipfs/QmdsuT1YfJdnAetQxXmd5s6kGjH4Jv1K3LHSQjXfUNTLKW"
        ],
        "license": "MIT"
      },
      "lib/forge-gas-snapshot/src/utils/UintString.sol": {
        "keccak256": "0x848ccf3820bc9dc5c001eb653c65d361d09c134f6b493751a2b6dca34e0f6c09",
        "urls": [
          "bzz-raw://3b7ca1cd59278688f7ccdd47ae9790f3a017da2db06353354c1cbf2450c8524b",
          "dweb:/ipfs/QmYFvZjjWpJ2yZoAAznKh3hEUBWLtLQcU92VGa2N6LUXXH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0xd566affaba92598bcd059dcb3714a968aeedb365ec0d666815e8b38519e0f433",
        "urls": [
          "bzz-raw://2fb5f7a97d2a7a06e10c198b60f05e64176eb4ef306b72800c168e7a7ec51693",
          "dweb:/ipfs/Qmcep4r7YEU3BwFJNTTxZsdCVzBYdtcVp8oDtmwLoZGRzP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e",
        "urls": [
          "bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275",
          "dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9",
        "urls": [
          "bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5",
          "dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566",
        "urls": [
          "bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e",
          "dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4",
        "urls": [
          "bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922",
          "dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/test/utils/mocks/MockERC20.sol": {
        "keccak256": "0x525129ccb4103c9ecb8f235618d2ff4a8ffde4b8654f7c17766ad175d10ef466",
        "urls": [
          "bzz-raw://45692a21807ba815c0cf0bfc7d633a14a6cb9ba863ab53f18fc639375a72125e",
          "dweb:/ipfs/QmSrqxyodjDtSU1Dc6G3ScnNc9CFjMnAeHpK8a8guM3nJu"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Fees.sol": {
        "keccak256": "0x6c998aa477d8bbcdf23dd0e2450a4d3bd02241c32d511bc1ff22f4201b7fbef1",
        "urls": [
          "bzz-raw://8b73b18351d859d512876c1abbebe2f31bd033406838012c7eceec138cc52b66",
          "dweb:/ipfs/QmPCCQ1WfoWrpmfvL13XRThkb6CyGeGqZ5y3ycVbQ3vmac"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/NoDelegateCall.sol": {
        "keccak256": "0xf17b8cb46d679529ffd7b8f33e35190e9df7dc6b41da11dcf7b1ba134e8d0c40",
        "urls": [
          "bzz-raw://aba476e6983e633bfce71cf4ae56b751c07910ead14bbace00f464dd771781f7",
          "dweb:/ipfs/QmbHT8SgG6Pjyz2BoYpme9M4mS4yqv7XirHDBaXQvyvVea"
        ],
        "license": "BUSL-1.1"
      },
      "src/Owned.sol": {
        "keccak256": "0x0109d375f0df894818365069e711e88bb8b6b315a867cac951f22bafeedacd64",
        "urls": [
          "bzz-raw://70a4c8c612f849c2bf337ab69887609259f500c96d791496176533f5956ecaff",
          "dweb:/ipfs/QmUe6BLMxxdbr39r7YFZAeXyiCPRNnXjntekgHCzfHnYKd"
        ],
        "license": "BUSL-1.1"
      },
      "src/PoolManager.sol": {
        "keccak256": "0xc27b2635e6b3d0ade0ba05cd156fff1b476b0063f7c3c6c7c8b8dddbad0015c8",
        "urls": [
          "bzz-raw://4c55ffd94cb2e26b38477363d314a922f1fb386975291c2744676cb82869bd20",
          "dweb:/ipfs/QmetAWahHKwRYi86heZAv7mMVubqGGNCjTYVs2zgZEEsWR"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IDynamicFeeManager.sol": {
        "keccak256": "0x043d635da3ce5f249f4acd74cb2badbcb5c2b2e5136e4cd8393d6aa5d59c46e7",
        "urls": [
          "bzz-raw://442efca7ad055d7249afab1d9e31f7e2d8b0a24b62bb0e55ab94348c152f5965",
          "dweb:/ipfs/QmaXWB7s5yWRWA8tgcrTHR96Kvmj3PfY7bUgQcqoTNoejt"
        ],
        "license": "MIT"
      },
      "src/interfaces/IFees.sol": {
        "keccak256": "0x7a2d2b74602f23a8944b45c745e8a512f7d8f00f8ba22742636abaf929379697",
        "urls": [
          "bzz-raw://ab38548046bb65d089fd56b335a3b98d2b4f03e9af4763c2b7da2b04322a6e73",
          "dweb:/ipfs/QmVQfsaSwqV8ynqc9KEGWjQkxnAzju7uQQaFvxqhAd32cW"
        ],
        "license": "MIT"
      },
      "src/interfaces/IHookFeeManager.sol": {
        "keccak256": "0x62873d5cdfadef590908e8ba3a3e48441f0e9a6c4e15718288ff8e17da316cbd",
        "urls": [
          "bzz-raw://5e1206bca2f5227b07a8de05bc679564ce8e7c6049f94960e91e08cece4a4360",
          "dweb:/ipfs/QmThCu96pnudtJJhRCSLKnvTZhsFCvAGPC64hvqLxm9BCX"
        ],
        "license": "MIT"
      },
      "src/interfaces/IHooks.sol": {
        "keccak256": "0xc8b2ff0889b0866f84a4a4f06702b92ac08e3a5e2a6048e09dcbba8d58297002",
        "urls": [
          "bzz-raw://4614b2c046f2521dc7f39496cd77af787184189f9e23f65086ac89515826190c",
          "dweb:/ipfs/QmdVEVCfz1wJq5zWnvRsKKCUniwYbDUdWf8NWYukCaXe54"
        ],
        "license": "MIT"
      },
      "src/interfaces/IPoolManager.sol": {
        "keccak256": "0x8710691cd4d68bdee1f7053709521f3ad48cf224ada6b4848cabd05b55db9a8f",
        "urls": [
          "bzz-raw://a6cb473e388d308f376b17ff9aa27cceea74758cec82d39da344444833d26ce9",
          "dweb:/ipfs/QmU9GJPNrVfjf7Ka1v5XvvEpXj36oXoBazhV2rctjfmiX5"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolFeeController.sol": {
        "keccak256": "0xd30010960f5f0de6a81b95a9a3e733d6d8e06cf09d87bdf26129c286c2ca4ee6",
        "urls": [
          "bzz-raw://b9b3420f8393f20ecf3cb432d4d2f4350fee457191c35f60b75214ed38a194d5",
          "dweb:/ipfs/QmSfS2U51ttBYtPgDdmPrfPR2BXAuJ99j1uQXTjRoAALe5"
        ],
        "license": "MIT"
      },
      "src/interfaces/callback/ILockCallback.sol": {
        "keccak256": "0x92e6478df92399c7c1fc6b41579e368bcd70ba9e2012f945f66da92eb0f78042",
        "urls": [
          "bzz-raw://5e540fdcde3180708f0c268f6c7b893dc03644be0dc526b5c22035287a310a44",
          "dweb:/ipfs/QmQKJSTn9GvQqps5j7XRoMazRq3i93ZJFJFXAhN4exAjp4"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/IERC20Minimal.sol": {
        "keccak256": "0x8dc5ee72426906aeb12f4ae6a2426df059491739bd5cbdb8ea4a3e26970436c6",
        "urls": [
          "bzz-raw://f7e30dbbc972cb78d169c8845d6210d27490c8534e68a20d4f296b11ec727b92",
          "dweb:/ipfs/QmXBvaWaAnPW25YGVm2sMbf5mwrzLapUcqPnrNiiGGXxmA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/BitMath.sol": {
        "keccak256": "0x652cd36970d953b3067c766b3b0c0063d4c403eba7352df09ec10dcc868910d9",
        "urls": [
          "bzz-raw://e357b092171edb755c8514b4b4ae758a8b43458c7a23409ebf5afd325fefa2be",
          "dweb:/ipfs/QmWKRWT2z15cVbVVDkjqdVnpf8Ck1jytcXbA7zCUevp7b6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/FeeLibrary.sol": {
        "keccak256": "0x9fc00b77978b617d1a9b5c9d024210b43ee5455682982703d3009bfafc1c12b4",
        "urls": [
          "bzz-raw://777acadfdbd1b3c01aa780b2dff49771ae6189e421b7e23be38c2db75b9c1267",
          "dweb:/ipfs/QmUR443r39JFuYjLi6zCWnW7r15u1gbmkuEd6e43Br4gyL"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/FixedPoint128.sol": {
        "keccak256": "0x1f015a7a107f4c471985a958f1bfbc1710948f9bcd3786a02310bc0ad5080c69",
        "urls": [
          "bzz-raw://a1cacac08675284f319d151f6bc5d1c66cf1d54c5dad1c620a2e1e1336cbb93a",
          "dweb:/ipfs/QmPf8vQ3mBqniKHwvS1DDEFrV5dJfZSL6mMi9JVy6omQaz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/FixedPoint96.sol": {
        "keccak256": "0x7731aeeba692b0ca5dac8f27803ec9e5ce98795a554c09ae05c220861bd0314e",
        "urls": [
          "bzz-raw://963a8155e442d31c4541c387d333db0c02941ae3517e9173ad30ebcb4f6a14e9",
          "dweb:/ipfs/QmevAr8oG4WSoi5gBqQ53VzBuFbDKoZHfJwjuTmVhzm8Tc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/FullMath.sol": {
        "keccak256": "0x6d8760794ed38264579c5da7b2afe8ff5543de999180850bc08687b77dce36ea",
        "urls": [
          "bzz-raw://0e72da6f868ba5f5c829f78f649286c6b5922a8cda0317dfbb156b8a4d27fb24",
          "dweb:/ipfs/QmUQDZciNFhy4AFGXfYvoy22ihPc7ehvypeRVQwvVcD3vJ"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0x617e5ad0052a09d657cbf523ecb47b99a5ad8a1eeca72a22bf60a93487bf74de",
        "urls": [
          "bzz-raw://5d0f4f995c019105daac9495c1f6d278dc682a74c087075726277e02608d46fc",
          "dweb:/ipfs/QmVQYQrrunLpyGEgftYVJHqnrc9FFubbwquDoiugk3G6R3"
        ],
        "license": "MIT"
      },
      "src/libraries/LockDataLibrary.sol": {
        "keccak256": "0xf4be97b50bca4e569e0e2c8555b11e7397bf79c04fc0322c9d74a9a87fa31674",
        "urls": [
          "bzz-raw://4adf536b8e73fd663d788cfedc7cb8e075359fe0c237e1a9ccc07f4024d21b7b",
          "dweb:/ipfs/QmTSzyLQ8vfZBAvM46dneUwtHyRgy8EkX4oXMzfhY2zmCo"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/Pool.sol": {
        "keccak256": "0x33095bc0ae0c09c96c0aff5a45762584b7897edd3733bbcf30371638ce18cbbb",
        "urls": [
          "bzz-raw://6ca8960a3a0f221b6f992a5a2269fe37be5bbdea5e283f4350cf51ea77942a87",
          "dweb:/ipfs/QmdG69msxRxHJmEgiiqmCgb5XhnRYdjS9gWcYP3fe5fgdW"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/Position.sol": {
        "keccak256": "0x1319e4c172e31427c3b3521dd3c9c9c3949da22e25c9919ae57c47a8c9328e43",
        "urls": [
          "bzz-raw://1e0885e8e035681836fe02213e165d1ab48cf2488cf6ba8f01964b4b026d2b46",
          "dweb:/ipfs/QmR4W3DZYYvctASLFnm7Sf4wk2L77gwNRrTS2mBqtiUaud"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/SafeCast.sol": {
        "keccak256": "0xb459cbf9f2cda4c38c11916e888cc2afbe4297c5ae6f50a0976eb83ed0dc9b25",
        "urls": [
          "bzz-raw://5608698d33b18d3f49e3fa1fbdf6e7c6383378f7d53c914dcf14a0411cf7a79b",
          "dweb:/ipfs/QmbF4VWDcTPzH17aczU6eCUcqTp9Be7xiuBGB5TMWmtJAi"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/SqrtPriceMath.sol": {
        "keccak256": "0x62cb03c7ce6ce037c82fa74e5aabb2431d6b4ddbca1458efdabf5d6af9ca6f90",
        "urls": [
          "bzz-raw://206e025889f55aa8e5d9db2f846460394b54d6dc6d80a5e4ca1d4b70edd98188",
          "dweb:/ipfs/QmNSzKqtUDXHzgXXDjdNv3ZnHZE3LU4KhwNmkrcWtTRGqk"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/SwapMath.sol": {
        "keccak256": "0xac5b75b36ff928e88cbec828bdc9db03e681cc3b337d5d7f6be9fd617b3fef7f",
        "urls": [
          "bzz-raw://6aaea2ecabdb3fec93c7c6be19ea3a034cf396a59ab96f61c57b5214c04b5a6e",
          "dweb:/ipfs/QmYyd4ExT6xbvEHZTQBv9nZuvU6xjB6EN4uY8TmK8Tceqv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/TickBitmap.sol": {
        "keccak256": "0x7cccb8dff4c76da872a827f1549dc44cdff384d123e77a5361a02a31902bf15c",
        "urls": [
          "bzz-raw://88f850cd5bd2bbada4d9514f2516804392c7b23dc2cb541b74e9c88d0a351dcd",
          "dweb:/ipfs/QmZh9LvKUG23oFUZXAAa5gn77MguAbZ41VGjkES5U8N9Em"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/TickMath.sol": {
        "keccak256": "0xadffea78a3eed37613b57766d87c0bdb9454d2df39de90d7a450e4a8b3207e56",
        "urls": [
          "bzz-raw://c5043430807061e5ccc82986c59b2e074457ff608111a8bd51b413ceaf661c78",
          "dweb:/ipfs/QmXjqKzCrngzidTRmuLUFvwNPqMKtd8xVFLVCycRfEQcWo"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/libraries/UnsafeMath.sol": {
        "keccak256": "0x2a8cb75af05f8557b698b089a0ab19e24279fffb7e87cddf5794404c7eaf1c69",
        "urls": [
          "bzz-raw://85f68e6d614205f3f0f55f6ac41805e3a7d523d95bda1c443f2e75444443ffe3",
          "dweb:/ipfs/QmdCheMqxWNx4CbxG5MH9BUQeSMeeXF6DHkf7Aax4duRUe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/test/BaseTestHooks.sol": {
        "keccak256": "0xaa5019942fac8ba7b5b296a9a58a535b26a8cb43df4cd6d60293ad139fcde1fe",
        "urls": [
          "bzz-raw://c17902867305208913611357e836235f51f1da6ad0d7bd16731eabdf66539916",
          "dweb:/ipfs/QmbGCsTNMcD3t4pJrHa4x562A9XSm2i5vJHNotubZQMJDe"
        ],
        "license": "UNLICENSED"
      },
      "src/test/DynamicFeesTest.sol": {
        "keccak256": "0xa98ef3e14d30219bd1a25077384e57192eb5637975045a2c9109b91eff685bc1",
        "urls": [
          "bzz-raw://4a439059455085d59ffe7e4b1b2cfe7a7e1151346ac6a1368ec3ed6f3b90f970",
          "dweb:/ipfs/QmSurvNJ1sfKmeahddj3wZYKqbPX21vhfEP7Petiji36uh"
        ],
        "license": "UNLICENSED"
      },
      "src/test/PoolSwapTest.sol": {
        "keccak256": "0x3c7d0ac051b1bcef32cf7c850641782926f8ab11964505d8bd9559da3aaed648",
        "urls": [
          "bzz-raw://cfc10f1bcbf707b903cf5d090688200982409ba9d5111a96240ad2f9b8bf5900",
          "dweb:/ipfs/QmPbrmxrxW3ehf22NK4zBrdREE4LQbtiPeyVSvDiKyGgUc"
        ],
        "license": "UNLICENSED"
      },
      "src/types/BalanceDelta.sol": {
        "keccak256": "0xe8a5ce042a75fb471a43d4466fddcfbfe23a4bdf4d4b5f84ea842551f577bb6e",
        "urls": [
          "bzz-raw://9fc93822da004d24a7811a46ae475c81f367953c0210e4c94cf936469fa33fcf",
          "dweb:/ipfs/QmTpWAmvjKDczv2J1t9fV3tTtLW4LetW8TTGuG866zCSwA"
        ],
        "license": "MIT"
      },
      "src/types/Currency.sol": {
        "keccak256": "0xb1395e2817b604745bf6cd41821aafeaaa252caafe45133e54f02d6f6be13d2b",
        "urls": [
          "bzz-raw://49ec58bd7634ccb1b74f59378e54771ae11cba37494b57ae64e3f6640d4afdd9",
          "dweb:/ipfs/QmeYL1TuGXcTYfsQBGu7p9urSqGjiJky8iJAgwTRYqrJ4F"
        ],
        "license": "MIT"
      },
      "src/types/PoolId.sol": {
        "keccak256": "0x2928a23cdf4c3dd05fafd3094020723954150901c6935a40fbb8e3cbc1e0ebe3",
        "urls": [
          "bzz-raw://4ddde47e0eda04cf7e1b8e903eafd22ff19866bcb2ce0f61b46a3470b4dc9927",
          "dweb:/ipfs/Qme84u2nmVFZkaBSwVJw3bhZSqt6P9xMHNsp1Y7ddWMDvi"
        ],
        "license": "MIT"
      },
      "src/types/PoolKey.sol": {
        "keccak256": "0xef7421713157a514d757863e99c2d094a6fac1dcbae602ac0eb47eda2d651a6d",
        "urls": [
          "bzz-raw://d2832668ba213b3928fd79e159b4d00b4b8f057844e2897902ec089014470f29",
          "dweb:/ipfs/QmV2MESks8RiTwRJpqynGCGsrmXKimRFpQFZSBXnxEiXKX"
        ],
        "license": "MIT"
      },
      "test/DynamicFees.t.sol": {
        "keccak256": "0x47fc24407ec001bdb10798d11061579b2e447ddf0eccf0624f85b207140e8dbc",
        "urls": [
          "bzz-raw://75d8cc573f201a2ff5370755c1db5307cf0fdc2839c73dbcece6fb02d3da75a9",
          "dweb:/ipfs/QmSyuLGNRB2KYdQY6RkwhEtcvs23uLYxt7BKPgQzbbiP3a"
        ],
        "license": "UNLICENSED"
      },
      "test/utils/Constants.sol": {
        "keccak256": "0x33f7c97c2a827f6fb97112940bb123bb4cb0c7dcb194adf40d75cec59d5e773b",
        "urls": [
          "bzz-raw://ba8bb762ee6aa61688368b97d0186b2d63fe054947f29ea7d47203e4c36ca6e5",
          "dweb:/ipfs/QmZfiZG21mD5fjyZodYYYAiFhTU5Tgmzq2vPVdNtihr9QE"
        ],
        "license": "UNLICENSED"
      },
      "test/utils/Deployers.sol": {
        "keccak256": "0xc6c6eafd0cb39d013c02518d5132ed60dcab301e8c5eb97ceb69154cc5be48a9",
        "urls": [
          "bzz-raw://da2f2d9d4585c1b73f2dc15ac3dd6bfd1f5dbf304d55ae9edcca7304665a8d92",
          "dweb:/ipfs/QmbougvJ8ibsKJs5tAdZHBcWEt4PDt8kedUgD8tSxyvzbn"
        ],
        "license": "UNLICENSED"
      },
      "test/utils/SortTokens.sol": {
        "keccak256": "0xe11482e2053ed4ed8969495e8c3217400ff129af33678893ef428f42047898fb",
        "urls": [
          "bzz-raw://4ef722d03a6275ae5ac1b0f1f59e094698dd5302f476a46b256848475845424d",
          "dweb:/ipfs/QmRyJBG5kn5uFBfzKovUdWaLqTXbBFrrsvYarR2DNMbUpq"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/DynamicFees.t.sol",
    "id": 43334,
    "exportedSymbols": {
      "Deployers": [
        65616
      ],
      "DynamicFeesTest": [
        39003
      ],
      "FeeLibrary": [
        34099
      ],
      "GasSnapshot": [
        399
      ],
      "Hooks": [
        34692
      ],
      "IDynamicFeeManager": [
        33049
      ],
      "IFees": [
        33093
      ],
      "IHooks": [
        33254
      ],
      "IPoolManager": [
        33638
      ],
      "PoolId": [
        42208
      ],
      "PoolIdLibrary": [
        42230
      ],
      "PoolKey": [
        42256
      ],
      "PoolManager": [
        33031
      ],
      "PoolSwapTest": [
        41071
      ],
      "Test": [
        11275
      ],
      "TestDynamicFees": [
        43333
      ],
      "Vm": [
        12595
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6052:77",
    "nodes": [
      {
        "id": 42650,
        "nodeType": "PragmaDirective",
        "src": "39:24:77",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 42652,
        "nodeType": "ImportDirective",
        "src": "65:40:77",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 11276,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42651,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11275,
              "src": "73:4:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42654,
        "nodeType": "ImportDirective",
        "src": "106:36:77",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 12596,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42653,
              "name": "Vm",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12595,
              "src": "114:2:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42657,
        "nodeType": "ImportDirective",
        "src": "143:62:77",
        "nodes": [],
        "absolutePath": "src/types/PoolId.sol",
        "file": "../src/types/PoolId.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 42231,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42655,
              "name": "PoolId",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42208,
              "src": "151:6:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 42656,
              "name": "PoolIdLibrary",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42230,
              "src": "159:13:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42659,
        "nodeType": "ImportDirective",
        "src": "206:49:77",
        "nodes": [],
        "absolutePath": "src/libraries/Hooks.sol",
        "file": "../src/libraries/Hooks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 34693,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42658,
              "name": "Hooks",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34692,
              "src": "214:5:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42661,
        "nodeType": "ImportDirective",
        "src": "256:59:77",
        "nodes": [],
        "absolutePath": "src/libraries/FeeLibrary.sol",
        "file": "../src/libraries/FeeLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 34100,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42660,
              "name": "FeeLibrary",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34099,
              "src": "264:10:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42663,
        "nodeType": "ImportDirective",
        "src": "316:64:77",
        "nodes": [],
        "absolutePath": "src/interfaces/IPoolManager.sol",
        "file": "../src/interfaces/IPoolManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 33639,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42662,
              "name": "IPoolManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33638,
              "src": "324:12:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42665,
        "nodeType": "ImportDirective",
        "src": "381:50:77",
        "nodes": [],
        "absolutePath": "src/interfaces/IFees.sol",
        "file": "../src/interfaces/IFees.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 33094,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42664,
              "name": "IFees",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33093,
              "src": "389:5:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42667,
        "nodeType": "ImportDirective",
        "src": "432:52:77",
        "nodes": [],
        "absolutePath": "src/interfaces/IHooks.sol",
        "file": "../src/interfaces/IHooks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 33255,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42666,
              "name": "IHooks",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33254,
              "src": "440:6:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42669,
        "nodeType": "ImportDirective",
        "src": "485:49:77",
        "nodes": [],
        "absolutePath": "src/types/PoolKey.sol",
        "file": "../src/types/PoolKey.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 42257,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42668,
              "name": "PoolKey",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42256,
              "src": "493:7:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42671,
        "nodeType": "ImportDirective",
        "src": "535:51:77",
        "nodes": [],
        "absolutePath": "src/PoolManager.sol",
        "file": "../src/PoolManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 33032,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42670,
              "name": "PoolManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33031,
              "src": "543:11:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42673,
        "nodeType": "ImportDirective",
        "src": "587:58:77",
        "nodes": [],
        "absolutePath": "src/test/PoolSwapTest.sol",
        "file": "../src/test/PoolSwapTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 41072,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42672,
              "name": "PoolSwapTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41071,
              "src": "595:12:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42675,
        "nodeType": "ImportDirective",
        "src": "646:48:77",
        "nodes": [],
        "absolutePath": "test/utils/Deployers.sol",
        "file": "./utils/Deployers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 65617,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42674,
              "name": "Deployers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65616,
              "src": "654:9:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42677,
        "nodeType": "ImportDirective",
        "src": "695:80:77",
        "nodes": [],
        "absolutePath": "src/interfaces/IDynamicFeeManager.sol",
        "file": "././../src/interfaces/IDynamicFeeManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 33050,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42676,
              "name": "IDynamicFeeManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33049,
              "src": "703:18:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42679,
        "nodeType": "ImportDirective",
        "src": "776:63:77",
        "nodes": [],
        "absolutePath": "lib/forge-gas-snapshot/src/GasSnapshot.sol",
        "file": "forge-gas-snapshot/GasSnapshot.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 400,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42678,
              "name": "GasSnapshot",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 399,
              "src": "784:11:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42681,
        "nodeType": "ImportDirective",
        "src": "840:64:77",
        "nodes": [],
        "absolutePath": "src/test/DynamicFeesTest.sol",
        "file": "../src/test/DynamicFeesTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43334,
        "sourceUnit": 39004,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42680,
              "name": "DynamicFeesTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39003,
              "src": "848:15:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 43333,
        "nodeType": "ContractDefinition",
        "src": "906:5184:77",
        "nodes": [
          {
            "id": 42691,
            "nodeType": "UsingForDirective",
            "src": "969:32:77",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 42688,
              "name": "PoolIdLibrary",
              "nameLocations": [
                "975:13:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42230,
              "src": "975:13:77"
            },
            "typeName": {
              "id": 42690,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42689,
                "name": "PoolKey",
                "nameLocations": [
                  "993:7:77"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42256,
                "src": "993:7:77"
              },
              "referencedDeclaration": 42256,
              "src": "993:7:77",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PoolKey_$42256_storage_ptr",
                "typeString": "struct PoolKey"
              }
            }
          },
          {
            "id": 42734,
            "nodeType": "VariableDeclaration",
            "src": "1007:470:77",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dynamicFees",
            "nameLocation": "1023:11:77",
            "scope": 43333,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
              "typeString": "contract DynamicFeesTest"
            },
            "typeName": {
              "id": 42693,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42692,
                "name": "DynamicFeesTest",
                "nameLocations": [
                  "1007:15:77"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39003,
                "src": "1007:15:77"
              },
              "referencedDeclaration": 39003,
              "src": "1007:15:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                "typeString": "contract DynamicFeesTest"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "commonType": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "id": 42731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "hexValue": "307846466646664666664646666666464666464666464646464666664646466666666646664646466646",
                            "id": 42699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1091:42:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1083:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 42697,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "1083:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1083:51:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&",
                      "rightExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 42729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 42725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 42721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 42717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 42713,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 42709,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 42705,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "~",
                                        "prefix": true,
                                        "src": "1182:29:77",
                                        "subExpression": {
                                          "expression": {
                                            "id": 42703,
                                            "name": "Hooks",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 34692,
                                            "src": "1183:5:77",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                              "typeString": "type(library Hooks)"
                                            }
                                          },
                                          "id": 42704,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "1189:22:77",
                                          "memberName": "BEFORE_INITIALIZE_FLAG",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 34305,
                                          "src": "1183:28:77",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&",
                                      "rightExpression": {
                                        "id": 42708,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "~",
                                        "prefix": true,
                                        "src": "1214:28:77",
                                        "subExpression": {
                                          "expression": {
                                            "id": 42706,
                                            "name": "Hooks",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 34692,
                                            "src": "1215:5:77",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                              "typeString": "type(library Hooks)"
                                            }
                                          },
                                          "id": 42707,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "1221:21:77",
                                          "memberName": "AFTER_INITIALIZE_FLAG",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 34310,
                                          "src": "1215:27:77",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "1182:60:77",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "id": 42712,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "~",
                                      "prefix": true,
                                      "src": "1245:34:77",
                                      "subExpression": {
                                        "expression": {
                                          "id": 42710,
                                          "name": "Hooks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 34692,
                                          "src": "1246:5:77",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                            "typeString": "type(library Hooks)"
                                          }
                                        },
                                        "id": 42711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "1252:27:77",
                                        "memberName": "BEFORE_MODIFY_POSITION_FLAG",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 34315,
                                        "src": "1246:33:77",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1182:97:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&",
                                  "rightExpression": {
                                    "id": 42716,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "~",
                                    "prefix": true,
                                    "src": "1306:33:77",
                                    "subExpression": {
                                      "expression": {
                                        "id": 42714,
                                        "name": "Hooks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 34692,
                                        "src": "1307:5:77",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                          "typeString": "type(library Hooks)"
                                        }
                                      },
                                      "id": 42715,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1313:26:77",
                                      "memberName": "AFTER_MODIFY_POSITION_FLAG",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 34320,
                                      "src": "1307:32:77",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1182:157:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&",
                                "rightExpression": {
                                  "id": 42720,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "~",
                                  "prefix": true,
                                  "src": "1342:22:77",
                                  "subExpression": {
                                    "expression": {
                                      "id": 42718,
                                      "name": "Hooks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34692,
                                      "src": "1343:5:77",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                        "typeString": "type(library Hooks)"
                                      }
                                    },
                                    "id": 42719,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1349:15:77",
                                    "memberName": "AFTER_SWAP_FLAG",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34330,
                                    "src": "1343:21:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1182:182:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "id": 42724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "~",
                                "prefix": true,
                                "src": "1367:25:77",
                                "subExpression": {
                                  "expression": {
                                    "id": 42722,
                                    "name": "Hooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34692,
                                    "src": "1368:5:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                      "typeString": "type(library Hooks)"
                                    }
                                  },
                                  "id": 42723,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "1374:18:77",
                                  "memberName": "BEFORE_DONATE_FLAG",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34335,
                                  "src": "1368:24:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1182:210:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "id": 42728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "~",
                              "prefix": true,
                              "src": "1419:24:77",
                              "subExpression": {
                                "expression": {
                                  "id": 42726,
                                  "name": "Hooks",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34692,
                                  "src": "1420:5:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                    "typeString": "type(library Hooks)"
                                  }
                                },
                                "id": 42727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1426:17:77",
                                "memberName": "AFTER_DONATE_FLAG",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34340,
                                "src": "1420:23:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1182:261:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 42702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1153:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 42701,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "1153:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1153:308:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "src": "1083:378:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      }
                    ],
                    "id": 42696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1062:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 42695,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1062:7:77",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 42732,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1062:409:77",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 42694,
                "name": "DynamicFeesTest",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 39003,
                "src": "1037:15:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_DynamicFeesTest_$39003_$",
                  "typeString": "type(contract DynamicFeesTest)"
                }
              },
              "id": 42733,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1037:440:77",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                "typeString": "contract DynamicFeesTest"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42781,
            "nodeType": "VariableDeclaration",
            "src": "1484:502:77",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dynamicFeesNoHook",
            "nameLocation": "1500:17:77",
            "scope": 43333,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
              "typeString": "contract DynamicFeesTest"
            },
            "typeName": {
              "id": 42736,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42735,
                "name": "DynamicFeesTest",
                "nameLocations": [
                  "1484:15:77"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39003,
                "src": "1484:15:77"
              },
              "referencedDeclaration": 39003,
              "src": "1484:15:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                "typeString": "contract DynamicFeesTest"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "commonType": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "id": 42778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "hexValue": "307846466646664666664646666666464666464666464646464666664646466666666646664646466646",
                            "id": 42742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1574:42:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1566:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 42740,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "1566:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1566:51:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&",
                      "rightExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 42776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 42772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 42768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 42764,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 42760,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 42756,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 42752,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 42748,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "~",
                                          "prefix": true,
                                          "src": "1665:29:77",
                                          "subExpression": {
                                            "expression": {
                                              "id": 42746,
                                              "name": "Hooks",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 34692,
                                              "src": "1666:5:77",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                                "typeString": "type(library Hooks)"
                                              }
                                            },
                                            "id": 42747,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "1672:22:77",
                                            "memberName": "BEFORE_INITIALIZE_FLAG",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 34305,
                                            "src": "1666:28:77",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "&",
                                        "rightExpression": {
                                          "id": 42751,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "~",
                                          "prefix": true,
                                          "src": "1697:28:77",
                                          "subExpression": {
                                            "expression": {
                                              "id": 42749,
                                              "name": "Hooks",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 34692,
                                              "src": "1698:5:77",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                                "typeString": "type(library Hooks)"
                                              }
                                            },
                                            "id": 42750,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "1704:21:77",
                                            "memberName": "AFTER_INITIALIZE_FLAG",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 34310,
                                            "src": "1698:27:77",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "1665:60:77",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&",
                                      "rightExpression": {
                                        "id": 42755,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "~",
                                        "prefix": true,
                                        "src": "1728:34:77",
                                        "subExpression": {
                                          "expression": {
                                            "id": 42753,
                                            "name": "Hooks",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 34692,
                                            "src": "1729:5:77",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                              "typeString": "type(library Hooks)"
                                            }
                                          },
                                          "id": 42754,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "1735:27:77",
                                          "memberName": "BEFORE_MODIFY_POSITION_FLAG",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 34315,
                                          "src": "1729:33:77",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "1665:97:77",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "id": 42759,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "~",
                                      "prefix": true,
                                      "src": "1789:33:77",
                                      "subExpression": {
                                        "expression": {
                                          "id": 42757,
                                          "name": "Hooks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 34692,
                                          "src": "1790:5:77",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                            "typeString": "type(library Hooks)"
                                          }
                                        },
                                        "id": 42758,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "1796:26:77",
                                        "memberName": "AFTER_MODIFY_POSITION_FLAG",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 34320,
                                        "src": "1790:32:77",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1665:157:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&",
                                  "rightExpression": {
                                    "id": 42763,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "~",
                                    "prefix": true,
                                    "src": "1825:23:77",
                                    "subExpression": {
                                      "expression": {
                                        "id": 42761,
                                        "name": "Hooks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 34692,
                                        "src": "1826:5:77",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                          "typeString": "type(library Hooks)"
                                        }
                                      },
                                      "id": 42762,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1832:16:77",
                                      "memberName": "BEFORE_SWAP_FLAG",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 34325,
                                      "src": "1826:22:77",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1665:183:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&",
                                "rightExpression": {
                                  "id": 42767,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "~",
                                  "prefix": true,
                                  "src": "1851:22:77",
                                  "subExpression": {
                                    "expression": {
                                      "id": 42765,
                                      "name": "Hooks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34692,
                                      "src": "1852:5:77",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                        "typeString": "type(library Hooks)"
                                      }
                                    },
                                    "id": 42766,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1858:15:77",
                                    "memberName": "AFTER_SWAP_FLAG",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34330,
                                    "src": "1852:21:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1665:208:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "id": 42771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "~",
                                "prefix": true,
                                "src": "1900:25:77",
                                "subExpression": {
                                  "expression": {
                                    "id": 42769,
                                    "name": "Hooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34692,
                                    "src": "1901:5:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                      "typeString": "type(library Hooks)"
                                    }
                                  },
                                  "id": 42770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "1907:18:77",
                                  "memberName": "BEFORE_DONATE_FLAG",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34335,
                                  "src": "1901:24:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1665:260:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "id": 42775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "~",
                              "prefix": true,
                              "src": "1928:24:77",
                              "subExpression": {
                                "expression": {
                                  "id": 42773,
                                  "name": "Hooks",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34692,
                                  "src": "1929:5:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Hooks_$34692_$",
                                    "typeString": "type(library Hooks)"
                                  }
                                },
                                "id": 42774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1935:17:77",
                                "memberName": "AFTER_DONATE_FLAG",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34340,
                                "src": "1929:23:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1665:287:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 42745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1636:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 42744,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "1636:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1636:334:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "src": "1566:404:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      }
                    ],
                    "id": 42739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1545:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 42738,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1545:7:77",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 42779,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1545:435:77",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 42737,
                "name": "DynamicFeesTest",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 39003,
                "src": "1520:15:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_DynamicFeesTest_$39003_$",
                  "typeString": "type(contract DynamicFeesTest)"
                }
              },
              "id": 42780,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1520:466:77",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                "typeString": "contract DynamicFeesTest"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42784,
            "nodeType": "VariableDeclaration",
            "src": "1993:19:77",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "manager",
            "nameLocation": "2005:7:77",
            "scope": 43333,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PoolManager_$33031",
              "typeString": "contract PoolManager"
            },
            "typeName": {
              "id": 42783,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42782,
                "name": "PoolManager",
                "nameLocations": [
                  "1993:11:77"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33031,
                "src": "1993:11:77"
              },
              "referencedDeclaration": 33031,
              "src": "1993:11:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PoolManager_$33031",
                "typeString": "contract PoolManager"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42787,
            "nodeType": "VariableDeclaration",
            "src": "2018:11:77",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "key",
            "nameLocation": "2026:3:77",
            "scope": 43333,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
              "typeString": "struct PoolKey"
            },
            "typeName": {
              "id": 42786,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42785,
                "name": "PoolKey",
                "nameLocations": [
                  "2018:7:77"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42256,
                "src": "2018:7:77"
              },
              "referencedDeclaration": 42256,
              "src": "2018:7:77",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PoolKey_$42256_storage_ptr",
                "typeString": "struct PoolKey"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42790,
            "nodeType": "VariableDeclaration",
            "src": "2035:12:77",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "key2",
            "nameLocation": "2043:4:77",
            "scope": 43333,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
              "typeString": "struct PoolKey"
            },
            "typeName": {
              "id": 42789,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42788,
                "name": "PoolKey",
                "nameLocations": [
                  "2035:7:77"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42256,
                "src": "2035:7:77"
              },
              "referencedDeclaration": 42256,
              "src": "2035:7:77",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PoolKey_$42256_storage_ptr",
                "typeString": "struct PoolKey"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42793,
            "nodeType": "VariableDeclaration",
            "src": "2053:23:77",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "swapRouter",
            "nameLocation": "2066:10:77",
            "scope": 43333,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
              "typeString": "contract PoolSwapTest"
            },
            "typeName": {
              "id": 42792,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42791,
                "name": "PoolSwapTest",
                "nameLocations": [
                  "2053:12:77"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41071,
                "src": "2053:12:77"
              },
              "referencedDeclaration": 41071,
              "src": "2053:12:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                "typeString": "contract PoolSwapTest"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42896,
            "nodeType": "FunctionDefinition",
            "src": "2083:692:77",
            "nodes": [],
            "body": {
              "id": 42895,
              "nodeType": "Block",
              "src": "2107:668:77",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42798,
                      "mutability": "mutable",
                      "name": "impl",
                      "nameLocation": "2133:4:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 42895,
                      "src": "2117:20:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                        "typeString": "contract DynamicFeesTest"
                      },
                      "typeName": {
                        "id": 42797,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42796,
                          "name": "DynamicFeesTest",
                          "nameLocations": [
                            "2117:15:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39003,
                          "src": "2117:15:77"
                        },
                        "referencedDeclaration": 39003,
                        "src": "2117:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                          "typeString": "contract DynamicFeesTest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42803,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 42801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2140:19:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DynamicFeesTest_$39003_$",
                        "typeString": "function () returns (contract DynamicFeesTest)"
                      },
                      "typeName": {
                        "id": 42800,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42799,
                          "name": "DynamicFeesTest",
                          "nameLocations": [
                            "2144:15:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39003,
                          "src": "2144:15:77"
                        },
                        "referencedDeclaration": 39003,
                        "src": "2144:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                          "typeString": "contract DynamicFeesTest"
                        }
                      }
                    },
                    "id": 42802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2140:21:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                      "typeString": "contract DynamicFeesTest"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2117:44:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42809,
                            "name": "dynamicFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42734,
                            "src": "2187:11:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                              "typeString": "contract DynamicFeesTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                              "typeString": "contract DynamicFeesTest"
                            }
                          ],
                          "id": 42808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2179:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42807,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2179:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2179:20:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 42813,
                              "name": "impl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42798,
                              "src": "2209:4:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                                "typeString": "contract DynamicFeesTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                                "typeString": "contract DynamicFeesTest"
                              }
                            ],
                            "id": 42812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2201:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 42811,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2201:7:77",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 42814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2201:13:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 42815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2215:4:77",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "2201:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 42804,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "2171:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12595",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2174:4:77",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12324,
                      "src": "2171:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 42816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2171:49:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42817,
                  "nodeType": "ExpressionStatement",
                  "src": "2171:49:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42823,
                            "name": "dynamicFeesNoHook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42781,
                            "src": "2246:17:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                              "typeString": "contract DynamicFeesTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                              "typeString": "contract DynamicFeesTest"
                            }
                          ],
                          "id": 42822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2238:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42821,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2238:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2238:26:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 42827,
                              "name": "impl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42798,
                              "src": "2274:4:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                                "typeString": "contract DynamicFeesTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                                "typeString": "contract DynamicFeesTest"
                              }
                            ],
                            "id": 42826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2266:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 42825,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2266:7:77",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 42828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2266:13:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 42829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2280:4:77",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "2266:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 42818,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "2230:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12595",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2233:4:77",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12324,
                      "src": "2230:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 42830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2230:55:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42831,
                  "nodeType": "ExpressionStatement",
                  "src": "2230:55:77"
                },
                {
                  "expression": {
                    "id": 42847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 42832,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42784,
                          "src": "2297:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PoolManager_$33031",
                            "typeString": "contract PoolManager"
                          }
                        },
                        {
                          "id": 42833,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42787,
                          "src": "2306:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                            "typeString": "struct PoolKey storage ref"
                          }
                        },
                        null
                      ],
                      "id": 42834,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2296:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_PoolManager_$33031_$_t_struct$_PoolKey_$42256_storage_$__$",
                        "typeString": "tuple(contract PoolManager,struct PoolKey storage ref,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 42840,
                                  "name": "dynamicFees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42734,
                                  "src": "2367:11:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                                    "typeString": "contract DynamicFeesTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                                    "typeString": "contract DynamicFeesTest"
                                  }
                                ],
                                "id": 42839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2359:7:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 42838,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2359:7:77",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 42841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2359:20:77",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 42837,
                            "name": "IHooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33254,
                            "src": "2352:6:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IHooks_$33254_$",
                              "typeString": "type(contract IHooks)"
                            }
                          },
                          "id": 42842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2352:28:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IHooks_$33254",
                            "typeString": "contract IHooks"
                          }
                        },
                        {
                          "expression": {
                            "id": 42843,
                            "name": "FeeLibrary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34099,
                            "src": "2382:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FeeLibrary_$34099_$",
                              "typeString": "type(library FeeLibrary)"
                            }
                          },
                          "id": 42844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2393:16:77",
                          "memberName": "DYNAMIC_FEE_FLAG",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34024,
                          "src": "2382:27:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "id": 42845,
                          "name": "SQRT_RATIO_1_1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65238,
                          "src": "2411:14:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IHooks_$33254",
                            "typeString": "contract IHooks"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "expression": {
                          "id": 42835,
                          "name": "Deployers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65616,
                          "src": "2326:9:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Deployers_$65616_$",
                            "typeString": "type(contract Deployers)"
                          }
                        },
                        "id": 42836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2336:15:77",
                        "memberName": "createFreshPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65556,
                        "src": "2326:25:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IHooks_$33254_$_t_uint24_$_t_uint160_$returns$_t_contract$_PoolManager_$33031_$_t_struct$_PoolKey_$42256_memory_ptr_$_t_userDefinedValueType$_PoolId_$42208_$",
                          "typeString": "function (contract IHooks,uint24,uint160) returns (contract PoolManager,struct PoolKey memory,PoolId)"
                        }
                      },
                      "id": 42846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2326:100:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_PoolManager_$33031_$_t_struct$_PoolKey_$42256_memory_ptr_$_t_userDefinedValueType$_PoolId_$42208_$",
                        "typeString": "tuple(contract PoolManager,struct PoolKey memory,PoolId)"
                      }
                    },
                    "src": "2296:130:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42848,
                  "nodeType": "ExpressionStatement",
                  "src": "2296:130:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42853,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42784,
                            "src": "2472:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolManager_$33031",
                              "typeString": "contract PoolManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolManager_$33031",
                              "typeString": "contract PoolManager"
                            }
                          ],
                          "id": 42852,
                          "name": "IPoolManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33638,
                          "src": "2459:12:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPoolManager_$33638_$",
                            "typeString": "type(contract IPoolManager)"
                          }
                        },
                        "id": 42854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2459:21:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      ],
                      "expression": {
                        "id": 42849,
                        "name": "dynamicFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42734,
                        "src": "2436:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                          "typeString": "contract DynamicFeesTest"
                        }
                      },
                      "id": 42851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2448:10:77",
                      "memberName": "setManager",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38917,
                      "src": "2436:22:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IPoolManager_$33638_$returns$__$",
                        "typeString": "function (contract IPoolManager) external"
                      }
                    },
                    "id": 42855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2436:45:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42856,
                  "nodeType": "ExpressionStatement",
                  "src": "2436:45:77"
                },
                {
                  "assignments": [
                    42859
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42859,
                      "mutability": "mutable",
                      "name": "id2",
                      "nameLocation": "2499:3:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 42895,
                      "src": "2492:10:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_PoolId_$42208",
                        "typeString": "PoolId"
                      },
                      "typeName": {
                        "id": 42858,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42857,
                          "name": "PoolId",
                          "nameLocations": [
                            "2492:6:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42208,
                          "src": "2492:6:77"
                        },
                        "referencedDeclaration": 42208,
                        "src": "2492:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_PoolId_$42208",
                          "typeString": "PoolId"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42860,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2492:10:77"
                },
                {
                  "expression": {
                    "id": 42877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 42861,
                          "name": "key2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42790,
                          "src": "2513:4:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                            "typeString": "struct PoolKey storage ref"
                          }
                        },
                        {
                          "id": 42862,
                          "name": "id2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42859,
                          "src": "2519:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_PoolId_$42208",
                            "typeString": "PoolId"
                          }
                        }
                      ],
                      "id": 42863,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2512:11:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_PoolKey_$42256_storage_$_t_userDefinedValueType$_PoolId_$42208_$",
                        "typeString": "tuple(struct PoolKey storage ref,PoolId)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 42866,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42784,
                          "src": "2560:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PoolManager_$33031",
                            "typeString": "contract PoolManager"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 42870,
                                  "name": "dynamicFeesNoHook",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42781,
                                  "src": "2584:17:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                                    "typeString": "contract DynamicFeesTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                                    "typeString": "contract DynamicFeesTest"
                                  }
                                ],
                                "id": 42869,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2576:7:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 42868,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2576:7:77",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 42871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2576:26:77",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 42867,
                            "name": "IHooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33254,
                            "src": "2569:6:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IHooks_$33254_$",
                              "typeString": "type(contract IHooks)"
                            }
                          },
                          "id": 42872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2569:34:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IHooks_$33254",
                            "typeString": "contract IHooks"
                          }
                        },
                        {
                          "expression": {
                            "id": 42873,
                            "name": "FeeLibrary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34099,
                            "src": "2605:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FeeLibrary_$34099_$",
                              "typeString": "type(library FeeLibrary)"
                            }
                          },
                          "id": 42874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2616:16:77",
                          "memberName": "DYNAMIC_FEE_FLAG",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34024,
                          "src": "2605:27:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "id": 42875,
                          "name": "SQRT_RATIO_1_1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65238,
                          "src": "2634:14:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PoolManager_$33031",
                            "typeString": "contract PoolManager"
                          },
                          {
                            "typeIdentifier": "t_contract$_IHooks_$33254",
                            "typeString": "contract IHooks"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "expression": {
                          "id": 42864,
                          "name": "Deployers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65616,
                          "src": "2526:9:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Deployers_$65616_$",
                            "typeString": "type(contract Deployers)"
                          }
                        },
                        "id": 42865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2536:10:77",
                        "memberName": "createPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65370,
                        "src": "2526:20:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_PoolManager_$33031_$_t_contract$_IHooks_$33254_$_t_uint24_$_t_uint160_$returns$_t_struct$_PoolKey_$42256_memory_ptr_$_t_userDefinedValueType$_PoolId_$42208_$",
                          "typeString": "function (contract PoolManager,contract IHooks,uint24,uint160) returns (struct PoolKey memory,PoolId)"
                        }
                      },
                      "id": 42876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2526:132:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_PoolKey_$42256_memory_ptr_$_t_userDefinedValueType$_PoolId_$42208_$",
                        "typeString": "tuple(struct PoolKey memory,PoolId)"
                      }
                    },
                    "src": "2512:146:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42878,
                  "nodeType": "ExpressionStatement",
                  "src": "2512:146:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42883,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42784,
                            "src": "2710:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolManager_$33031",
                              "typeString": "contract PoolManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolManager_$33031",
                              "typeString": "contract PoolManager"
                            }
                          ],
                          "id": 42882,
                          "name": "IPoolManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33638,
                          "src": "2697:12:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPoolManager_$33638_$",
                            "typeString": "type(contract IPoolManager)"
                          }
                        },
                        "id": 42884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2697:21:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPoolManager_$33638",
                          "typeString": "contract IPoolManager"
                        }
                      ],
                      "expression": {
                        "id": 42879,
                        "name": "dynamicFeesNoHook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42781,
                        "src": "2668:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                          "typeString": "contract DynamicFeesTest"
                        }
                      },
                      "id": 42881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2686:10:77",
                      "memberName": "setManager",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38917,
                      "src": "2668:28:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IPoolManager_$33638_$returns$__$",
                        "typeString": "function (contract IPoolManager) external"
                      }
                    },
                    "id": 42885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2668:51:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42886,
                  "nodeType": "ExpressionStatement",
                  "src": "2668:51:77"
                },
                {
                  "expression": {
                    "id": 42893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42887,
                      "name": "swapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42793,
                      "src": "2730:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                        "typeString": "contract PoolSwapTest"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 42891,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42784,
                          "src": "2760:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PoolManager_$33031",
                            "typeString": "contract PoolManager"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PoolManager_$33031",
                            "typeString": "contract PoolManager"
                          }
                        ],
                        "id": 42890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2743:16:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IPoolManager_$33638_$returns$_t_contract$_PoolSwapTest_$41071_$",
                          "typeString": "function (contract IPoolManager) returns (contract PoolSwapTest)"
                        },
                        "typeName": {
                          "id": 42889,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 42888,
                            "name": "PoolSwapTest",
                            "nameLocations": [
                              "2747:12:77"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 41071,
                            "src": "2747:12:77"
                          },
                          "referencedDeclaration": 41071,
                          "src": "2747:12:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                            "typeString": "contract PoolSwapTest"
                          }
                        }
                      },
                      "id": 42892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2743:25:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                        "typeString": "contract PoolSwapTest"
                      }
                    },
                    "src": "2730:38:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                      "typeString": "contract PoolSwapTest"
                    }
                  },
                  "id": 42894,
                  "nodeType": "ExpressionStatement",
                  "src": "2730:38:77"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2092:5:77",
            "parameters": {
              "id": 42794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2097:2:77"
            },
            "returnParameters": {
              "id": 42795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2107:0:77"
            },
            "scope": 43333,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42937,
            "nodeType": "FunctionDefinition",
            "src": "2781:326:77",
            "nodes": [],
            "body": {
              "id": 42936,
              "nodeType": "Block",
              "src": "2838:269:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030",
                        "id": 42902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2867:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "id": 42899,
                        "name": "dynamicFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42734,
                        "src": "2848:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                          "typeString": "contract DynamicFeesTest"
                        }
                      },
                      "id": 42901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2860:6:77",
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38927,
                      "src": "2848:18:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint24_$returns$__$",
                        "typeString": "function (uint24) external"
                      }
                    },
                    "id": 42903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2848:27:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42904,
                  "nodeType": "ExpressionStatement",
                  "src": "2848:27:77"
                },
                {
                  "assignments": [
                    42907
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42907,
                      "mutability": "mutable",
                      "name": "key0",
                      "nameLocation": "2900:4:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 42936,
                      "src": "2885:19:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolKey_$42256_memory_ptr",
                        "typeString": "struct PoolKey"
                      },
                      "typeName": {
                        "id": 42906,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42905,
                          "name": "PoolKey",
                          "nameLocations": [
                            "2885:7:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42256,
                          "src": "2885:7:77"
                        },
                        "referencedDeclaration": 42256,
                        "src": "2885:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage_ptr",
                          "typeString": "struct PoolKey"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42919,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 42913,
                                "name": "dynamicFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42734,
                                "src": "2942:11:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                                  "typeString": "contract DynamicFeesTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                                  "typeString": "contract DynamicFeesTest"
                                }
                              ],
                              "id": 42912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2934:7:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 42911,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2934:7:77",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 42914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2934:20:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42910,
                          "name": "IHooks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33254,
                          "src": "2927:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IHooks_$33254_$",
                            "typeString": "type(contract IHooks)"
                          }
                        },
                        "id": 42915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2927:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHooks_$33254",
                          "typeString": "contract IHooks"
                        }
                      },
                      {
                        "expression": {
                          "id": 42916,
                          "name": "FeeLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34099,
                          "src": "2957:10:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FeeLibrary_$34099_$",
                            "typeString": "type(library FeeLibrary)"
                          }
                        },
                        "id": 42917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2968:16:77",
                        "memberName": "DYNAMIC_FEE_FLAG",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34024,
                        "src": "2957:27:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IHooks_$33254",
                          "typeString": "contract IHooks"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 42908,
                        "name": "Deployers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65616,
                        "src": "2907:9:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Deployers_$65616_$",
                          "typeString": "type(contract Deployers)"
                        }
                      },
                      "id": 42909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2917:9:77",
                      "memberName": "createKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65524,
                      "src": "2907:19:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IHooks_$33254_$_t_uint24_$returns$_t_struct$_PoolKey_$42256_memory_ptr_$",
                        "typeString": "function (contract IHooks,uint24) returns (struct PoolKey memory)"
                      }
                    },
                    "id": 42918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2907:78:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolKey_$42256_memory_ptr",
                      "typeString": "struct PoolKey memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2885:100:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 42923,
                            "name": "IFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33093,
                            "src": "3011:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFees_$33093_$",
                              "typeString": "type(contract IFees)"
                            }
                          },
                          "id": 42924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3017:11:77",
                          "memberName": "FeeTooLarge",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33056,
                          "src": "3011:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 42925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3029:8:77",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "3011:26:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 42920,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "2995:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12595",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2998:12:77",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12334,
                      "src": "2995:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 42926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2995:43:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42927,
                  "nodeType": "ExpressionStatement",
                  "src": "2995:43:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42931,
                        "name": "key0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42907,
                        "src": "3067:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_memory_ptr",
                          "typeString": "struct PoolKey memory"
                        }
                      },
                      {
                        "id": 42932,
                        "name": "SQRT_RATIO_1_1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65238,
                        "src": "3073:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "id": 42933,
                        "name": "ZERO_BYTES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65234,
                        "src": "3089:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_memory_ptr",
                          "typeString": "struct PoolKey memory"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 42928,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42784,
                        "src": "3048:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      "id": 42930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3056:10:77",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32014,
                      "src": "3048:18:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PoolKey_$42256_memory_ptr_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int24_$",
                        "typeString": "function (struct PoolKey memory,uint160,bytes memory) external returns (int24)"
                      }
                    },
                    "id": 42934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3048:52:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 42935,
                  "nodeType": "ExpressionStatement",
                  "src": "3048:52:77"
                }
              ]
            },
            "functionSelector": "1c7d027c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testPoolInitializeFailsWithTooLargeFee",
            "nameLocation": "2790:38:77",
            "parameters": {
              "id": 42897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2828:2:77"
            },
            "returnParameters": {
              "id": 42898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2838:0:77"
            },
            "scope": 43333,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42961,
            "nodeType": "FunctionDefinition",
            "src": "3113:187:77",
            "nodes": [],
            "body": {
              "id": 42960,
              "nodeType": "Block",
              "src": "3160:140:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030",
                        "id": 42943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3189:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "id": 42940,
                        "name": "dynamicFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42734,
                        "src": "3170:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                          "typeString": "contract DynamicFeesTest"
                        }
                      },
                      "id": 42942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3182:6:77",
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38927,
                      "src": "3170:18:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint24_$returns$__$",
                        "typeString": "function (uint24) external"
                      }
                    },
                    "id": 42944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3170:27:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42945,
                  "nodeType": "ExpressionStatement",
                  "src": "3170:27:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 42949,
                            "name": "IFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33093,
                            "src": "3223:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFees_$33093_$",
                              "typeString": "type(contract IFees)"
                            }
                          },
                          "id": 42950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3229:11:77",
                          "memberName": "FeeTooLarge",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33056,
                          "src": "3223:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 42951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3241:8:77",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "3223:26:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 42946,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "3207:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12595",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3210:12:77",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12334,
                      "src": "3207:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 42952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3207:43:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42953,
                  "nodeType": "ExpressionStatement",
                  "src": "3207:43:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42957,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42787,
                        "src": "3289:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      ],
                      "expression": {
                        "id": 42954,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42784,
                        "src": "3260:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      "id": 42956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3268:20:77",
                      "memberName": "updateDynamicSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32994,
                      "src": "3260:28:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PoolKey_$42256_memory_ptr_$returns$__$",
                        "typeString": "function (struct PoolKey memory) external"
                      }
                    },
                    "id": 42958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3260:33:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42959,
                  "nodeType": "ExpressionStatement",
                  "src": "3260:33:77"
                }
              ]
            },
            "functionSelector": "b5e5d597",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSwapFailsWithTooLargeFee",
            "nameLocation": "3122:28:77",
            "parameters": {
              "id": 42938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3150:2:77"
            },
            "returnParameters": {
              "id": 42939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3160:0:77"
            },
            "scope": 43333,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42980,
            "nodeType": "EventDefinition",
            "src": "3306:225:77",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "40e9cecb9f5f1f1c5b9c97dec2917b7ee92e57ba5563708daca94dd84ad7112f",
            "name": "Swap",
            "nameLocation": "3312:4:77",
            "parameters": {
              "id": 42979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42964,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "3341:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 42980,
                  "src": "3326:21:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PoolId_$42208",
                    "typeString": "PoolId"
                  },
                  "typeName": {
                    "id": 42963,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42962,
                      "name": "PoolId",
                      "nameLocations": [
                        "3326:6:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42208,
                      "src": "3326:6:77"
                    },
                    "referencedDeclaration": 42208,
                    "src": "3326:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PoolId_$42208",
                      "typeString": "PoolId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42966,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3373:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 42980,
                  "src": "3357:22:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3357:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42968,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "3396:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 42980,
                  "src": "3389:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 42967,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3389:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42970,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "3420:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 42980,
                  "src": "3413:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 42969,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3413:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42972,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sqrtPriceX96",
                  "nameLocation": "3445:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 42980,
                  "src": "3437:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 42971,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "3437:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42974,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "3475:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 42980,
                  "src": "3467:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 42973,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3467:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42976,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tick",
                  "nameLocation": "3500:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 42980,
                  "src": "3494:10:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 42975,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3494:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42978,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "3521:3:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 42980,
                  "src": "3514:10:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 42977,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3514:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3316:214:77"
            }
          },
          {
            "id": 43054,
            "nodeType": "FunctionDefinition",
            "src": "3537:528:77",
            "nodes": [],
            "body": {
              "id": 43053,
              "nodeType": "Block",
              "src": "3569:496:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313233",
                        "id": 42986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3598:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        "value": "123"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        }
                      ],
                      "expression": {
                        "id": 42983,
                        "name": "dynamicFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42734,
                        "src": "3579:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                          "typeString": "contract DynamicFeesTest"
                        }
                      },
                      "id": 42985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3591:6:77",
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38927,
                      "src": "3579:18:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint24_$returns$__$",
                        "typeString": "function (uint24) external"
                      }
                    },
                    "id": 42987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3579:23:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42988,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:23:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42992,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42787,
                        "src": "3641:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      ],
                      "expression": {
                        "id": 42989,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42784,
                        "src": "3612:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      "id": 42991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3620:20:77",
                      "memberName": "updateDynamicSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32994,
                      "src": "3612:28:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PoolKey_$42256_memory_ptr_$returns$__$",
                        "typeString": "function (struct PoolKey memory) external"
                      }
                    },
                    "id": 42993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3612:33:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42994,
                  "nodeType": "ExpressionStatement",
                  "src": "3612:33:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 42998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3669:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 42999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3675:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3681:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3687:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 43004,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42784,
                            "src": "3701:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolManager_$33031",
                              "typeString": "contract PoolManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolManager_$33031",
                              "typeString": "contract PoolManager"
                            }
                          ],
                          "id": 43003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3693:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43002,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3693:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3693:16:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42995,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "3655:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12595",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3658:10:77",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12369,
                      "src": "3655:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 43006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3655:55:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43007,
                  "nodeType": "ExpressionStatement",
                  "src": "3655:55:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 43009,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42787,
                            "src": "3730:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                              "typeString": "struct PoolKey storage ref"
                            }
                          },
                          "id": 43010,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3734:4:77",
                          "memberName": "toId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42229,
                          "src": "3730:8:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_PoolKey_$42256_memory_ptr_$returns$_t_userDefinedValueType$_PoolId_$42208_$attached_to$_t_struct$_PoolKey_$42256_memory_ptr_$",
                            "typeString": "function (struct PoolKey memory) pure returns (PoolId)"
                          }
                        },
                        "id": 43011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3730:10:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_PoolId_$42208",
                          "typeString": "PoolId"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43014,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42793,
                            "src": "3750:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                              "typeString": "contract PoolSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                              "typeString": "contract PoolSwapTest"
                            }
                          ],
                          "id": 43013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3742:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43012,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3742:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3742:19:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3763:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 43017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3766:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "id": 43020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43018,
                          "name": "SQRT_RATIO_1_1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65238,
                          "src": "3769:14:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 43019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3786:1:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3769:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3789:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 43022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3792:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "313233",
                        "id": 43023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3795:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        "value": "123"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_PoolId_$42208",
                          "typeString": "PoolId"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        }
                      ],
                      "id": 43008,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42980,
                      "src": "3725:4:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_userDefinedValueType$_PoolId_$42208_$_t_address_$_t_int128_$_t_int128_$_t_uint160_$_t_uint128_$_t_int24_$_t_uint24_$returns$__$",
                        "typeString": "function (PoolId,address,int128,int128,uint160,uint128,int24,uint24)"
                      }
                    },
                    "id": 43024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3725:74:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43025,
                  "nodeType": "EmitStatement",
                  "src": "3720:79:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7377617020776974682064796e616d696320666565",
                        "id": 43027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3819:23:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7df7d6ef02a2876df311cf68dd01c821518962787bf3a7e3d0ba0060eec6f54b",
                          "typeString": "literal_string \"swap with dynamic fee\""
                        },
                        "value": "swap with dynamic fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7df7d6ef02a2876df311cf68dd01c821518962787bf3a7e3d0ba0060eec6f54b",
                          "typeString": "literal_string \"swap with dynamic fee\""
                        }
                      ],
                      "id": 43026,
                      "name": "snapStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "3809:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 43028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3809:34:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43029,
                  "nodeType": "ExpressionStatement",
                  "src": "3809:34:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43033,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42787,
                        "src": "3882:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "66616c7365",
                            "id": 43036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3923:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "31",
                            "id": 43037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3930:1:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "id": 43040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 43038,
                              "name": "SQRT_RATIO_1_1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65238,
                              "src": "3933:14:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 43039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3950:1:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3933:18:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "expression": {
                            "id": 43034,
                            "name": "IPoolManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33638,
                            "src": "3899:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPoolManager_$33638_$",
                              "typeString": "type(contract IPoolManager)"
                            }
                          },
                          "id": 43035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3912:10:77",
                          "memberName": "SwapParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33536,
                          "src": "3899:23:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SwapParams_$33536_storage_ptr_$",
                            "typeString": "type(struct IPoolManager.SwapParams storage pointer)"
                          }
                        },
                        "id": 43041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3899:53:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapParams_$33536_memory_ptr",
                          "typeString": "struct IPoolManager.SwapParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "66616c7365",
                            "id": 43044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3992:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 43045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3999:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 43042,
                            "name": "PoolSwapTest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41071,
                            "src": "3966:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PoolSwapTest_$41071_$",
                              "typeString": "type(contract PoolSwapTest)"
                            }
                          },
                          "id": 43043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3979:12:77",
                          "memberName": "TestSettings",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40668,
                          "src": "3966:25:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TestSettings_$40668_storage_ptr_$",
                            "typeString": "type(struct PoolSwapTest.TestSettings storage pointer)"
                          }
                        },
                        "id": 43046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3966:39:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestSettings_$40668_memory_ptr",
                          "typeString": "struct PoolSwapTest.TestSettings memory"
                        }
                      },
                      {
                        "id": 43047,
                        "name": "ZERO_BYTES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65234,
                        "src": "4019:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_SwapParams_$33536_memory_ptr",
                          "typeString": "struct IPoolManager.SwapParams memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TestSettings_$40668_memory_ptr",
                          "typeString": "struct PoolSwapTest.TestSettings memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 43030,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42793,
                        "src": "3853:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                          "typeString": "contract PoolSwapTest"
                        }
                      },
                      "id": 43032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3864:4:77",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40730,
                      "src": "3853:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_PoolKey_$42256_memory_ptr_$_t_struct$_SwapParams_$33536_memory_ptr_$_t_struct$_TestSettings_$40668_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_BalanceDelta_$41823_$",
                        "typeString": "function (struct PoolKey memory,struct IPoolManager.SwapParams memory,struct PoolSwapTest.TestSettings memory,bytes memory) payable external returns (BalanceDelta)"
                      }
                    },
                    "id": 43048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3853:186:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$41823",
                      "typeString": "BalanceDelta"
                    }
                  },
                  "id": 43049,
                  "nodeType": "ExpressionStatement",
                  "src": "3853:186:77"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 43050,
                      "name": "snapEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "4049:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 43051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4049:9:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43052,
                  "nodeType": "ExpressionStatement",
                  "src": "4049:9:77"
                }
              ]
            },
            "functionSelector": "6b593cdd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSwapWorks",
            "nameLocation": "3546:13:77",
            "parameters": {
              "id": 42981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3559:2:77"
            },
            "returnParameters": {
              "id": 42982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3569:0:77"
            },
            "scope": 43333,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43139,
            "nodeType": "FunctionDefinition",
            "src": "4071:570:77",
            "nodes": [],
            "body": {
              "id": 43138,
              "nodeType": "Block",
              "src": "4116:525:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313233",
                        "id": 43060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4145:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        "value": "123"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        }
                      ],
                      "expression": {
                        "id": 43057,
                        "name": "dynamicFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42734,
                        "src": "4126:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                          "typeString": "contract DynamicFeesTest"
                        }
                      },
                      "id": 43059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4138:6:77",
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38927,
                      "src": "4126:18:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint24_$returns$__$",
                        "typeString": "function (uint24) external"
                      }
                    },
                    "id": 43061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4126:23:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43062,
                  "nodeType": "ExpressionStatement",
                  "src": "4126:23:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43066,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42787,
                        "src": "4188:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      ],
                      "expression": {
                        "id": 43063,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42784,
                        "src": "4159:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      "id": 43065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4167:20:77",
                      "memberName": "updateDynamicSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32994,
                      "src": "4159:28:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PoolKey_$42256_memory_ptr_$returns$__$",
                        "typeString": "function (struct PoolKey memory) external"
                      }
                    },
                    "id": 43067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4159:33:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43068,
                  "nodeType": "ExpressionStatement",
                  "src": "4159:33:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 43072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4216:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4222:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4228:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4234:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 43078,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42784,
                            "src": "4248:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolManager_$33031",
                              "typeString": "contract PoolManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolManager_$33031",
                              "typeString": "contract PoolManager"
                            }
                          ],
                          "id": 43077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4240:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43076,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4240:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4240:16:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 43069,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "4202:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12595",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 43071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4205:10:77",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12369,
                      "src": "4202:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 43080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4202:55:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43081,
                  "nodeType": "ExpressionStatement",
                  "src": "4202:55:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 43083,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42787,
                            "src": "4277:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                              "typeString": "struct PoolKey storage ref"
                            }
                          },
                          "id": 43084,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4281:4:77",
                          "memberName": "toId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42229,
                          "src": "4277:8:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_PoolKey_$42256_memory_ptr_$returns$_t_userDefinedValueType$_PoolId_$42208_$attached_to$_t_struct$_PoolKey_$42256_memory_ptr_$",
                            "typeString": "function (struct PoolKey memory) pure returns (PoolId)"
                          }
                        },
                        "id": 43085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4277:10:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_PoolId_$42208",
                          "typeString": "PoolId"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43088,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42793,
                            "src": "4297:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                              "typeString": "contract PoolSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                              "typeString": "contract PoolSwapTest"
                            }
                          ],
                          "id": 43087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4289:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43086,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4289:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4289:19:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4310:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 43091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4313:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "id": 43094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43092,
                          "name": "SQRT_RATIO_1_1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65238,
                          "src": "4316:14:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 43093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4333:1:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4316:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4336:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 43096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4339:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "343536",
                        "id": 43097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4342:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_456_by_1",
                          "typeString": "int_const 456"
                        },
                        "value": "456"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_PoolId_$42208",
                          "typeString": "PoolId"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_456_by_1",
                          "typeString": "int_const 456"
                        }
                      ],
                      "id": 43082,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42980,
                      "src": "4272:4:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_userDefinedValueType$_PoolId_$42208_$_t_address_$_t_int128_$_t_int128_$_t_uint160_$_t_uint128_$_t_int24_$_t_uint24_$returns$__$",
                        "typeString": "function (PoolId,address,int128,int128,uint160,uint128,int24,uint24)"
                      }
                    },
                    "id": 43098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4272:74:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43099,
                  "nodeType": "EmitStatement",
                  "src": "4267:79:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7570646174652064796e616d69632066656520696e206265666f72652073776170",
                        "id": 43101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4366:35:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_668a75da83ce6761a5597f949e2ea6c3321cc459bc3c0fd8a5c81eb6af97adff",
                          "typeString": "literal_string \"update dynamic fee in before swap\""
                        },
                        "value": "update dynamic fee in before swap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_668a75da83ce6761a5597f949e2ea6c3321cc459bc3c0fd8a5c81eb6af97adff",
                          "typeString": "literal_string \"update dynamic fee in before swap\""
                        }
                      ],
                      "id": 43100,
                      "name": "snapStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "4356:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 43102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4356:46:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43103,
                  "nodeType": "ExpressionStatement",
                  "src": "4356:46:77"
                },
                {
                  "assignments": [
                    43105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43105,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "4425:4:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 43138,
                      "src": "4412:17:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 43104,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4412:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43114,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 43108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4443:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "343536",
                            "id": 43111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4456:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_456_by_1",
                              "typeString": "int_const 456"
                            },
                            "value": "456"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_456_by_1",
                              "typeString": "int_const 456"
                            }
                          ],
                          "id": 43110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4449:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint24_$",
                            "typeString": "type(uint24)"
                          },
                          "typeName": {
                            "id": 43109,
                            "name": "uint24",
                            "nodeType": "ElementaryTypeName",
                            "src": "4449:6:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4449:11:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 43106,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4432:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 43107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4436:6:77",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "4432:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 43113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4432:29:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4412:49:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43118,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42787,
                        "src": "4500:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "66616c7365",
                            "id": 43121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4529:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "31",
                            "id": 43122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4536:1:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "id": 43125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 43123,
                              "name": "SQRT_RATIO_1_1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65238,
                              "src": "4539:14:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 43124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4556:1:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4539:18:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "expression": {
                            "id": 43119,
                            "name": "IPoolManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33638,
                            "src": "4505:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPoolManager_$33638_$",
                              "typeString": "type(contract IPoolManager)"
                            }
                          },
                          "id": 43120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4518:10:77",
                          "memberName": "SwapParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33536,
                          "src": "4505:23:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SwapParams_$33536_storage_ptr_$",
                            "typeString": "type(struct IPoolManager.SwapParams storage pointer)"
                          }
                        },
                        "id": 43126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4505:53:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapParams_$33536_memory_ptr",
                          "typeString": "struct IPoolManager.SwapParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "66616c7365",
                            "id": 43129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4586:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 43130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4593:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 43127,
                            "name": "PoolSwapTest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41071,
                            "src": "4560:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PoolSwapTest_$41071_$",
                              "typeString": "type(contract PoolSwapTest)"
                            }
                          },
                          "id": 43128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4573:12:77",
                          "memberName": "TestSettings",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40668,
                          "src": "4560:25:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TestSettings_$40668_storage_ptr_$",
                            "typeString": "type(struct PoolSwapTest.TestSettings storage pointer)"
                          }
                        },
                        "id": 43131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4560:39:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestSettings_$40668_memory_ptr",
                          "typeString": "struct PoolSwapTest.TestSettings memory"
                        }
                      },
                      {
                        "id": 43132,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43105,
                        "src": "4601:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_SwapParams_$33536_memory_ptr",
                          "typeString": "struct IPoolManager.SwapParams memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TestSettings_$40668_memory_ptr",
                          "typeString": "struct PoolSwapTest.TestSettings memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 43115,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42793,
                        "src": "4471:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                          "typeString": "contract PoolSwapTest"
                        }
                      },
                      "id": 43117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4482:4:77",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40730,
                      "src": "4471:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_PoolKey_$42256_memory_ptr_$_t_struct$_SwapParams_$33536_memory_ptr_$_t_struct$_TestSettings_$40668_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_BalanceDelta_$41823_$",
                        "typeString": "function (struct PoolKey memory,struct IPoolManager.SwapParams memory,struct PoolSwapTest.TestSettings memory,bytes memory) payable external returns (BalanceDelta)"
                      }
                    },
                    "id": 43133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4471:144:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$41823",
                      "typeString": "BalanceDelta"
                    }
                  },
                  "id": 43134,
                  "nodeType": "ExpressionStatement",
                  "src": "4471:144:77"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 43135,
                      "name": "snapEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "4625:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 43136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4625:9:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43137,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:9:77"
                }
              ]
            },
            "functionSelector": "00379bdf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCacheDynamicFeeAndSwap",
            "nameLocation": "4080:26:77",
            "parameters": {
              "id": 43055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4106:2:77"
            },
            "returnParameters": {
              "id": 43056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4116:0:77"
            },
            "scope": 43333,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43224,
            "nodeType": "FunctionDefinition",
            "src": "4647:585:77",
            "nodes": [],
            "body": {
              "id": 43223,
              "nodeType": "Block",
              "src": "4697:535:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313233",
                        "id": 43145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4726:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        "value": "123"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        }
                      ],
                      "expression": {
                        "id": 43142,
                        "name": "dynamicFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42734,
                        "src": "4707:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                          "typeString": "contract DynamicFeesTest"
                        }
                      },
                      "id": 43144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4719:6:77",
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38927,
                      "src": "4707:18:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint24_$returns$__$",
                        "typeString": "function (uint24) external"
                      }
                    },
                    "id": 43146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4707:23:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43147,
                  "nodeType": "ExpressionStatement",
                  "src": "4707:23:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43151,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42787,
                        "src": "4769:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      ],
                      "expression": {
                        "id": 43148,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42784,
                        "src": "4740:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      "id": 43150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4748:20:77",
                      "memberName": "updateDynamicSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32994,
                      "src": "4740:28:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PoolKey_$42256_memory_ptr_$returns$__$",
                        "typeString": "function (struct PoolKey memory) external"
                      }
                    },
                    "id": 43152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4740:33:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43153,
                  "nodeType": "ExpressionStatement",
                  "src": "4740:33:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 43157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4797:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4803:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4809:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4815:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 43163,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42784,
                            "src": "4829:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolManager_$33031",
                              "typeString": "contract PoolManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolManager_$33031",
                              "typeString": "contract PoolManager"
                            }
                          ],
                          "id": 43162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4821:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43161,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4821:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4821:16:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 43154,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "4783:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12595",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 43156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4786:10:77",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12369,
                      "src": "4783:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 43165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4783:55:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43166,
                  "nodeType": "ExpressionStatement",
                  "src": "4783:55:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 43168,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42787,
                            "src": "4858:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                              "typeString": "struct PoolKey storage ref"
                            }
                          },
                          "id": 43169,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4862:4:77",
                          "memberName": "toId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42229,
                          "src": "4858:8:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_PoolKey_$42256_memory_ptr_$returns$_t_userDefinedValueType$_PoolId_$42208_$attached_to$_t_struct$_PoolKey_$42256_memory_ptr_$",
                            "typeString": "function (struct PoolKey memory) pure returns (PoolId)"
                          }
                        },
                        "id": 43170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4858:10:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_PoolId_$42208",
                          "typeString": "PoolId"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43173,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42793,
                            "src": "4878:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                              "typeString": "contract PoolSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                              "typeString": "contract PoolSwapTest"
                            }
                          ],
                          "id": 43172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4870:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43171,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4870:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4870:19:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4891:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 43176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4894:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "id": 43179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43177,
                          "name": "SQRT_RATIO_1_1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65238,
                          "src": "4897:14:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 43178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4914:1:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4897:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4917:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 43181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4920:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "313233",
                        "id": 43182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4923:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        "value": "123"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_PoolId_$42208",
                          "typeString": "PoolId"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        }
                      ],
                      "id": 43167,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42980,
                      "src": "4853:4:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_userDefinedValueType$_PoolId_$42208_$_t_address_$_t_int128_$_t_int128_$_t_uint160_$_t_uint128_$_t_int24_$_t_uint24_$returns$__$",
                        "typeString": "function (PoolId,address,int128,int128,uint160,uint128,int24,uint24)"
                      }
                    },
                    "id": 43183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4853:74:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43184,
                  "nodeType": "EmitStatement",
                  "src": "4848:79:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6265666f7265207377617020686f6f6b2c20616c7265616479206361636865642064796e616d696320666565",
                        "id": 43186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4947:46:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97e24c7fb01efc3de409ad9fe2e40317024f47fb0eed2b6daf6daaf02a2f92da",
                          "typeString": "literal_string \"before swap hook, already cached dynamic fee\""
                        },
                        "value": "before swap hook, already cached dynamic fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_97e24c7fb01efc3de409ad9fe2e40317024f47fb0eed2b6daf6daaf02a2f92da",
                          "typeString": "literal_string \"before swap hook, already cached dynamic fee\""
                        }
                      ],
                      "id": 43185,
                      "name": "snapStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "4937:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 43187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4937:57:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43188,
                  "nodeType": "ExpressionStatement",
                  "src": "4937:57:77"
                },
                {
                  "assignments": [
                    43190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43190,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "5017:4:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 43223,
                      "src": "5004:17:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 43189,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5004:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43199,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 43193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5035:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 43196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5049:1:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 43195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5042:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint24_$",
                            "typeString": "type(uint24)"
                          },
                          "typeName": {
                            "id": 43194,
                            "name": "uint24",
                            "nodeType": "ElementaryTypeName",
                            "src": "5042:6:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5042:9:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 43191,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5024:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 43192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5028:6:77",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "5024:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 43198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5024:28:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5004:48:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43203,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42787,
                        "src": "5091:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "66616c7365",
                            "id": 43206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5120:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "31",
                            "id": 43207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5127:1:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "id": 43210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 43208,
                              "name": "SQRT_RATIO_1_1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65238,
                              "src": "5130:14:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 43209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5147:1:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5130:18:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "expression": {
                            "id": 43204,
                            "name": "IPoolManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33638,
                            "src": "5096:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPoolManager_$33638_$",
                              "typeString": "type(contract IPoolManager)"
                            }
                          },
                          "id": 43205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5109:10:77",
                          "memberName": "SwapParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33536,
                          "src": "5096:23:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SwapParams_$33536_storage_ptr_$",
                            "typeString": "type(struct IPoolManager.SwapParams storage pointer)"
                          }
                        },
                        "id": 43211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5096:53:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapParams_$33536_memory_ptr",
                          "typeString": "struct IPoolManager.SwapParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "66616c7365",
                            "id": 43214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5177:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 43215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5184:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 43212,
                            "name": "PoolSwapTest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41071,
                            "src": "5151:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PoolSwapTest_$41071_$",
                              "typeString": "type(contract PoolSwapTest)"
                            }
                          },
                          "id": 43213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5164:12:77",
                          "memberName": "TestSettings",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40668,
                          "src": "5151:25:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TestSettings_$40668_storage_ptr_$",
                            "typeString": "type(struct PoolSwapTest.TestSettings storage pointer)"
                          }
                        },
                        "id": 43216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5151:39:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestSettings_$40668_memory_ptr",
                          "typeString": "struct PoolSwapTest.TestSettings memory"
                        }
                      },
                      {
                        "id": 43217,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43190,
                        "src": "5192:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_SwapParams_$33536_memory_ptr",
                          "typeString": "struct IPoolManager.SwapParams memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TestSettings_$40668_memory_ptr",
                          "typeString": "struct PoolSwapTest.TestSettings memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 43200,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42793,
                        "src": "5062:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                          "typeString": "contract PoolSwapTest"
                        }
                      },
                      "id": 43202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5073:4:77",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40730,
                      "src": "5062:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_PoolKey_$42256_memory_ptr_$_t_struct$_SwapParams_$33536_memory_ptr_$_t_struct$_TestSettings_$40668_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_BalanceDelta_$41823_$",
                        "typeString": "function (struct PoolKey memory,struct IPoolManager.SwapParams memory,struct PoolSwapTest.TestSettings memory,bytes memory) payable external returns (BalanceDelta)"
                      }
                    },
                    "id": 43218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5062:144:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$41823",
                      "typeString": "BalanceDelta"
                    }
                  },
                  "id": 43219,
                  "nodeType": "ExpressionStatement",
                  "src": "5062:144:77"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 43220,
                      "name": "snapEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "5216:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 43221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5216:9:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43222,
                  "nodeType": "ExpressionStatement",
                  "src": "5216:9:77"
                }
              ]
            },
            "functionSelector": "d36bfbcf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDynamicFeeAndBeforeSwapHook",
            "nameLocation": "4656:31:77",
            "parameters": {
              "id": 43140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4687:2:77"
            },
            "returnParameters": {
              "id": 43141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4697:0:77"
            },
            "scope": 43333,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43258,
            "nodeType": "FunctionDefinition",
            "src": "5238:281:77",
            "nodes": [],
            "body": {
              "id": 43257,
              "nodeType": "Block",
              "src": "5289:230:77",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    43229,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43229,
                      "mutability": "mutable",
                      "name": "staticPoolKey",
                      "nameLocation": "5315:13:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 43257,
                      "src": "5300:28:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolKey_$42256_memory_ptr",
                        "typeString": "struct PoolKey"
                      },
                      "typeName": {
                        "id": 43228,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 43227,
                          "name": "PoolKey",
                          "nameLocations": [
                            "5300:7:77"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42256,
                          "src": "5300:7:77"
                        },
                        "referencedDeclaration": 42256,
                        "src": "5300:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage_ptr",
                          "typeString": "struct PoolKey"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 43242,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 43232,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42784,
                        "src": "5354:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 43236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5378:1:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 43235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5370:7:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 43234,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5370:7:77",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5370:10:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43233,
                          "name": "IHooks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33254,
                          "src": "5363:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IHooks_$33254_$",
                            "typeString": "type(contract IHooks)"
                          }
                        },
                        "id": 43238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5363:18:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHooks_$33254",
                          "typeString": "contract IHooks"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 43239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5383:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "id": 43240,
                        "name": "SQRT_RATIO_1_1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65238,
                        "src": "5389:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        },
                        {
                          "typeIdentifier": "t_contract$_IHooks_$33254",
                          "typeString": "contract IHooks"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "expression": {
                        "id": 43230,
                        "name": "Deployers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65616,
                        "src": "5333:9:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Deployers_$65616_$",
                          "typeString": "type(contract Deployers)"
                        }
                      },
                      "id": 43231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5343:10:77",
                      "memberName": "createPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65370,
                      "src": "5333:20:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_PoolManager_$33031_$_t_contract$_IHooks_$33254_$_t_uint24_$_t_uint160_$returns$_t_struct$_PoolKey_$42256_memory_ptr_$_t_userDefinedValueType$_PoolId_$42208_$",
                        "typeString": "function (contract PoolManager,contract IHooks,uint24,uint160) returns (struct PoolKey memory,PoolId)"
                      }
                    },
                    "id": 43241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5333:71:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_PoolKey_$42256_memory_ptr_$_t_userDefinedValueType$_PoolId_$42208_$",
                      "typeString": "tuple(struct PoolKey memory,PoolId)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5299:105:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 43246,
                            "name": "IFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33093,
                            "src": "5430:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFees_$33093_$",
                              "typeString": "type(contract IFees)"
                            }
                          },
                          "id": 43247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5436:13:77",
                          "memberName": "FeeNotDynamic",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33062,
                          "src": "5430:19:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 43248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5450:8:77",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "5430:28:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 43243,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "5414:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12595",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 43245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5417:12:77",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12334,
                      "src": "5414:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 43249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5414:45:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43250,
                  "nodeType": "ExpressionStatement",
                  "src": "5414:45:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43254,
                        "name": "staticPoolKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43229,
                        "src": "5498:13:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_memory_ptr",
                          "typeString": "struct PoolKey memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_memory_ptr",
                          "typeString": "struct PoolKey memory"
                        }
                      ],
                      "expression": {
                        "id": 43251,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42784,
                        "src": "5469:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      "id": 43253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5477:20:77",
                      "memberName": "updateDynamicSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32994,
                      "src": "5469:28:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PoolKey_$42256_memory_ptr_$returns$__$",
                        "typeString": "function (struct PoolKey memory) external"
                      }
                    },
                    "id": 43255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5469:43:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43256,
                  "nodeType": "ExpressionStatement",
                  "src": "5469:43:77"
                }
              ]
            },
            "functionSelector": "37e0a9ad",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testUpdateRevertsOnStaticFeePool",
            "nameLocation": "5247:32:77",
            "parameters": {
              "id": 43225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5279:2:77"
            },
            "returnParameters": {
              "id": 43226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5289:0:77"
            },
            "scope": 43333,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43332,
            "nodeType": "FunctionDefinition",
            "src": "5525:563:77",
            "nodes": [],
            "body": {
              "id": 43331,
              "nodeType": "Block",
              "src": "5576:512:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313233",
                        "id": 43264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5611:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        "value": "123"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        }
                      ],
                      "expression": {
                        "id": 43261,
                        "name": "dynamicFeesNoHook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42781,
                        "src": "5586:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DynamicFeesTest_$39003",
                          "typeString": "contract DynamicFeesTest"
                        }
                      },
                      "id": 43263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5604:6:77",
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38927,
                      "src": "5586:24:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint24_$returns$__$",
                        "typeString": "function (uint24) external"
                      }
                    },
                    "id": 43265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5586:29:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43266,
                  "nodeType": "ExpressionStatement",
                  "src": "5586:29:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43270,
                        "name": "key2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42790,
                        "src": "5654:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      ],
                      "expression": {
                        "id": 43267,
                        "name": "manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42784,
                        "src": "5625:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolManager_$33031",
                          "typeString": "contract PoolManager"
                        }
                      },
                      "id": 43269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5633:20:77",
                      "memberName": "updateDynamicSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32994,
                      "src": "5625:28:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PoolKey_$42256_memory_ptr_$returns$__$",
                        "typeString": "function (struct PoolKey memory) external"
                      }
                    },
                    "id": 43271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5625:34:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43272,
                  "nodeType": "ExpressionStatement",
                  "src": "5625:34:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 43276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5683:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5689:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5695:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5701:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 43282,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42784,
                            "src": "5715:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolManager_$33031",
                              "typeString": "contract PoolManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolManager_$33031",
                              "typeString": "contract PoolManager"
                            }
                          ],
                          "id": 43281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5707:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43280,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5707:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5707:16:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 43273,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "5669:2:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12595",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 43275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5672:10:77",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12369,
                      "src": "5669:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 43284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5669:55:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43285,
                  "nodeType": "ExpressionStatement",
                  "src": "5669:55:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 43287,
                            "name": "key2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42790,
                            "src": "5744:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                              "typeString": "struct PoolKey storage ref"
                            }
                          },
                          "id": 43288,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5749:4:77",
                          "memberName": "toId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42229,
                          "src": "5744:9:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_PoolKey_$42256_memory_ptr_$returns$_t_userDefinedValueType$_PoolId_$42208_$attached_to$_t_struct$_PoolKey_$42256_memory_ptr_$",
                            "typeString": "function (struct PoolKey memory) pure returns (PoolId)"
                          }
                        },
                        "id": 43289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5744:11:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_PoolId_$42208",
                          "typeString": "PoolId"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43292,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42793,
                            "src": "5765:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                              "typeString": "contract PoolSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                              "typeString": "contract PoolSwapTest"
                            }
                          ],
                          "id": 43291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5757:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43290,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5757:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5757:19:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5778:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 43295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5781:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "id": 43298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43296,
                          "name": "SQRT_RATIO_1_1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65238,
                          "src": "5784:14:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 43297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5801:1:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5784:18:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 43299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5804:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 43300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5807:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "313233",
                        "id": 43301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5810:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        "value": "123"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_PoolId_$42208",
                          "typeString": "PoolId"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        }
                      ],
                      "id": 43286,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42980,
                      "src": "5739:4:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_userDefinedValueType$_PoolId_$42208_$_t_address_$_t_int128_$_t_int128_$_t_uint160_$_t_uint128_$_t_int24_$_t_uint24_$returns$__$",
                        "typeString": "function (PoolId,address,int128,int128,uint160,uint128,int24,uint24)"
                      }
                    },
                    "id": 43302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5739:75:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43303,
                  "nodeType": "EmitStatement",
                  "src": "5734:80:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6361636865642064796e616d6963206665652c206e6f20686f6f6b73",
                        "id": 43305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5834:30:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3be32f4c7dcd58f6189a818c72ff7b15a7919728ad3808d64e08343269e1b6a0",
                          "typeString": "literal_string \"cached dynamic fee, no hooks\""
                        },
                        "value": "cached dynamic fee, no hooks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3be32f4c7dcd58f6189a818c72ff7b15a7919728ad3808d64e08343269e1b6a0",
                          "typeString": "literal_string \"cached dynamic fee, no hooks\""
                        }
                      ],
                      "id": 43304,
                      "name": "snapStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "5824:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 43306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5824:41:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43307,
                  "nodeType": "ExpressionStatement",
                  "src": "5824:41:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43311,
                        "name": "key2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42790,
                        "src": "5904:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "66616c7365",
                            "id": 43314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5946:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "31",
                            "id": 43315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5953:1:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "id": 43318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 43316,
                              "name": "SQRT_RATIO_1_1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65238,
                              "src": "5956:14:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 43317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5973:1:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5956:18:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "expression": {
                            "id": 43312,
                            "name": "IPoolManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33638,
                            "src": "5922:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPoolManager_$33638_$",
                              "typeString": "type(contract IPoolManager)"
                            }
                          },
                          "id": 43313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5935:10:77",
                          "memberName": "SwapParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33536,
                          "src": "5922:23:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SwapParams_$33536_storage_ptr_$",
                            "typeString": "type(struct IPoolManager.SwapParams storage pointer)"
                          }
                        },
                        "id": 43319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5922:53:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapParams_$33536_memory_ptr",
                          "typeString": "struct IPoolManager.SwapParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "66616c7365",
                            "id": 43322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6015:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 43323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6022:5:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 43320,
                            "name": "PoolSwapTest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41071,
                            "src": "5989:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PoolSwapTest_$41071_$",
                              "typeString": "type(contract PoolSwapTest)"
                            }
                          },
                          "id": 43321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6002:12:77",
                          "memberName": "TestSettings",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40668,
                          "src": "5989:25:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TestSettings_$40668_storage_ptr_$",
                            "typeString": "type(struct PoolSwapTest.TestSettings storage pointer)"
                          }
                        },
                        "id": 43324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5989:39:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestSettings_$40668_memory_ptr",
                          "typeString": "struct PoolSwapTest.TestSettings memory"
                        }
                      },
                      {
                        "id": 43325,
                        "name": "ZERO_BYTES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65234,
                        "src": "6042:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolKey_$42256_storage",
                          "typeString": "struct PoolKey storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_SwapParams_$33536_memory_ptr",
                          "typeString": "struct IPoolManager.SwapParams memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TestSettings_$40668_memory_ptr",
                          "typeString": "struct PoolSwapTest.TestSettings memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 43308,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42793,
                        "src": "5875:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolSwapTest_$41071",
                          "typeString": "contract PoolSwapTest"
                        }
                      },
                      "id": 43310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5886:4:77",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40730,
                      "src": "5875:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_PoolKey_$42256_memory_ptr_$_t_struct$_SwapParams_$33536_memory_ptr_$_t_struct$_TestSettings_$40668_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_userDefinedValueType$_BalanceDelta_$41823_$",
                        "typeString": "function (struct PoolKey memory,struct IPoolManager.SwapParams memory,struct PoolSwapTest.TestSettings memory,bytes memory) payable external returns (BalanceDelta)"
                      }
                    },
                    "id": 43326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5875:187:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$41823",
                      "typeString": "BalanceDelta"
                    }
                  },
                  "id": 43327,
                  "nodeType": "ExpressionStatement",
                  "src": "5875:187:77"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 43328,
                      "name": "snapEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "6072:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 43329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6072:9:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43330,
                  "nodeType": "ExpressionStatement",
                  "src": "6072:9:77"
                }
              ]
            },
            "functionSelector": "bf64ad28",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDynamicFeesCacheNoOtherHooks",
            "nameLocation": "5534:32:77",
            "parameters": {
              "id": 43259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5566:2:77"
            },
            "returnParameters": {
              "id": 43260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5576:0:77"
            },
            "scope": 43333,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 42682,
              "name": "Test",
              "nameLocations": [
                "934:4:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11275,
              "src": "934:4:77"
            },
            "id": 42683,
            "nodeType": "InheritanceSpecifier",
            "src": "934:4:77"
          },
          {
            "baseName": {
              "id": 42684,
              "name": "Deployers",
              "nameLocations": [
                "940:9:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65616,
              "src": "940:9:77"
            },
            "id": 42685,
            "nodeType": "InheritanceSpecifier",
            "src": "940:9:77"
          },
          {
            "baseName": {
              "id": 42686,
              "name": "GasSnapshot",
              "nameLocations": [
                "951:11:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 399,
              "src": "951:11:77"
            },
            "id": 42687,
            "nodeType": "InheritanceSpecifier",
            "src": "951:11:77"
          }
        ],
        "canonicalName": "TestDynamicFees",
        "contractDependencies": [
          30647,
          33031,
          39003,
          41071
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43333,
          399,
          2388,
          2351,
          65616,
          11275,
          2339,
          2336,
          11226,
          7025,
          6735,
          6056,
          4484,
          3790,
          2279
        ],
        "name": "TestDynamicFees",
        "nameLocation": "915:15:77",
        "scope": 43334,
        "usedErrors": [
          14,
          405
        ],
        "usedEvents": [
          498,
          502,
          506,
          510,
          514,
          518,
          522,
          526,
          532,
          538,
          546,
          554,
          560,
          566,
          572,
          578,
          2401,
          2406,
          2411,
          2418,
          2425,
          2432,
          42980
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 77
}